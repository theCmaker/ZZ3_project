Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 16.33      0.08     0.08   687542     0.00     0.00  Interceptor::computeAlpha(double, double, double)
 16.33      0.16     0.08   687542     0.00     0.00  Interceptor::computeInterception(Location, Mobile const&, double) const
 14.29      0.23     0.07   288806     0.00     0.00  Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const
 12.25      0.29     0.06  1980674     0.00     0.00  Location::equals(Location const&, double) const
  6.12      0.32     0.03  2313454     0.00     0.00  std::isfinite(double)
  4.08      0.34     0.02  2915541     0.00     0.00  Mobile::position(double) const
  4.08      0.36     0.02  1112904     0.00     0.00  Solution::const_iterator::operator++()
  3.06      0.38     0.02   529147     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const
  2.04      0.39     0.01  2082916     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const
  2.04      0.40     0.01  2028902     0.00     0.00  Solution::const_iterator::~const_iterator()
  2.04      0.41     0.01  1937360     0.00     0.00  Mobile::id() const
  2.04      0.42     0.01  1293132     0.00     0.00  Interceptor::computePosition(double, Location&, double) const
  2.04      0.43     0.01  1292340     0.00     0.00  Solution::const_iterator::operator!=(Solution::const_iterator)
  2.04      0.44     0.01   524860     0.00     0.00  Solution::end(Interceptor const&) const
  2.04      0.45     0.01   147941     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::size() const
  2.04      0.46     0.01   130433     0.00     0.00  Solution::mobile(unsigned int) const
  2.04      0.47     0.01     2997     0.00     0.01  MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&)
  2.04      0.48     0.01                             Move::~Move()
  2.04      0.49     0.01                             Problem::nbDepots() const
  1.02      0.49     0.01    57971     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const
  0.00      0.49     0.00  2973506     0.00     0.00  Location::Location(double, double)
  0.00      0.49     0.00  2588285     0.00     0.00  Solution::const_iterator::operator->() const
  0.00      0.49     0.00  1261422     0.00     0.00  Solution::const_iterator::const_iterator(Solution::MobileNode const*)
  0.00      0.49     0.00  1057410     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const
  0.00      0.49     0.00   943031     0.00     0.00  Interceptor::id() const
  0.00      0.49     0.00   687547     0.00     0.00  std::numeric_limits<double>::infinity()
  0.00      0.49     0.00   687544     0.00     0.00  Depot::position() const
  0.00      0.49     0.00   687542     0.00     0.00  Interceptor::timeFromTo(Location const&, Location const&) const
  0.00      0.49     0.00   687542     0.00     0.00  Mobile::direction() const
  0.00      0.49     0.00   581315     0.00     0.00  Problem::interceptors() const
  0.00      0.49     0.00   272806     0.00     0.00  Solution::lastOfRoute(Interceptor const&) const
  0.00      0.49     0.00   254864     0.00     0.00  Solution::lastInterceptionTime(Interceptor const&) const
  0.00      0.49     0.00   224835     0.00     0.00  FirstAvailablePolicy::keepOn()
  0.00      0.49     0.00   188296     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long)
  0.00      0.49     0.00   159896     0.00     0.00  BestAvailablePolicy::keepOn()
  0.00      0.49     0.00   147940     0.00     0.00  Problem::nbInterceptors() const
  0.00      0.49     0.00   144897     0.00     0.00  Interceptor::position() const
  0.00      0.49     0.00   131904     0.00     0.00  Solution::lastInterceptionTime(int) const
  0.00      0.49     0.00   129870     0.00     0.00  Solution::iterator::operator->()
  0.00      0.49     0.00   124443     0.00     0.00  Problem::mobiles() const
  0.00      0.49     0.00   121980     0.00     0.00  Solution::begin(Interceptor const&) const
  0.00      0.49     0.00   113952     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::base() const
  0.00      0.49     0.00    78252     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::base() const
  0.00      0.49     0.00    66472     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::__normal_iterator(Mobile const* const&)
  0.00      0.49     0.00    62265     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const
  0.00      0.49     0.00    56976     0.00     0.00  bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&)
  0.00      0.49     0.00    56976     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::end() const
  0.00      0.49     0.00    52459     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::operator[](unsigned long)
  0.00      0.49     0.00    52168     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&)
  0.00      0.49     0.00    49950     0.00     0.00  Solution::iterator::iterator(Solution::MobileNode*)
  0.00      0.49     0.00    49950     0.00     0.00  Solution::iterator::~iterator()
  0.00      0.49     0.00    47480     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++()
  0.00      0.49     0.00    47480     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const
  0.00      0.49     0.00    47465     0.00     0.00  Solution::isCaught(Mobile const&) const
  0.00      0.49     0.00    42499     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::size() const
  0.00      0.49     0.00    42489     0.00     0.00  Solution::problem() const
  0.00      0.49     0.00    39960     0.00     0.00  Solution::end(Interceptor const&)
  0.00      0.49     0.00    39960     0.00     0.00  Solution::iterator::operator!=(Solution::iterator)
  0.00      0.49     0.00    39126     0.00     0.00  bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&)
  0.00      0.49     0.00    39120     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::cend() const
  0.00      0.49     0.00    33486     0.00     0.00  AvailablePolicy::maxAcceptableTime()
  0.00      0.49     0.00    29970     0.00     0.00  Solution::iterator::operator++()
  0.00      0.49     0.00    26084     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++()
  0.00      0.49     0.00    22983     0.00     0.00  BestAvailablePolicy::reset()
  0.00      0.49     0.00    20992     0.00     0.00  Solution::firstOfRoute(Interceptor const&) const
  0.00      0.49     0.00    19486     0.00     0.00  FirstAvailablePolicy::reset()
  0.00      0.49     0.00    18986     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::__normal_iterator(Mobile const** const&)
  0.00      0.49     0.00    18986     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::base() const
  0.00      0.49     0.00    17481     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long)
  0.00      0.49     0.00    13483     0.00     0.00  Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&)
  0.00      0.49     0.00    13483     0.00     0.00  Solution::remove(Mobile const&)
  0.00      0.49     0.00    13483     0.00     0.00  Solution::remove(unsigned int)
  0.00      0.49     0.00    13040     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const
  0.00      0.49     0.00     9990     0.00     0.00  Solution::recomputeFrom(unsigned int)
  0.00      0.49     0.00     9496     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::begin() const
  0.00      0.49     0.00     9493     0.00     0.00  __gnu_cxx::new_allocator<Mobile const*>::new_allocator()
  0.00      0.49     0.00     9493     0.00     0.00  __gnu_cxx::new_allocator<Mobile const*>::~new_allocator()
  0.00      0.49     0.00     9493     0.00     0.00  bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&)
  0.00      0.49     0.00     9493     0.00     0.00  Solution::uncaughtMobiles() const
  0.00      0.49     0.00     9493     0.00     0.00  std::allocator<Mobile const*>::allocator()
  0.00      0.49     0.00     9493     0.00     0.00  std::allocator<Mobile const*>::~allocator()
  0.00      0.49     0.00     9493     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Mobile const**>(Mobile const**, Mobile const**)
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_deallocate(Mobile const**, unsigned long)
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_base()
  0.00      0.49     0.00     9493     0.00     0.00  std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base()
  0.00      0.49     0.00     9493     0.00     0.00  std::vector<Mobile const*, std::allocator<Mobile const*> >::end()
  0.00      0.49     0.00     9493     0.00     0.00  std::vector<Mobile const*, std::allocator<Mobile const*> >::begin()
  0.00      0.49     0.00     9493     0.00     0.00  std::vector<Mobile const*, std::allocator<Mobile const*> >::vector()
  0.00      0.49     0.00     9493     0.00     0.00  std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector()
  0.00      0.49     0.00     9493     0.00     0.00  void std::_Destroy<Mobile const**>(Mobile const**, Mobile const**)
  0.00      0.49     0.00     9493     0.00     0.00  void std::_Destroy<Mobile const**, Mobile const*>(Mobile const**, Mobile const**, std::allocator<Mobile const*>&)
  0.00      0.49     0.00     6994     0.00     0.00  BestAvailablePolicy::update(double, double&, unsigned int, unsigned int&)
  0.00      0.49     0.00     6497     0.00     0.00  Solution::recomputeFrom(Mobile const&)
  0.00      0.49     0.00     6494     0.00     0.00  BestAvailablePolicy::update(double, double&)
  0.00      0.49     0.00     5016     0.00     0.00  Solution::worstInterceptionTime() const
  0.00      0.49     0.00     4496     0.00     0.00  MoveInsert<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     4494     0.00     0.00  FirstAvailablePolicy::update(double, double&)
  0.00      0.49     0.00     4017     0.00     0.00  Solution::totalInterceptionCount() const
  0.00      0.49     0.00     4007     0.00     0.00  AvailablePolicy::minAcceptableCount()
  0.00      0.49     0.00     3999     0.00     0.02  MoveMove1Route<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     3999     0.00     0.00  MoveMove1Route<BestAvailablePolicy>::commit(Solution&)
  0.00      0.49     0.00     3997     0.00     0.00  MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     3997     0.00     0.03  Move2Opt<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     3997     0.00     0.00  Solution::worstRoute() const
  0.00      0.49     0.00     3997     0.00     0.00  Solution::first() const
  0.00      0.49     0.00     3996     0.00     0.01  MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     3497     0.00     0.00  MoveExtract<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     3493     0.00     0.00  Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&)
  0.00      0.49     0.00     3493     0.00     0.00  Solution::mobile(unsigned int)
  0.00      0.49     0.00     3493     0.00     0.00  Solution::operator[](unsigned int)
  0.00      0.49     0.00     2998     0.00     0.00  MoveReplace<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     2998     0.00     0.03  MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     2498     0.00     0.01  MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     2498     0.00     0.00  MoveMove1Route<FirstAvailablePolicy>::commit(Solution&)
  0.00      0.49     0.00     1999     0.00     0.00  MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     1996     0.00     0.00  MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&)
  0.00      0.49     0.00     1686     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const
  0.00      0.49     0.00     1499     0.00     0.00  MoveReplace<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     1499     0.00     0.03  Move2Opt<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00     1497     0.00     0.00  MoveSwap1Route<BestAvailablePolicy>::commit(Solution&)
  0.00      0.49     0.00     1000     0.00     0.00  FirstAvailablePolicy::update(double, double&, unsigned int, unsigned int&)
  0.00      0.49     0.00      999     0.00     0.03  MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00      922     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const
  0.00      0.49     0.00      751     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.49     0.00      726     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const
  0.00      0.49     0.00      636     0.00     0.00  std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&)
  0.00      0.49     0.00      616     0.00     0.00  bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&)
  0.00      0.49     0.00      500     0.00     0.00  MoveInsert<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00      500     0.00     0.00  MoveExtract<FirstAvailablePolicy>::scan(Solution const&)
  0.00      0.49     0.00      456     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&)
  0.00      0.49     0.00      450     0.00     0.00  bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&)
  0.00      0.49     0.00      400     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++()
  0.00      0.49     0.00      400     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const
  0.00      0.49     0.00      351     0.00     0.00  unsigned int* std::__addressof<unsigned int>(unsigned int&)
  0.00      0.49     0.00      344     0.00     0.00  void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&)
  0.00      0.49     0.00      344     0.00     0.00  unsigned int const& std::forward<unsigned int const&>(std::remove_reference<unsigned int const&>::type&)
  0.00      0.49     0.00      331     0.00     0.00  Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&)
  0.00      0.49     0.00      331     0.00     0.00  unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&)
  0.00      0.49     0.00      330     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++()
  0.00      0.49     0.00      253     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const
  0.00      0.49     0.00      220     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&)
  0.00      0.49     0.00      183     0.00     0.00  void std::swap<unsigned int>(unsigned int&, unsigned int&)
  0.00      0.49     0.00      183     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00      180     0.00     0.00  __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::base() const
  0.00      0.49     0.00      180     0.00     0.00  __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::base() const
  0.00      0.49     0.00      160     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned long)
  0.00      0.49     0.00      154     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::end()
  0.00      0.49     0.00      132     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::base() const
  0.00      0.49     0.00      117     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&)
  0.00      0.49     0.00      112     0.00     0.00  double& std::forward<double&>(std::remove_reference<double&>::type&)
  0.00      0.49     0.00      105     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()
  0.00      0.49     0.00      100     0.00     0.00  __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move** const&)
  0.00      0.49     0.00       96     0.00     0.00  std::_Function_base::_M_empty() const
  0.00      0.49     0.00       96     0.00     0.00  std::_Any_data::_M_access() const
  0.00      0.49     0.00       90     0.00     0.00  bool __gnu_cxx::operator!=<Move* const*, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&)
  0.00      0.49     0.00       90     0.00     0.00  bool __gnu_cxx::operator!=<Move**, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&)
  0.00      0.49     0.00       90     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::end()
  0.00      0.49     0.00       87     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::~new_allocator()
  0.00      0.49     0.00       87     0.00     0.00  std::allocator<unsigned int>::~allocator()
  0.00      0.49     0.00       87     0.00     0.00  Move** std::__addressof<Move*>(Move*&)
  0.00      0.49     0.00       87     0.00     0.00  std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
  0.00      0.49     0.00       83     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&)
  0.00      0.49     0.00       83     0.00     0.00  std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&)
  0.00      0.49     0.00       80     0.00     0.00  Move::Move()
  0.00      0.49     0.00       80     0.00     0.00  Move::~Move()
  0.00      0.49     0.00       80     0.00     0.00  void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&)
  0.00      0.49     0.00       80     0.00     0.00  void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&)
  0.00      0.49     0.00       80     0.00     0.00  __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator++()
  0.00      0.49     0.00       80     0.00     0.00  __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator++()
  0.00      0.49     0.00       80     0.00     0.00  __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator*() const
  0.00      0.49     0.00       80     0.00     0.00  __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator*() const
  0.00      0.49     0.00       80     0.00     0.00  std::function<Move* ()>::operator()() const
  0.00      0.49     0.00       80     0.00     0.00  _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_
  0.00      0.49     0.00       80     0.00     0.00  _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_
  0.00      0.49     0.00       80     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&)
  0.00      0.49     0.00       80     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&)
  0.00      0.49     0.00       80     0.00     0.00  void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&)
  0.00      0.49     0.00       80     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&)
  0.00      0.49     0.00       80     0.00     0.00  std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::operator[](unsigned long)
  0.00      0.49     0.00       80     0.00     0.00  void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&)
  0.00      0.49     0.00       80     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&)
  0.00      0.49     0.00       80     0.00     0.00  void std::_Construct<Move*, Move* const&>(Move**, Move* const&)
  0.00      0.49     0.00       80     0.00     0.00  Move* const& std::forward<Move* const&>(std::remove_reference<Move* const&>::type&)
  0.00      0.49     0.00       70     0.00     0.00  std::vector<double, std::allocator<double> >::operator[](unsigned long)
  0.00      0.49     0.00       70     0.00     0.00  std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&)
  0.00      0.49     0.00       66     0.00     0.00  bool __gnu_cxx::operator!=<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&)
  0.00      0.49     0.00       66     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::base() const
  0.00      0.49     0.00       64     0.00     0.00  std::_Any_data::_M_access()
  0.00      0.49     0.00       62     0.00     0.00  Solution::MobileNode* std::__addressof<Solution::MobileNode>(Solution::MobileNode&)
  0.00      0.49     0.00       60     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::size() const
  0.00      0.49     0.00       58     0.00     0.00  void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*)
  0.00      0.49     0.00       58     0.00     0.00  void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)
  0.00      0.49     0.00       58     0.00     0.00  void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)
  0.00      0.49     0.00       56     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::end() const
  0.00      0.49     0.00       56     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::begin() const
  0.00      0.49     0.00       55     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator++()
  0.00      0.49     0.00       55     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::max_size() const
  0.00      0.49     0.00       55     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator*() const
  0.00      0.49     0.00       55     0.00     0.00  void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&)
  0.00      0.49     0.00       55     0.00     0.00  Solution::MobileNode const& std::forward<Solution::MobileNode const&>(std::remove_reference<Solution::MobileNode const&>::type&)
  0.00      0.49     0.00       50     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long)
  0.00      0.49     0.00       48     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00       48     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long)
  0.00      0.49     0.00       47     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long)
  0.00      0.49     0.00       47     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*)
  0.00      0.49     0.00       47     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long)
  0.00      0.49     0.00       47     0.00     0.00  std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long)
  0.00      0.49     0.00       47     0.00     0.00  std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned long)
  0.00      0.49     0.00       46     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::begin()
  0.00      0.49     0.00       44     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00       44     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()
  0.00      0.49     0.00       44     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::~vector()
  0.00      0.49     0.00       43     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&)
  0.00      0.49     0.00       41     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned long)
  0.00      0.49     0.00       41     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&)
  0.00      0.49     0.00       40     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_S_select_on_copy(std::allocator<unsigned int> const&)
  0.00      0.49     0.00       40     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr()
  0.00      0.49     0.00       40     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr()
  0.00      0.49     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::base() const
  0.00      0.49     0.00       40     0.00     0.00  std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr()
  0.00      0.49     0.00       40     0.00     0.00  std::allocator_traits<std::allocator<unsigned int> >::select_on_container_copy_construction(std::allocator<unsigned int> const&)
  0.00      0.49     0.00       40     0.00     0.00  std::allocator<unsigned int> const std::allocator_traits<std::allocator<unsigned int> >::_S_select<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, ...)
  0.00      0.49     0.00       40     0.00     0.00  unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*)
  0.00      0.49     0.00       40     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&)
  0.00      0.49     0.00       40     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator()
  0.00      0.49     0.00       40     0.00     0.00  unsigned int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*)
  0.00      0.49     0.00       40     0.00     0.00  unsigned int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, std::allocator<unsigned int>&)
  0.00      0.49     0.00       39     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00       37     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_right(std::_Rb_tree_node_base*)
  0.00      0.49     0.00       36     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() const
  0.00      0.49     0.00       36     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() const
  0.00      0.49     0.00       36     0.00     0.00  std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()(std::pair<char const* const, BenchmarkResult> const&) const
  0.00      0.49     0.00       36     0.00     0.00  std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const
  0.00      0.49     0.00       36     0.00     0.00  std::less<char const*>::operator()(char const* const&, char const* const&) const
  0.00      0.49     0.00       36     0.00     0.00  unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&)
  0.00      0.49     0.00       33     0.00     0.00  bool __gnu_cxx::operator!=<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&)
  0.00      0.49     0.00       32     0.00     0.00  std::_Function_base::_Function_base()
  0.00      0.49     0.00       32     0.00     0.00  std::_Function_base::~_Function_base()
  0.00      0.49     0.00       32     0.00     0.00  std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function()
  0.00      0.49     0.00       32     0.00     0.00  std::function<Move* ()>::~function()
  0.00      0.49     0.00       32     0.00     0.00  std::function<Move* ()>* std::__addressof<std::function<Move* ()> >(std::function<Move* ()>&)
  0.00      0.49     0.00       31     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const
  0.00      0.49     0.00       31     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator()
  0.00      0.49     0.00       30     0.00     0.00  BenchmarkResult::~BenchmarkResult()
  0.00      0.49     0.00       30     0.00     0.00  SimpleCachePolicy::get(unsigned int, unsigned int)
  0.00      0.49     0.00       30     0.00     0.00  __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::__normal_iterator(Solution** const&)
  0.00      0.49     0.00       27     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator()
  0.00      0.49     0.00       27     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*)
  0.00      0.49     0.00       27     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*)
  0.00      0.49     0.00       25     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Move**>(Move**, Move**)
  0.00      0.49     0.00       25     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.49     0.00       25     0.00     0.00  void std::_Destroy<Move**>(Move**, Move**)
  0.00      0.49     0.00       25     0.00     0.00  void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&)
  0.00      0.49     0.00       24     0.00     0.00  std::vector<double, std::allocator<double> >::size() const
  0.00      0.49     0.00       24     0.00     0.00  Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&)
  0.00      0.49     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::~new_allocator()
  0.00      0.49     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::~new_allocator()
  0.00      0.49     0.00       23     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::max_size() const
  0.00      0.49     0.00       23     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::size() const
  0.00      0.49     0.00       23     0.00     0.00  std::allocator<Solution::MobileNode>::~allocator()
  0.00      0.49     0.00       23     0.00     0.00  std::allocator<Solution::InterceptorNode>::~allocator()
  0.00      0.49     0.00       23     0.00     0.00  Solution::InterceptorNode* std::__addressof<Solution::InterceptorNode>(Solution::InterceptorNode&)
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator(__gnu_cxx::new_allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator(__gnu_cxx::new_allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::__normal_iterator(Solution::MobileNode const* const&)
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::__normal_iterator(Solution::InterceptorNode const* const&)
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator++()
  0.00      0.49     0.00       22     0.00     0.00  Problem::nbMobiles() const
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<Move*>::max_size() const
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator->() const
  0.00      0.49     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator*() const
  0.00      0.49     0.00       22     0.00     0.00  std::move_iterator<Solution::MobileNode*>::base() const
  0.00      0.49     0.00       22     0.00     0.00  std::move_iterator<Move**>::base() const
  0.00      0.49     0.00       22     0.00     0.00  std::move_iterator<unsigned int*>::base() const
  0.00      0.49     0.00       22     0.00     0.00  std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       22     0.00     0.00  std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       22     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
  0.00      0.49     0.00       22     0.00     0.00  void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&)
  0.00      0.49     0.00       22     0.00     0.00  Solution::InterceptorNode const& std::forward<Solution::InterceptorNode const&>(std::remove_reference<Solution::InterceptorNode const&>::type&)
  0.00      0.49     0.00       21     0.00     0.00  __gnu_cxx::new_allocator<Move*>::~new_allocator()
  0.00      0.49     0.00       21     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const
  0.00      0.49     0.00       21     0.00     0.00  std::allocator<Move*>::~allocator()
  0.00      0.49     0.00       20     0.00     0.00  BenchmarkResult::BenchmarkResult(BenchmarkResult const&)
  0.00      0.49     0.00       20     0.00     0.00  SimpleCachePolicy::set(unsigned int, unsigned int, double)
  0.00      0.49     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<Move*>::new_allocator(__gnu_cxx::new_allocator<Move*> const&)
  0.00      0.49     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::__normal_iterator(Location* const&)
  0.00      0.49     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move* const* const&)
  0.00      0.49     0.00       20     0.00     0.00  bool __gnu_cxx::operator!=<Solution**, std::vector<Solution*, std::allocator<Solution*> > >(__gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&, __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&)
  0.00      0.49     0.00       20     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator->() const
  0.00      0.49     0.00       20     0.00     0.00  std::allocator<Move*>::allocator(std::allocator<Move*> const&)
  0.00      0.49     0.00       20     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::end()
  0.00      0.49     0.00       20     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_end()
  0.00      0.49     0.00       20     0.00     0.00  void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00       20     0.00     0.00  BenchmarkResult&& std::forward<BenchmarkResult>(std::remove_reference<BenchmarkResult>::type&)
  0.00      0.49     0.00       20     0.00     0.00  std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*& std::forward<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>::type&)
  0.00      0.49     0.00       19     0.00     0.00  std::pair<char const*, BenchmarkResult>::first_type& std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&) const
  0.00      0.49     0.00       19     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00       18     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00       17     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::max_size() const
  0.00      0.49     0.00       16     0.00     0.00  std::function<Move* ()>::operator bool() const
  0.00      0.49     0.00       16     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*)
  0.00      0.49     0.00       16     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long)
  0.00      0.49     0.00       16     0.00     0.00  std::function<Move* ()>::function(std::function<Move* ()> const&)
  0.00      0.49     0.00       16     0.00     0.00  void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&)
  0.00      0.49     0.00       16     0.00     0.00  std::function<Move* ()> const& std::forward<std::function<Move* ()> const&>(std::remove_reference<std::function<Move* ()> const&>::type&)
  0.00      0.49     0.00       16     0.00     0.00  void std::_Destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*)
  0.00      0.49     0.00       16     0.00     0.00  void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
  0.00      0.49     0.00       16     0.00     0.00  void std::_Destroy<std::function<Move* ()> >(std::function<Move* ()>*)
  0.00      0.49     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::deallocate(Solution::MobileNode*, unsigned long)
  0.00      0.49     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::allocate(unsigned long, void const*)
  0.00      0.49     0.00       15     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00       15     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long)
  0.00      0.49     0.00       15     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long)
  0.00      0.49     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<Solution::MobileNode> >::deallocate(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, unsigned long)
  0.00      0.49     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<Solution::MobileNode> >::allocate(std::allocator<Solution::MobileNode>&, unsigned long)
  0.00      0.49     0.00       15     0.00     0.00  std::vector<Location, std::allocator<Location> >::operator[](unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  __gnu_cxx::new_allocator<Move*>::deallocate(Move**, unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*)
  0.00      0.49     0.00       14     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*)
  0.00      0.49     0.00       14     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long)
  0.00      0.49     0.00       14     0.00     0.00  void std::_Destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*)
  0.00      0.49     0.00       14     0.00     0.00  void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
  0.00      0.49     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::deallocate(Solution::InterceptorNode*, unsigned long)
  0.00      0.49     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::allocate(unsigned long, void const*)
  0.00      0.49     0.00       13     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long)
  0.00      0.49     0.00       13     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()
  0.00      0.49     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Solution::InterceptorNode> >::deallocate(std::allocator<Solution::InterceptorNode>&, Solution::InterceptorNode*, unsigned long)
  0.00      0.49     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<Solution::InterceptorNode> >::allocate(std::allocator<Solution::InterceptorNode>&, unsigned long)
  0.00      0.49     0.00       12     0.00     0.00  Solution::~Solution()
  0.00      0.49     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<double>::max_size() const
  0.00      0.49     0.00       12     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00       12     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base()
  0.00      0.49     0.00       12     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00       12     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base()
  0.00      0.49     0.00       12     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector()
  0.00      0.49     0.00       12     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector()
  0.00      0.49     0.00       11     0.00     0.00  Solution::Solution(Solution const&)
  0.00      0.49     0.00       11     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Solution::MobileNode> >::_S_select_on_copy(std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Solution::InterceptorNode> >::_S_select_on_copy(std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator!=(std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > const&) const
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::end() const
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::begin() const
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::end() const
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::begin() const
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_create_storage(unsigned long)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_create_storage(unsigned long)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00       11     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base()
  0.00      0.49     0.00       11     0.00     0.00  std::allocator_traits<std::allocator<Solution::MobileNode> >::select_on_container_copy_construction(std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::allocator<Solution::MobileNode> const std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_select<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, ...)
  0.00      0.49     0.00       11     0.00     0.00  std::allocator_traits<std::allocator<Solution::InterceptorNode> >::select_on_container_copy_construction(std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00       11     0.00     0.00  std::allocator<Solution::InterceptorNode> const std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_select<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, ...)
  0.00      0.49     0.00       11     0.00     0.00  Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*)
  0.00      0.49     0.00       11     0.00     0.00  Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*)
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&)
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&)
  0.00      0.49     0.00       11     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::~vector()
  0.00      0.49     0.00       11     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end()
  0.00      0.49     0.00       11     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_begin()
  0.00      0.49     0.00       11     0.00     0.00  std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end()
  0.00      0.49     0.00       11     0.00     0.00  Solution::MobileNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*)
  0.00      0.49     0.00       11     0.00     0.00  Solution::InterceptorNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*)
  0.00      0.49     0.00       11     0.00     0.00  Solution::MobileNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, Solution::MobileNode>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
  0.00      0.49     0.00       11     0.00     0.00  Solution::InterceptorNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, Solution::InterceptorNode>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
  0.00      0.49     0.00       11     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator==<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator==<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator==<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator!=<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator!=<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&)
  0.00      0.49     0.00       11     0.00     0.00  bool std::operator!=<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&)
  0.00      0.49     0.00       10     0.00     0.00  BenchmarkResult::BenchmarkResult(double, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >)
  0.00      0.49     0.00       10     0.00    47.00  VND::run(Solution&)
  0.00      0.49     0.00       10     0.00     0.00  VND::VND(std::vector<Move*, std::allocator<Move*> >&)
  0.00      0.49     0.00       10     0.00     0.00  VND::~VND()
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::deallocate(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long)
  0.00      0.49     0.00       10     0.00     0.00  void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*)
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocate(unsigned long, void const*)
  0.00      0.49     0.00       10     0.00     0.00  void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Move*> >::_S_select_on_copy(std::allocator<Move*> const&)
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator++()
  0.00      0.49     0.00       10     0.00     0.00  Solution::bestInterceptionCount() const
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::max_size() const
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator*() const
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator-(long) const
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator->() const
  0.00      0.49     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator*() const
  0.00      0.49     0.00       10     0.00     0.00  std::move_iterator<double*>::base() const
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Location, std::allocator<Location> >::size() const
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::end() const
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::begin() const
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::size() const
  0.00      0.49     0.00       10     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl(std::allocator<Move*> const&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_M_create_storage(unsigned long)
  0.00      0.49     0.00       10     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&)
  0.00      0.49     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<Move*> >::select_on_container_copy_construction(std::allocator<Move*> const&)
  0.00      0.49     0.00       10     0.00     0.00  std::allocator<Move*> const std::allocator_traits<std::allocator<Move*> >::_S_select<std::allocator<Move*> const, void>(std::allocator<Move*> const&, ...)
  0.00      0.49     0.00       10     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::__destroy_helper<std::pair<char const* const, BenchmarkResult> >::type>::value, void>::type std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::_S_destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*)
  0.00      0.49     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::deallocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long)
  0.00      0.49     0.00       10     0.00     0.00  _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_
  0.00      0.49     0.00       10     0.00     0.00  void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*)
  0.00      0.49     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, unsigned long)
  0.00      0.49     0.00       10     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator++()
  0.00      0.49     0.00       10     0.00     0.00  Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**)
  0.00      0.49     0.00       10     0.00     0.00  std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  std::pair<char const* const, BenchmarkResult>::~pair()
  0.00      0.49     0.00       10     0.00     0.00  std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&)
  0.00      0.49     0.00       10     0.00     0.00  std::pair<char const*, BenchmarkResult>::~pair()
  0.00      0.49     0.00       10     0.00     0.00  std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, void>(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&)
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Location, std::allocator<Location> >::end()
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Location, std::allocator<Location> >::back()
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**)
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::begin()
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::clear()
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&)
  0.00      0.49     0.00       10     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::begin()
  0.00      0.49     0.00       10     0.00     0.00  std::vector<char const*, std::allocator<char const*> >::operator[](unsigned long)
  0.00      0.49     0.00       10     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*)
  0.00      0.49     0.00       10     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::clear()
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node()
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_left(std::_Rb_tree_node_base*)
  0.00      0.49     0.00       10     0.00     0.00  std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&)
  0.00      0.49     0.00       10     0.00     0.00  Move** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**)
  0.00      0.49     0.00       10     0.00     0.00  Move** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, Move*>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, std::allocator<Move*>&)
  0.00      0.49     0.00       10     0.00     0.00  Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&)
  0.00      0.49     0.00       10     0.00     0.00  char const*&& std::forward<char const*>(std::remove_reference<char const*>::type&)
  0.00      0.49     0.00       10     0.00     0.00  Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&)
  0.00      0.49     0.00       10     0.00     0.00  char const*& std::forward<char const*&>(std::remove_reference<char const*&>::type&)
  0.00      0.49     0.00       10     0.00     0.00  operator<<(std::ostream&, BenchmarkResult const&)
  0.00      0.49     0.00        9     0.00     0.00  main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const
  0.00      0.49     0.00        9     0.00     0.00  std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        9     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*)
  0.00      0.49     0.00        9     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node_base const*)
  0.00      0.49     0.00        9     0.00     0.00  std::_Niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        8     0.00     0.00  MoveMove2Routes<FirstAvailablePolicy>::MoveMove2Routes()
  0.00      0.49     0.00        8     0.00     0.00  MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes()
  0.00      0.49     0.00        8     0.00     0.00  MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes()
  0.00      0.49     0.00        8     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        8     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const
  0.00      0.49     0.00        8     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::max_size() const
  0.00      0.49     0.00        8     0.00     0.00  std::vector<double, std::allocator<double> >::max_size() const
  0.00      0.49     0.00        8     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const
  0.00      0.49     0.00        8     0.00     0.00  main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const
  0.00      0.49     0.00        8     0.00     0.00  main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<Solution::MobileNode*>::move_iterator(Solution::MobileNode*)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<Move**>::move_iterator(Move**)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<double*>::move_iterator(double*)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<unsigned int*>::move_iterator(unsigned int*)
  0.00      0.49     0.00        8     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        8     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_max_size<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, int)
  0.00      0.49     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Solution::MobileNode> >::max_size(std::allocator<Solution::MobileNode> const&)
  0.00      0.49     0.00        8     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Move*> >::_S_max_size<std::allocator<Move*> const, void>(std::allocator<Move*> const&, int)
  0.00      0.49     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&)
  0.00      0.49     0.00        8     0.00     0.00  unsigned long std::allocator_traits<std::allocator<double> >::_S_max_size<std::allocator<double> const, void>(std::allocator<double> const&, int)
  0.00      0.49     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&)
  0.00      0.49     0.00        8     0.00     0.00  unsigned long std::allocator_traits<std::allocator<unsigned int> >::_S_max_size<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, int)
  0.00      0.49     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<unsigned int> >::max_size(std::allocator<unsigned int> const&)
  0.00      0.49     0.00        8     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<Solution::MobileNode*> std::__make_move_if_noexcept_iterator<Solution::MobileNode*, std::move_iterator<Solution::MobileNode*> >(Solution::MobileNode*)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double*> >(double*)
  0.00      0.49     0.00        8     0.00     0.00  std::move_iterator<unsigned int*> std::__make_move_if_noexcept_iterator<unsigned int*, std::move_iterator<unsigned int*> >(unsigned int*)
  0.00      0.49     0.00        8     0.00     0.00  Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&)
  0.00      0.49     0.00        8     0.00     0.00  Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&)
  0.00      0.49     0.00        8     0.00     0.00  main::{lambda()#12}::operator()() const
  0.00      0.49     0.00        7     0.00     0.00  MoveInsert<BestAvailablePolicy>::MoveInsert()
  0.00      0.49     0.00        7     0.00     0.00  MoveInsert<BestAvailablePolicy>::~MoveInsert()
  0.00      0.49     0.00        7     0.00     0.00  MoveInsert<BestAvailablePolicy>::~MoveInsert()
  0.00      0.49     0.00        7     0.00     0.00  MoveMove1Route<BestAvailablePolicy>::MoveMove1Route()
  0.00      0.49     0.00        7     0.00     0.00  MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route()
  0.00      0.49     0.00        7     0.00     0.00  MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route()
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<Solution::MobileNode*>::operator*() const
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<Move**>::operator*() const
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<unsigned int*>::operator*() const
  0.00      0.49     0.00        7     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::size() const
  0.00      0.49     0.00        7     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const
  0.00      0.49     0.00        7     0.00     0.00  main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const
  0.00      0.49     0.00        7     0.00     0.00  main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const
  0.00      0.49     0.00        7     0.00     0.00  void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)
  0.00      0.49     0.00        7     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<Solution::MobileNode*>::operator++()
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<Move**>::operator++()
  0.00      0.49     0.00        7     0.00     0.00  std::move_iterator<unsigned int*>::operator++()
  0.00      0.49     0.00        7     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        7     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        7     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        7     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        7     0.00     0.00  void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&)
  0.00      0.49     0.00        7     0.00     0.00  _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_
  0.00      0.49     0.00        7     0.00     0.00  void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&)
  0.00      0.49     0.00        7     0.00     0.00  std::remove_reference<Solution::MobileNode&>::type&& std::move<Solution::MobileNode&>(Solution::MobileNode&)
  0.00      0.49     0.00        7     0.00     0.00  Solution::MobileNode&& std::forward<Solution::MobileNode>(std::remove_reference<Solution::MobileNode>::type&)
  0.00      0.49     0.00        7     0.00     0.00  void std::_Destroy<double*>(double*, double*)
  0.00      0.49     0.00        7     0.00     0.00  void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  0.00      0.49     0.00        7     0.00     0.00  main::{lambda()#3}::operator()() const
  0.00      0.49     0.00        7     0.00     0.00  main::{lambda()#1}::operator()() const
  0.00      0.49     0.00        6     0.00     0.00  MoveSwap2Routes<BestAvailablePolicy>::MoveSwap2Routes()
  0.00      0.49     0.00        6     0.00     0.00  MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes()
  0.00      0.49     0.00        6     0.00     0.00  MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes()
  0.00      0.49     0.00        6     0.00     0.00  Move2Opt<FirstAvailablePolicy>::Move2Opt()
  0.00      0.49     0.00        6     0.00     0.00  Move2Opt<FirstAvailablePolicy>::~Move2Opt()
  0.00      0.49     0.00        6     0.00     0.00  Move2Opt<FirstAvailablePolicy>::~Move2Opt()
  0.00      0.49     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::string>::~new_allocator()
  0.00      0.49     0.00        6     0.00     0.00  bool __gnu_cxx::operator==<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&)
  0.00      0.49     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<Location>::max_size() const
  0.00      0.49     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<Interceptor const*>::max_size() const
  0.00      0.49     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::base() const
  0.00      0.49     0.00        6     0.00     0.00  std::move_iterator<Location*>::base() const
  0.00      0.49     0.00        6     0.00     0.00  std::move_iterator<Solution::InterceptorNode*>::base() const
  0.00      0.49     0.00        6     0.00     0.00  std::initializer_list<std::string>::begin() const
  0.00      0.49     0.00        6     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::end() const
  0.00      0.49     0.00        6     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::empty() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const
  0.00      0.49     0.00        6     0.00     0.00  std::allocator<std::string>::~allocator()
  0.00      0.49     0.00        6     0.00     0.00  std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        6     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        6     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        6     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        6     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        6     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        6     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        6     0.00     0.00  std::string* std::__addressof<std::string>(std::string&)
  0.00      0.49     0.00        6     0.00     0.00  std::_Miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#16}::operator()() const
  0.00      0.49     0.00        6     0.00     0.00  main::{lambda()#6}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<BestAvailablePolicy>::MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<BestAvailablePolicy>::~MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<BestAvailablePolicy>::~MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<FirstAvailablePolicy>::MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<FirstAvailablePolicy>::~MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveExtract<FirstAvailablePolicy>::~MoveExtract()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<BestAvailablePolicy>::MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<BestAvailablePolicy>::~MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<BestAvailablePolicy>::~MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<FirstAvailablePolicy>::MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<FirstAvailablePolicy>::~MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveReplace<FirstAvailablePolicy>::~MoveReplace()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<BestAvailablePolicy>::MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<FirstAvailablePolicy>::MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route()
  0.00      0.49     0.00        5     0.00     0.00  Mobile::Mobile(double, double, double, double, unsigned int)
  0.00      0.49     0.00        5     0.00     0.00  Mobile::~Mobile()
  0.00      0.49     0.00        5     0.00     0.00  Solution::MobileNode::MobileNode(Mobile const&)
  0.00      0.49     0.00        5     0.00     0.00  Solution::append(Interceptor const&, Mobile const&, double const&)
  0.00      0.49     0.00        5     0.00     0.00  Solution::append(unsigned int, unsigned int, double const&)
  0.00      0.49     0.00        5     0.00     0.00  Direction::Direction(double, double)
  0.00      0.49     0.00        5     0.00     0.00  _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_
  0.00      0.49     0.00        5     0.00     0.00  _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_
  0.00      0.49     0.00        5     0.00     0.00  void __gnu_cxx::new_allocator<unsigned int>::destroy<unsigned int>(unsigned int*)
  0.00      0.49     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator<unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int*, __gnu_cxx::__enable_if<std::__are_same<unsigned int*, unsigned int*>::__value, std::vector<unsigned int, std::allocator<unsigned int> > >::__type> const&)
  0.00      0.49     0.00        5     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&)
  0.00      0.49     0.00        5     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::size() const
  0.00      0.49     0.00        5     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::cbegin() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const
  0.00      0.49     0.00        5     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&)
  0.00      0.49     0.00        5     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&)
  0.00      0.49     0.00        5     0.00     0.00  _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_
  0.00      0.49     0.00        5     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&)
  0.00      0.49     0.00        5     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__destroy_helper<unsigned int>::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*)
  0.00      0.49     0.00        5     0.00     0.00  void std::allocator_traits<std::allocator<unsigned int> >::destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        5     0.00     0.00  void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&)
  0.00      0.49     0.00        5     0.00     0.00  void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&)
  0.00      0.49     0.00        5     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        5     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        5     0.00     0.00  Mobile* std::__addressof<Mobile>(Mobile&)
  0.00      0.49     0.00        5     0.00     0.00  Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&)
  0.00      0.49     0.00        5     0.00     0.00  Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&)
  0.00      0.49     0.00        5     0.00     0.00  void std::_Destroy<Mobile>(Mobile*)
  0.00      0.49     0.00        5     0.00     0.00  bool std::operator==<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&)
  0.00      0.49     0.00        5     0.00     0.00  bool std::operator!=<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&)
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#2}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#13}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#15}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#5}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#7}::operator()() const
  0.00      0.49     0.00        5     0.00     0.00  main::{lambda()#10}::operator()() const
  0.00      0.49     0.00        4     0.00     0.00  MoveSwap2Routes<FirstAvailablePolicy>::MoveSwap2Routes()
  0.00      0.49     0.00        4     0.00     0.00  MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes()
  0.00      0.49     0.00        4     0.00     0.00  MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes()
  0.00      0.49     0.00        4     0.00     0.00  Move2Opt<BestAvailablePolicy>::Move2Opt()
  0.00      0.49     0.00        4     0.00     0.00  Move2Opt<BestAvailablePolicy>::~Move2Opt()
  0.00      0.49     0.00        4     0.00     0.00  Move2Opt<BestAvailablePolicy>::~Move2Opt()
  0.00      0.49     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::new_allocator()
  0.00      0.49     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor* const&)
  0.00      0.49     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::base() const
  0.00      0.49     0.00        4     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        4     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Interceptor const**>::base() const
  0.00      0.49     0.00        4     0.00     0.00  std::initializer_list<unsigned int>::begin() const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Location, std::allocator<Location> >::max_size() const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        4     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const
  0.00      0.49     0.00        4     0.00     0.00  std::allocator<unsigned int>::allocator()
  0.00      0.49     0.00        4     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Interceptor const**>(Interceptor const**, Interceptor const**)
  0.00      0.49     0.00        4     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator()
  0.00      0.49     0.00        4     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Location*>::move_iterator(Location*)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Solution::InterceptorNode*>::move_iterator(Solution::InterceptorNode*)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Interceptor const**>::move_iterator(Interceptor const**)
  0.00      0.49     0.00        4     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        4     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        4     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Location> >::_S_max_size<std::allocator<Location> const, void>(std::allocator<Location> const&, int)
  0.00      0.49     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Location> >::max_size(std::allocator<Location> const&)
  0.00      0.49     0.00        4     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_max_size<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, int)
  0.00      0.49     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Solution::InterceptorNode> >::max_size(std::allocator<Solution::InterceptorNode> const&)
  0.00      0.49     0.00        4     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Interceptor const*> >::_S_max_size<std::allocator<Interceptor const*> const, void>(std::allocator<Interceptor const*> const&, int)
  0.00      0.49     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Interceptor const*> >::max_size(std::allocator<Interceptor const*> const&)
  0.00      0.49     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        4     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        4     0.00     0.00  Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*)
  0.00      0.49     0.00        4     0.00     0.00  Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
  0.00      0.49     0.00        4     0.00     0.00  double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.49     0.00        4     0.00     0.00  unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*)
  0.00      0.49     0.00        4     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::operator[](unsigned long)
  0.00      0.49     0.00        4     0.00     0.00  void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&)
  0.00      0.49     0.00        4     0.00     0.00  void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&)
  0.00      0.49     0.00        4     0.00     0.00  void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&)
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>()
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>()
  0.00      0.49     0.00        4     0.00     0.00  std::vector<double, std::allocator<double> >* std::__addressof<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >&)
  0.00      0.49     0.00        4     0.00     0.00  Solution::MobileNode* std::uninitialized_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*)
  0.00      0.49     0.00        4     0.00     0.00  Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
  0.00      0.49     0.00        4     0.00     0.00  double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.49     0.00        4     0.00     0.00  unsigned int* std::uninitialized_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*)
  0.00      0.49     0.00        4     0.00     0.00  Solution::MobileNode* std::__uninitialized_copy_a<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, Solution::MobileNode>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
  0.00      0.49     0.00        4     0.00     0.00  Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&)
  0.00      0.49     0.00        4     0.00     0.00  double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
  0.00      0.49     0.00        4     0.00     0.00  unsigned int* std::__uninitialized_copy_a<std::move_iterator<unsigned int*>, unsigned int*, unsigned int>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*, std::allocator<unsigned int>&)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Location*> std::__make_move_if_noexcept_iterator<Location*, std::move_iterator<Location*> >(Location*)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Solution::InterceptorNode*> std::__make_move_if_noexcept_iterator<Solution::InterceptorNode*, std::move_iterator<Solution::InterceptorNode*> >(Solution::InterceptorNode*)
  0.00      0.49     0.00        4     0.00     0.00  std::move_iterator<Interceptor const**> std::__make_move_if_noexcept_iterator<Interceptor const**, std::move_iterator<Interceptor const**> >(Interceptor const**)
  0.00      0.49     0.00        4     0.00     0.00  Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
  0.00      0.49     0.00        4     0.00     0.00  Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&)
  0.00      0.49     0.00        4     0.00     0.00  double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  0.00      0.49     0.00        4     0.00     0.00  unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&)
  0.00      0.49     0.00        4     0.00     0.00  void std::_Destroy<Interceptor const**>(Interceptor const**, Interceptor const**)
  0.00      0.49     0.00        4     0.00     0.00  void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&)
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#14}::operator()() const
  0.00      0.49     0.00        4     0.00     0.00  main::{lambda()#8}::operator()() const
  0.00      0.49     0.00        3     0.00     0.00  MoveInsert<FirstAvailablePolicy>::MoveInsert()
  0.00      0.49     0.00        3     0.00     0.00  MoveInsert<FirstAvailablePolicy>::~MoveInsert()
  0.00      0.49     0.00        3     0.00     0.00  MoveInsert<FirstAvailablePolicy>::~MoveInsert()
  0.00      0.49     0.00        3     0.00     0.00  MoveMove1Route<FirstAvailablePolicy>::MoveMove1Route()
  0.00      0.49     0.00        3     0.00     0.00  MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route()
  0.00      0.49     0.00        3     0.00     0.00  MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route()
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::string>::new_allocator(__gnu_cxx::new_allocator<std::string> const&)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::string>::new_allocator()
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator()
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<double>::~new_allocator()
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&)
  0.00      0.49     0.00        3     0.00     0.00  bool __gnu_cxx::operator!=<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<Problem*>::max_size() const
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<Solution*>::max_size() const
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::string>::max_size() const
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::max_size() const
  0.00      0.49     0.00        3     0.00     0.00  std::initializer_list<std::string>::end() const
  0.00      0.49     0.00        3     0.00     0.00  std::initializer_list<std::string>::size() const
  0.00      0.49     0.00        3     0.00     0.00  main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const
  0.00      0.49     0.00        3     0.00     0.00  std::allocator<std::string>::allocator(std::allocator<std::string> const&)
  0.00      0.49     0.00        3     0.00     0.00  std::allocator<std::string>::allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::allocator<double>::allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::allocator<double>::~allocator()
  0.00      0.49     0.00        3     0.00     0.00  unsigned int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned int>(unsigned int const*, unsigned int const*, unsigned int*)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Location*>(Location*, Location*)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl(std::allocator<std::string> const&)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base(std::allocator<std::string> const&)
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base()
  0.00      0.49     0.00        3     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::~_Vector_base()
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation)
  0.00      0.49     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::string> >::deallocate(std::allocator<std::string>&, std::string*, unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::string> >::allocate(std::allocator<std::string>&, unsigned long)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        3     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        3     0.00     0.00  std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*)
  0.00      0.49     0.00        3     0.00     0.00  void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag)
  0.00      0.49     0.00        3     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&)
  0.00      0.49     0.00        3     0.00     0.00  std::vector<double, std::allocator<double> >::vector()
  0.00      0.49     0.00        3     0.00     0.00  std::vector<double, std::allocator<double> >::~vector()
  0.00      0.49     0.00        3     0.00     0.00  _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_
  0.00      0.49     0.00        3     0.00     0.00  std::iterator_traits<std::string const*>::difference_type std::__distance<std::string const*>(std::string const*, std::string const*, std::random_access_iterator_tag)
  0.00      0.49     0.00        3     0.00     0.00  unsigned int* std::__copy_move_a<true, unsigned int*, unsigned int*>(unsigned int*, unsigned int*, unsigned int*)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        3     0.00     0.00  std::string* std::uninitialized_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*)
  0.00      0.49     0.00        3     0.00     0.00  std::iterator_traits<std::string const*>::iterator_category std::__iterator_category<std::string const*>(std::string const* const&)
  0.00      0.49     0.00        3     0.00     0.00  std::string* std::__uninitialized_copy_a<std::string const*, std::string*, std::string>(std::string const*, std::string const*, std::string*, std::allocator<std::string>&)
  0.00      0.49     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&)
  0.00      0.49     0.00        3     0.00     0.00  std::string const& std::forward<std::string const&>(std::remove_reference<std::string const&>::type&)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy<Location*>(Location*, Location*)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy<std::string*>(std::string*, std::string*)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>&)
  0.00      0.49     0.00        3     0.00     0.00  void std::_Destroy<std::string>(std::string*)
  0.00      0.49     0.00        3     0.00     0.00  std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*)
  0.00      0.49     0.00        3     0.00     0.00  bool std::operator==<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&)
  0.00      0.49     0.00        3     0.00     0.00  bool std::operator==<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&)
  0.00      0.49     0.00        3     0.00     0.00  bool std::operator!=<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&)
  0.00      0.49     0.00        3     0.00     0.00  bool std::operator!=<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&)
  0.00      0.49     0.00        3     0.00     0.00  main::{lambda()#9}::operator()() const
  0.00      0.49     0.00        3     0.00     0.00  main::{lambda()#11}::operator()() const
  0.00      0.49     0.00        2     0.00     0.00  Interceptor::Interceptor(Depot const&, double, unsigned int, double)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor::~Interceptor()
  0.00      0.49     0.00        2     0.00     0.00  MoveMove2Routes<BestAvailablePolicy>::MoveMove2Routes()
  0.00      0.49     0.00        2     0.00     0.00  MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes()
  0.00      0.49     0.00        2     0.00     0.00  MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes()
  0.00      0.49     0.00        2     0.00     0.00  Depot::addInterceptor(Interceptor const&)
  0.00      0.49     0.00        2     0.00     0.00  Depot::Depot(double, double, unsigned int)
  0.00      0.49     0.00        2     0.00     0.00  Depot::~Depot()
  0.00      0.49     0.00        2     0.00     0.00  Solution::InterceptorNode::InterceptorNode(Interceptor const&)
  0.00      0.49     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&)
  0.00      0.49     0.00        2     0.00     0.00  _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Location>::deallocate(Location*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Location>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        2     0.00     0.00  _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_
  0.00      0.49     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Interceptor const*>::deallocate(Interceptor const**, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Interceptor const*>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Interceptor const*>::new_allocator()
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Interceptor const*>::~new_allocator()
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<char const*>::~new_allocator()
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::~new_allocator()
  0.00      0.49     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::__normal_iterator(Problem** const&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::__normal_iterator(std::vector<double, std::allocator<double> >* const&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator++()
  0.00      0.49     0.00        2     0.00     0.00  bool __gnu_cxx::operator!=<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Interceptor>::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Depot>::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Mobile>::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator-(long) const
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator*() const
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Interceptor*>::base() const
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Mobile*>::base() const
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Problem**>::base() const
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Solution**>::base() const
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<std::vector<double, std::allocator<double> >*>::base() const
  0.00      0.49     0.00        2     0.00     0.00  std::initializer_list<char const*>::begin() const
  0.00      0.49     0.00        2     0.00     0.00  std::initializer_list<std::function<Move* ()> >::begin() const
  0.00      0.49     0.00        2     0.00     0.00  std::initializer_list<unsigned int>::end() const
  0.00      0.49     0.00        2     0.00     0.00  std::initializer_list<unsigned int>::size() const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::begin() const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        2     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const
  0.00      0.49     0.00        2     0.00     0.00  std::allocator<Interceptor const*>::allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::allocator<Interceptor const*>::~allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::allocator<char const*>::~allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::allocator<std::function<Move* ()> >::~allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::_Iter_base<double*, false>::_S_base(double*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Problem**>(Problem**, Problem**)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Solution**>(Solution**, Solution**)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_base()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_get_Tp_allocator()
  0.00      0.49     0.00        2     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(std::allocator<unsigned int> const&)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Interceptor*>::move_iterator(Interceptor*)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Mobile*>::move_iterator(Mobile*)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Problem**>::move_iterator(Problem**)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Solution**>::move_iterator(Solution**)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<std::vector<double, std::allocator<double> >*>::move_iterator(std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        2     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&)
  0.00      0.49     0.00        2     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&)
  0.00      0.49     0.00        2     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&)
  0.00      0.49     0.00        2     0.00     0.00  _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Location> >::deallocate(std::allocator<Location>&, Location*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&)
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Location> >::allocate(std::allocator<Location>&, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_
  0.00      0.49     0.00        2     0.00     0.00  _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_
  0.00      0.49     0.00        2     0.00     0.00  _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_
  0.00      0.49     0.00        2     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Problem*> >::_S_max_size<std::allocator<Problem*> const, void>(std::allocator<Problem*> const&, int)
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Problem*> >::max_size(std::allocator<Problem*> const&)
  0.00      0.49     0.00        2     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Solution*> >::_S_max_size<std::allocator<Solution*> const, void>(std::allocator<Solution*> const&, int)
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Solution*> >::max_size(std::allocator<Solution*> const&)
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Interceptor const*> >::deallocate(std::allocator<Interceptor const*>&, Interceptor const**, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Interceptor const*> >::allocate(std::allocator<Interceptor const*>&, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&)
  0.00      0.49     0.00        2     0.00     0.00  unsigned long std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::_S_max_size<std::allocator<std::vector<double, std::allocator<double> > > const, void>(std::allocator<std::vector<double, std::allocator<double> > > const&, int)
  0.00      0.49     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::max_size(std::allocator<std::vector<double, std::allocator<double> > > const&)
  0.00      0.49     0.00        2     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&)
  0.00      0.49     0.00        2     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&)
  0.00      0.49     0.00        2     0.00     0.00  std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&)
  0.00      0.49     0.00        2     0.00     0.00  unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*)
  0.00      0.49     0.00        2     0.00     0.00  Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*)
  0.00      0.49     0.00        2     0.00     0.00  Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor const** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**)
  0.00      0.49     0.00        2     0.00     0.00  void std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::end()
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::back()
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Location, std::allocator<Location> >::push_back(Location const&)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::vector()
  0.00      0.49     0.00        2     0.00     0.00  std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector()
  0.00      0.49     0.00        2     0.00     0.00  std::vector<char const*, std::allocator<char const*> >::end()
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<double, std::allocator<double> >::_M_default_append(unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<double, std::allocator<double> >::resize(unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag)
  0.00      0.49     0.00        2     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  std::iterator_traits<unsigned int const*>::difference_type std::__distance<unsigned int const*>(unsigned int const*, unsigned int const*, std::random_access_iterator_tag)
  0.00      0.49     0.00        2     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor* std::__addressof<Interceptor>(Interceptor&)
  0.00      0.49     0.00        2     0.00     0.00  Depot* std::__addressof<Depot>(Depot&)
  0.00      0.49     0.00        2     0.00     0.00  std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)
  0.00      0.49     0.00        2     0.00     0.00  unsigned int* std::uninitialized_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*)
  0.00      0.49     0.00        2     0.00     0.00  Location* std::uninitialized_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*)
  0.00      0.49     0.00        2     0.00     0.00  Solution::InterceptorNode* std::uninitialized_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor const** std::uninitialized_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**)
  0.00      0.49     0.00        2     0.00     0.00  std::iterator_traits<unsigned int const*>::iterator_category std::__iterator_category<unsigned int const*>(unsigned int const* const&)
  0.00      0.49     0.00        2     0.00     0.00  unsigned int* std::__uninitialized_copy_a<unsigned int const*, unsigned int*, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*, std::allocator<unsigned int>&)
  0.00      0.49     0.00        2     0.00     0.00  Location* std::__uninitialized_copy_a<std::move_iterator<Location*>, Location*, Location>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*, std::allocator<Location>&)
  0.00      0.49     0.00        2     0.00     0.00  Solution::InterceptorNode* std::__uninitialized_copy_a<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, Solution::InterceptorNode>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor const** std::__uninitialized_copy_a<std::move_iterator<Interceptor const**>, Interceptor const**, Interceptor const*>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**, std::allocator<Interceptor const*>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
  0.00      0.49     0.00        2     0.00     0.00  void std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Interceptor*> std::__make_move_if_noexcept_iterator<Interceptor*, std::move_iterator<Interceptor*> >(Interceptor*)
  0.00      0.49     0.00        2     0.00     0.00  Depot* std::__make_move_if_noexcept_iterator<Depot*, Depot*>(Depot*)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Mobile*> std::__make_move_if_noexcept_iterator<Mobile*, std::move_iterator<Mobile*> >(Mobile*)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Problem**> std::__make_move_if_noexcept_iterator<Problem**, std::move_iterator<Problem**> >(Problem**)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<Solution**> std::__make_move_if_noexcept_iterator<Solution**, std::move_iterator<Solution**> >(Solution**)
  0.00      0.49     0.00        2     0.00     0.00  std::move_iterator<std::vector<double, std::allocator<double> >*> std::__make_move_if_noexcept_iterator<std::vector<double, std::allocator<double> >*, std::move_iterator<std::vector<double, std::allocator<double> >*> >(std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&)
  0.00      0.49     0.00        2     0.00     0.00  Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
  0.00      0.49     0.00        2     0.00     0.00  Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&)
  0.00      0.49     0.00        2     0.00     0.00  std::remove_reference<Interceptor const*&>::type&& std::move<Interceptor const*&>(Interceptor const*&)
  0.00      0.49     0.00        2     0.00     0.00  double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Interceptor>(Interceptor*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Depot>(Depot*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Interceptor*>(Interceptor*, Interceptor*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Depot*>(Depot*, Depot*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Mobile*>(Mobile*, Mobile*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Problem**>(Problem**, Problem**)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Solution**>(Solution**, Solution**)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
  0.00      0.49     0.00        2     0.00     0.00  void std::_Destroy<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        2     0.00     0.00  std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*)
  0.00      0.49     0.00        2     0.00     0.00  bool std::operator==<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&)
  0.00      0.49     0.00        2     0.00     0.00  bool std::operator!=<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&)
  0.00      0.49     0.00        2     0.00     0.00  main::{lambda()#4}::operator()() const
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11InterceptorC2Ej
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11TikzGrapher7_stylesE
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN15AvailablePolicy20_max_acceptable_timeE
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN17SimpleCachePolicy6_cacheE
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN18Heuristic_sequenceC2ERK7Problem
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3VND7max_itrE
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5DepotC2Ej
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6MobileC2Ej
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7ProblemC2Ev
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8LocationC2Edd
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8Solution10MobileNodeC2ERK6MobiledPK11Interceptor
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9HeuristicC2ERK7Problem
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9Tikzifyer7_stylesE
  0.00      0.49     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZlsRSoRK15BenchmarkResult
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.49     0.00        1     0.00     0.01  Heuristic_fastest<SimpleCachePolicy>::run()
  0.00      0.49     0.00        1     0.00     0.01  void Heuristic_fastest<SimpleCachePolicy>::run<true>()
  0.00      0.49     0.00        1     0.00     0.00  Heuristic_fastest<SimpleCachePolicy>::Heuristic_fastest(Problem const&)
  0.00      0.49     0.00        1     0.00     0.00  Heuristic_fastest<SimpleCachePolicy>::~Heuristic_fastest()
  0.00      0.49     0.00        1     0.00     0.00  SimpleCachePolicy::init(unsigned int, unsigned int)
  0.00      0.49     0.00        1     0.00     0.00  Problem::Problem(char const*)
  0.00      0.49     0.00        1     0.00     0.00  Problem::~Problem()
  0.00      0.49     0.00        1     0.00     0.00  Solution::Solution(Problem const&)
  0.00      0.49     0.00        1     0.00     0.00  Heuristic::solution()
  0.00      0.49     0.00        1     0.00     0.00  Heuristic::Heuristic(Problem const&)
  0.00      0.49     0.00        1     0.00     0.00  Heuristic::~Heuristic()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Interceptor>::deallocate(Interceptor*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Interceptor>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Interceptor>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Interceptor>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Depot>::deallocate(Depot*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Depot>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Depot>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Depot>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Mobile>::deallocate(Mobile*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Mobile>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Mobile>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Mobile>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Location>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Location>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Move*>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Problem*>::deallocate(Problem**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Problem*>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Problem*>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Problem*>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution*>::deallocate(Solution**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution*>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution*>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Solution*>::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char const*>::deallocate(char const**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char const*>::new_allocator(__gnu_cxx::new_allocator<char const*> const&)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char const*>::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::deallocate(std::vector<double, std::allocator<double> >*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::~new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::deallocate(std::function<Move* ()>*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::allocate(unsigned long, void const*)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator(__gnu_cxx::new_allocator<std::function<Move* ()> > const&)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator++()
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char const*>::max_size() const
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<Move* ()> >::max_size() const
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator*() const
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator-(long) const
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator*() const
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() const
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<Location*>::operator*() const
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<Solution::InterceptorNode*>::operator*() const
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<double*>::operator*() const
  0.00      0.49     0.00        1     0.00     0.00  std::initializer_list<char const*>::end() const
  0.00      0.49     0.00        1     0.00     0.00  std::initializer_list<char const*>::size() const
  0.00      0.49     0.00        1     0.00     0.00  std::initializer_list<std::function<Move* ()> >::end() const
  0.00      0.49     0.00        1     0.00     0.00  std::initializer_list<std::function<Move* ()> >::size() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::capacity() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::size() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::capacity() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::max_size() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::capacity() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::max_size() const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Interceptor>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Interceptor>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Depot>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Depot>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Mobile>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Mobile>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Location>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Location>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Solution::MobileNode>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Solution::InterceptorNode>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Move*>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Problem*>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Problem*>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Solution*>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<Solution*>::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<char const*>::allocator(std::allocator<char const*> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<char const*>::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::vector<double, std::allocator<double> > >::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::vector<double, std::allocator<double> > >::~allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::function<Move* ()> >::allocator(std::allocator<std::function<Move* ()> > const&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator<std::function<Move* ()> >::allocator()
  0.00      0.49     0.00        1     0.00     0.00  std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<char const**>(char const**, char const**)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl(std::allocator<char const*> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base(std::allocator<char const*> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_allocate(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::_Vector_impl(std::allocator<std::function<Move* ()> > const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::~_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_deallocate(std::function<Move* ()>*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_base(std::allocator<std::function<Move* ()> > const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base()
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<Location*>::operator++()
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<Solution::InterceptorNode*>::operator++()
  0.00      0.49     0.00        1     0.00     0.00  std::move_iterator<double*>::operator++()
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<{lambda()#2}>({lambda()#2} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<{lambda()#12}>({lambda()#12} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<{lambda()#13}>({lambda()#13} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<{lambda()#14}>({lambda()#14} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<{lambda()#15}>({lambda()#15} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<{lambda()#16}>({lambda()#16} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<{lambda()#3}>({lambda()#3} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<{lambda()#4}>({lambda()#4} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<{lambda()#5}>({lambda()#5} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<{lambda()#6}>({lambda()#6} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<{lambda()#7}>({lambda()#7} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<{lambda()#8}>({lambda()#8} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<{lambda()#9}>({lambda()#9} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<{lambda()#10}>({lambda()#10} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<{lambda()#11}>({lambda()#11} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<{lambda()#1}>({lambda()#1} const&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Interceptor> >::deallocate(std::allocator<Interceptor>&, Interceptor*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Interceptor> >::_S_max_size<std::allocator<Interceptor> const, void>(std::allocator<Interceptor> const&, int)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Interceptor> >::allocate(std::allocator<Interceptor>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Interceptor> >::max_size(std::allocator<Interceptor> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Depot> >::deallocate(std::allocator<Depot>&, Depot*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Depot> >::_S_max_size<std::allocator<Depot> const, void>(std::allocator<Depot> const&, int)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Depot> >::allocate(std::allocator<Depot>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Depot> >::max_size(std::allocator<Depot> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Mobile> >::deallocate(std::allocator<Mobile>&, Mobile*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  unsigned long std::allocator_traits<std::allocator<Mobile> >::_S_max_size<std::allocator<Mobile> const, void>(std::allocator<Mobile> const&, int)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Mobile> >::allocate(std::allocator<Mobile>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Mobile> >::max_size(std::allocator<Mobile> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Problem*> >::deallocate(std::allocator<Problem*>&, Problem**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Problem*> >::allocate(std::allocator<Problem*>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Solution*> >::deallocate(std::allocator<Solution*>&, Solution**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<Solution*> >::allocate(std::allocator<Solution*>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<char const*> >::allocate(std::allocator<char const*>&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::deallocate(std::allocator<std::vector<double, std::allocator<double> > >&, std::vector<double, std::allocator<double> >*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::allocate(std::allocator<std::vector<double, std::allocator<double> > >&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<Move* ()> > >::deallocate(std::allocator<std::function<Move* ()> >&, std::function<Move* ()>*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<Move* ()> > >::allocate(std::allocator<std::function<Move* ()> >&, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  Depot* std::__uninitialized_copy<false>::__uninit_copy<Depot*, Depot*>(Depot*, Depot*, Depot*)
  0.00      0.49     0.00        1     0.00     0.00  char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**)
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*)
  0.00      0.49     0.00        1     0.00     0.00  Interceptor* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*)
  0.00      0.49     0.00        1     0.00     0.00  Mobile* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*)
  0.00      0.49     0.00        1     0.00     0.00  Problem** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**)
  0.00      0.49     0.00        1     0.00     0.00  Solution** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Interceptor, std::allocator<Interceptor> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Depot, std::allocator<Depot> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Mobile, std::allocator<Mobile> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Location, std::allocator<Location> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Location, std::allocator<Location> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Move*, std::allocator<Move*> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&)
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::end()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::back()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Problem*, std::allocator<Problem*> >::operator[](unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&)
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<Solution*, std::allocator<Solution*> >::operator[](unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<char const*, std::allocator<char const*> >::begin()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<char const*, std::allocator<char const*> >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::end()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::begin()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::vector()
  0.00      0.49     0.00        1     0.00     0.00  void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector()
  0.00      0.49     0.00        1     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::vector()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_M_initialize()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::~_Rb_tree_impl()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree()
  0.00      0.49     0.00        1     0.00     0.00  std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree()
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11})
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1})
  0.00      0.49     0.00        1     0.00     0.00  std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin()
  0.00      0.49     0.00        1     0.00     0.00  std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::multimap()
  0.00      0.49     0.00        1     0.00     0.00  std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~multimap()
  0.00      0.49     0.00        1     0.00     0.00  _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_
  0.00      0.49     0.00        1     0.00     0.00  void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Construct<char const*, char const* const&>(char const**, char const* const&)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Construct<double, double>(double*, double&&)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<char const* const*>::difference_type std::__distance<char const* const*>(char const* const*, char const* const*, std::random_access_iterator_tag)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<std::function<Move* ()> const*>::difference_type std::__distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::random_access_iterator_tag)
  0.00      0.49     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&)
  0.00      0.49     0.00        1     0.00     0.00  Location* std::__addressof<Location>(Location&)
  0.00      0.49     0.00        1     0.00     0.00  char const** std::__addressof<char const*>(char const*&)
  0.00      0.49     0.00        1     0.00     0.00  double* std::__addressof<double>(double&)
  0.00      0.49     0.00        1     0.00     0.00  std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)
  0.00      0.49     0.00        1     0.00     0.00  Depot* std::uninitialized_copy<Depot*, Depot*>(Depot*, Depot*, Depot*)
  0.00      0.49     0.00        1     0.00     0.00  char const** std::uninitialized_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**)
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>* std::uninitialized_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*)
  0.00      0.49     0.00        1     0.00     0.00  Interceptor* std::uninitialized_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*)
  0.00      0.49     0.00        1     0.00     0.00  Mobile* std::uninitialized_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*)
  0.00      0.49     0.00        1     0.00     0.00  Problem** std::uninitialized_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**)
  0.00      0.49     0.00        1     0.00     0.00  Solution** std::uninitialized_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >* std::uninitialized_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<char const* const*>::iterator_category std::__iterator_category<char const* const*>(char const* const* const&)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<std::function<Move* ()> const*>::iterator_category std::__iterator_category<std::function<Move* ()> const*>(std::function<Move* ()> const* const&)
  0.00      0.49     0.00        1     0.00     0.00  Depot* std::__uninitialized_copy_a<Depot*, Depot*, Depot>(Depot*, Depot*, Depot*, std::allocator<Depot>&)
  0.00      0.49     0.00        1     0.00     0.00  char const** std::__uninitialized_copy_a<char const* const*, char const**, char const*>(char const* const*, char const* const*, char const**, std::allocator<char const*>&)
  0.00      0.49     0.00        1     0.00     0.00  std::function<Move* ()>* std::__uninitialized_copy_a<std::function<Move* ()> const*, std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&)
  0.00      0.49     0.00        1     0.00     0.00  Interceptor* std::__uninitialized_copy_a<std::move_iterator<Interceptor*>, Interceptor*, Interceptor>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*, std::allocator<Interceptor>&)
  0.00      0.49     0.00        1     0.00     0.00  Mobile* std::__uninitialized_copy_a<std::move_iterator<Mobile*>, Mobile*, Mobile>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*, std::allocator<Mobile>&)
  0.00      0.49     0.00        1     0.00     0.00  Problem** std::__uninitialized_copy_a<std::move_iterator<Problem**>, Problem**, Problem*>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**, std::allocator<Problem*>&)
  0.00      0.49     0.00        1     0.00     0.00  Solution** std::__uninitialized_copy_a<std::move_iterator<Solution**>, Solution**, Solution*>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**, std::allocator<Solution*>&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n_a<std::vector<double, std::allocator<double> >*, unsigned long, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, unsigned long, std::allocator<std::vector<double, std::allocator<double> > >&)
  0.00      0.49     0.00        1     0.00     0.00  void std::__uninitialized_default_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, std::allocator<unsigned int>&)
  0.00      0.49     0.00        1     0.00     0.00  Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&)
  0.00      0.49     0.00        1     0.00     0.00  Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&)
  0.00      0.49     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
  0.00      0.49     0.00        1     0.00     0.00  void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int)
  0.00      0.49     0.00        1     0.00     0.00  std::remove_reference<Location&>::type&& std::move<Location&>(Location&)
  0.00      0.49     0.00        1     0.00     0.00  std::remove_reference<Solution::InterceptorNode&>::type&& std::move<Solution::InterceptorNode&>(Solution::InterceptorNode&)
  0.00      0.49     0.00        1     0.00     0.00  std::remove_reference<double&>::type&& std::move<double&>(double&)
  0.00      0.49     0.00        1     0.00     0.00  unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&)
  0.00      0.49     0.00        1     0.00     0.00  Location&& std::forward<Location>(std::remove_reference<Location>::type&)
  0.00      0.49     0.00        1     0.00     0.00  Solution::InterceptorNode&& std::forward<Solution::InterceptorNode>(std::remove_reference<Solution::InterceptorNode>::type&)
  0.00      0.49     0.00        1     0.00     0.00  char const* const& std::forward<char const* const&>(std::remove_reference<char const* const&>::type&)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy<char const**>(char const**, char const**)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*)
  0.00      0.49     0.00        1     0.00     0.00  void std::_Destroy<std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()>*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*)
  0.00      0.49     0.00        1     0.00     0.00  std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator==<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator==<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator==<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator==<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator==<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator!=<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator!=<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator!=<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator!=<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&)
  0.00      0.49     0.00        1     0.00     0.00  bool std::operator!=<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 2.04% of 0.49 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     95.9    0.00    0.47                 main [1]
                0.00    0.47      10/10          VND::run(Solution&) [2]
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::run() [58]
                0.00    0.00      20/4017        Solution::totalInterceptionCount() const [38]
                0.00    0.00      10/10          Solution::bestInterceptionCount() const [60]
                0.00    0.00      20/5016        Solution::worstInterceptionTime() const [54]
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
                0.00    0.00     320/726         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [144]
                0.00    0.00     160/160         std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned long) [163]
                0.00    0.00     110/154         std::vector<unsigned int, std::allocator<unsigned int> >::end() [164]
                0.00    0.00      90/616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00      90/90          std::vector<Move*, std::allocator<Move*> >::end() [174]
                0.00    0.00      90/90          bool __gnu_cxx::operator!=<Move**, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&) [173]
                0.00    0.00      80/80          std::function<Move* ()>::operator()() const [189]
                0.00    0.00      80/80          std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::operator[](unsigned long) [196]
                0.00    0.00      80/80          std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&) [195]
                0.00    0.00      80/80          std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&) [198]
                0.00    0.00      80/330         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [156]
                0.00    0.00      80/80          __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator*() const [188]
                0.00    0.00      80/80          __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator++() [186]
                0.00    0.00      30/46          std::vector<unsigned int, std::allocator<unsigned int> >::begin() [226]
                0.00    0.00      20/20          void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
                0.00    0.00      20/42489       Solution::problem() const [99]
                0.00    0.00      20/22          Problem::nbMobiles() const [285]
                0.00    0.00      20/20          std::vector<Solution*, std::allocator<Solution*> >::end() [308]
                0.00    0.00      20/20          bool __gnu_cxx::operator!=<Solution**, std::vector<Solution*, std::allocator<Solution*> > >(__gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&, __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&) [305]
                0.00    0.00      20/20          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator->() const [306]
                0.00    0.00      16/32          std::function<Move* ()>::~function() [257]
                0.00    0.00      13/44          std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
                0.00    0.00      11/11          Solution::Solution(Solution const&) [357]
                0.00    0.00      11/12          Solution::~Solution() [349]
                0.00    0.00      11/11          std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [384]
                0.00    0.00      11/11          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator!=(std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > const&) const [360]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::clear() [437]
                0.00    0.00      10/10          std::vector<unsigned int, std::allocator<unsigned int> >::clear() [442]
                0.00    0.00      10/10          std::vector<Solution*, std::allocator<Solution*> >::begin() [439]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator*() const [409]
                0.00    0.00      10/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00      10/4007        AvailablePolicy::minAcceptableCount() [136]
                0.00    0.00      10/10          VND::VND(std::vector<Move*, std::allocator<Move*> >&) [397]
                0.00    0.00      10/40          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
                0.00    0.00      10/10          BenchmarkResult::BenchmarkResult(double, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >) [396]
                0.00    0.00      10/10          std::vector<char const*, std::allocator<char const*> >::operator[](unsigned long) [440]
                0.00    0.00      10/10          std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&) [430]
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&) [451]
                0.00    0.00      10/10          std::pair<char const*, BenchmarkResult>::~pair() [431]
                0.00    0.00      10/30          BenchmarkResult::~BenchmarkResult() [261]
                0.00    0.00      10/10          VND::~VND() [398]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator++() [404]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::begin() [436]
                0.00    0.00      10/10          operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator++() [426]
                0.00    0.00       8/8           MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [465]
                0.00    0.00       7/7           MoveInsert<BestAvailablePolicy>::~MoveInsert() [496]
                0.00    0.00       7/7           MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [499]
                0.00    0.00       6/6           Move2Opt<FirstAvailablePolicy>::~Move2Opt() [530]
                0.00    0.00       6/6           MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [527]
                0.00    0.00       5/5           MoveReplace<FirstAvailablePolicy>::~MoveReplace() [570]
                0.00    0.00       5/5           MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [573]
                0.00    0.00       5/5           MoveExtract<BestAvailablePolicy>::~MoveExtract() [561]
                0.00    0.00       5/5           MoveExtract<FirstAvailablePolicy>::~MoveExtract() [564]
                0.00    0.00       5/5           MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [576]
                0.00    0.00       5/5           MoveReplace<BestAvailablePolicy>::~MoveReplace() [567]
                0.00    0.00       4/4           Move2Opt<BestAvailablePolicy>::~Move2Opt() [631]
                0.00    0.00       4/4           MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [628]
                0.00    0.00       3/3           MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [719]
                0.00    0.00       3/3           MoveInsert<FirstAvailablePolicy>::~MoveInsert() [716]
                0.00    0.00       2/2           std::vector<char const*, std::allocator<char const*> >::end() [964]
                0.00    0.00       2/2           bool __gnu_cxx::operator!=<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&) [849]
                0.00    0.00       2/4           std::allocator<unsigned int>::allocator() [651]
                0.00    0.00       2/2           std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
                0.00    0.00       2/87          std::allocator<unsigned int>::~allocator() [176]
                0.00    0.00       2/2           MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [826]
                0.00    0.00       2/7           std::vector<Problem*, std::allocator<Problem*> >::size() const [504]
                0.00    0.00       1/1           std::allocator<char const*>::allocator() [1137]
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
                0.00    0.00       1/2           std::allocator<char const*>::~allocator() [877]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::vector() [1324]
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::vector() [1329]
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::multimap() [1371]
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::begin() [1333]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator*() const [1100]
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&) [1320]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::back() [1323]
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::Heuristic_fastest(Problem const&) [1046]
                0.00    0.00       1/1           Heuristic::solution() [1051]
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&) [1327]
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::~Heuristic_fastest() [1047]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator++() [1095]
                0.00    0.00       1/1           std::vector<Move*, std::allocator<Move*> >::vector() [1319]
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::vector() [1346]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
                0.00    0.00       1/1           std::allocator<std::function<Move* ()> >::allocator() [1143]
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
                0.00    0.00       1/2           std::allocator<std::function<Move* ()> >::~allocator() [878]
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1370]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::operator[](unsigned long) [1326]
                0.00    0.00       1/1           Problem::~Problem() [1049]
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::operator[](unsigned long) [1331]
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector() [1343]
                0.00    0.00       1/11          std::vector<Move*, std::allocator<Move*> >::~vector() [381]
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~multimap() [1372]
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::~vector() [1330]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::~vector() [1325]
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::~vector() [1335]
-----------------------------------------------
                0.00    0.47      10/10          main [1]
[2]     95.9    0.00    0.47      10         VND::run(Solution&) [2]
                0.00    0.12    3997/3997        Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.08    3999/3999        MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.08    2998/2998        MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.04    1499/1499        Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.01    0.02    2997/2997        MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.03    2498/2498        MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.03    3996/3996        MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.03     999/999         MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.01    3497/3497        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3999/3999        MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
                0.00    0.00    2498/2498        MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    1996/1996        MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    1497/1497        MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    3997/3997        MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00     500/500         MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    1999/1999        MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    4496/4496        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
                0.00    0.00    2998/2998        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    1499/1499        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00     500/500         MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00   52459/52459       std::vector<Move*, std::allocator<Move*> >::operator[](unsigned long) [92]
                0.00    0.00   42469/42499       std::vector<Move*, std::allocator<Move*> >::size() const [98]
-----------------------------------------------
                0.00    0.00     500/288806      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/288806      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.01    8991/288806      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.01   11988/288806      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.01   14985/288806      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.02   19984/288806      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.01    0.03   35976/288806      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.01    0.04   44970/288806      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.01    0.04   51987/288806      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.02    0.08   95928/288806      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[3]     60.6    0.07    0.23  288806         Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.06    0.13  478674/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.01    0.00  767480/1112904     Solution::const_iterator::operator++() [16]
                0.01    0.00 1345092/2028902     Solution::const_iterator::~const_iterator() [23]
                0.01    0.00  767480/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00  478674/2915541     Mobile::position(double) const [17]
                0.00    0.00  577612/1937360     Mobile::id() const [24]
                0.00    0.00  577612/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  957348/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00  577612/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
-----------------------------------------------
                0.00    0.00      20/687542      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00   14988/687542      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   16983/687542      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.01   23976/687542      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.01   27976/687542      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.01   29970/687542      Solution::recomputeFrom(unsigned int) [20]
                0.01    0.01   43989/687542      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.01    0.01   50966/687542      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.06    0.13  478674/687542      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[4]     55.0    0.08    0.19  687542         Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.08    0.00  687542/687542      Interceptor::computeAlpha(double, double, double) [8]
                0.06    0.00 1980674/1980674     Location::equals(Location const&, double) const [9]
                0.03    0.00 1980674/2313454     std::isfinite(double) [13]
                0.01    0.00 1980674/2915541     Mobile::position(double) const [17]
                0.01    0.00 1293132/1293132     Interceptor::computePosition(double, Location&, double) const [29]
                0.00    0.00  687542/687542      Mobile::direction() const [78]
                0.00    0.00  687542/687547      std::numeric_limits<double>::infinity() [75]
                0.00    0.00  687542/687544      Depot::position() const [76]
                0.00    0.00  687542/687542      Interceptor::timeFromTo(Location const&, Location const&) const [77]
-----------------------------------------------
                0.00    0.12    3997/3997        VND::run(Solution&) [2]
[5]     23.9    0.00    0.12    3997         Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.02    0.08   95928/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.01    0.00  343742/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00  103922/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   95928/2313454     std::isfinite(double) [13]
                0.00    0.00   15988/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   43967/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00  103922/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00  131901/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   67949/2915541     Mobile::position(double) const [17]
                0.00    0.00   95928/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00   95928/131904      Solution::lastInterceptionTime(int) const [43]
                0.00    0.00   43967/1937360     Mobile::id() const [24]
                0.00    0.00   19985/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00  343742/581315      Problem::interceptors() const [79]
                0.00    0.00  275793/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   71946/224835      FirstAvailablePolicy::keepOn() [80]
                0.00    0.00   27979/144897      Interceptor::position() const [83]
                0.00    0.00    7994/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    7994/2973506     Location::Location(double, double) [70]
                0.00    0.00    3997/42489       Solution::problem() const [99]
                0.00    0.00    3997/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00    3997/33486       AvailablePolicy::maxAcceptableTime() [104]
-----------------------------------------------
                0.00    0.08    3999/3999        VND::run(Solution&) [2]
[6]     17.2    0.00    0.08    3999         MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.01    0.04   51987/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.01    0.01   43989/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   63984/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00   99975/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   79980/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00   11997/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   99975/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   99975/2915541     Mobile::position(double) const [17]
                0.00    0.00  127968/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   43989/2313454     std::isfinite(double) [13]
                0.00    0.00    7998/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00   43989/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   32491/1937360     Mobile::id() const [24]
                0.00    0.00   27993/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00   19995/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00   11997/20992       Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00  436889/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   59985/159896      BestAvailablePolicy::keepOn() [82]
                0.00    0.00   23994/144897      Interceptor::position() const [83]
                0.00    0.00    7998/581315      Problem::interceptors() const [79]
                0.00    0.00    4997/6494        BestAvailablePolicy::update(double, double&) [134]
                0.00    0.00    3999/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    3999/42489       Solution::problem() const [99]
                0.00    0.00    3999/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    3999/2973506     Location::Location(double, double) [70]
-----------------------------------------------
                0.00    0.08    2998/2998        VND::run(Solution&) [2]
[7]     16.5    0.00    0.08    2998         MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.01    0.04   44970/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.01    0.01   50966/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   53964/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   29980/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00   86942/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   50966/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00   80946/2313454     std::isfinite(double) [13]
                0.00    0.00    8994/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00   86942/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   95936/2915541     Mobile::position(double) const [17]
                0.00    0.00   20986/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00  107928/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00  101932/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   74950/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00   20986/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00  284810/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   86942/224835      FirstAvailablePolicy::keepOn() [80]
                0.00    0.00   20986/581315      Problem::interceptors() const [79]
                0.00    0.00   20986/144897      Interceptor::position() const [83]
                0.00    0.00    8994/124443      Problem::mobiles() const [85]
                0.00    0.00    5996/2973506     Location::Location(double, double) [70]
                0.00    0.00    2998/42489       Solution::problem() const [99]
                0.00    0.00    2998/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    2998/19486       FirstAvailablePolicy::reset() [107]
-----------------------------------------------
                0.08    0.00  687542/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[8]     16.3    0.08    0.00  687542         Interceptor::computeAlpha(double, double, double) [8]
-----------------------------------------------
                0.06    0.00 1980674/1980674     Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[9]     12.2    0.06    0.00 1980674         Location::equals(Location const&, double) const [9]
-----------------------------------------------
                0.00    0.04    1499/1499        VND::run(Solution&) [2]
[10]     9.0    0.00    0.04    1499         Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.01    0.03   35976/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00  128914/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00   38974/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   35976/2313454     std::isfinite(double) [13]
                0.00    0.00    5996/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   16489/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00   38974/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   49467/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   25483/2915541     Mobile::position(double) const [17]
                0.00    0.00   35976/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00   35976/131904      Solution::lastInterceptionTime(int) const [43]
                0.00    0.00   16489/1937360     Mobile::id() const [24]
                0.00    0.00    7495/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00  128914/581315      Problem::interceptors() const [79]
                0.00    0.00  103431/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   26982/159896      BestAvailablePolicy::keepOn() [82]
                0.00    0.00   10493/144897      Interceptor::position() const [83]
                0.00    0.00    2998/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    2998/2973506     Location::Location(double, double) [70]
                0.00    0.00    1499/42489       Solution::problem() const [99]
                0.00    0.00    1499/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    1499/22983       BestAvailablePolicy::reset() [106]
-----------------------------------------------
                0.01    0.02    2997/2997        VND::run(Solution&) [2]
[11]     7.0    0.01    0.02    2997         MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.01   23976/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.01    8991/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00   17982/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00   47952/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   41958/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00    8991/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   47952/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   62937/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   29970/2915541     Mobile::position(double) const [17]
                0.00    0.00    5994/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00   11988/2313454     std::isfinite(double) [13]
                0.00    0.00   17982/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   11988/1937360     Mobile::id() const [24]
                0.00    0.00    8991/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00    2997/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  119877/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   32967/159896      BestAvailablePolicy::keepOn() [82]
                0.00    0.00   17982/124443      Problem::mobiles() const [85]
                0.00    0.00   14985/144897      Interceptor::position() const [83]
                0.00    0.00    5994/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    5994/581315      Problem::interceptors() const [79]
                0.00    0.00    2997/42489       Solution::problem() const [99]
                0.00    0.00    2997/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    2997/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    2997/2973506     Location::Location(double, double) [70]
                0.00    0.00    1497/6494        BestAvailablePolicy::update(double, double&) [134]
-----------------------------------------------
                0.00    0.03    2498/2498        VND::run(Solution&) [2]
[12]     6.3    0.00    0.03    2498         MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.02   19984/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00   14988/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   22482/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00   29976/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   24980/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00    4996/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   34972/2915541     Mobile::position(double) const [17]
                0.00    0.00   29976/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   14988/2313454     std::isfinite(double) [13]
                0.00    0.00   37470/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   14988/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00    2498/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00    9992/1937360     Mobile::id() const [24]
                0.00    0.00    9992/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00    7494/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00    2498/20992       Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00  147382/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   24980/224835      FirstAvailablePolicy::keepOn() [80]
                0.00    0.00    7494/144897      Interceptor::position() const [83]
                0.00    0.00    2498/42489       Solution::problem() const [99]
                0.00    0.00    2498/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    2498/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00    2498/2973506     Location::Location(double, double) [70]
                0.00    0.00    2498/581315      Problem::interceptors() const [79]
                0.00    0.00    2498/4494        FirstAvailablePolicy::update(double, double&) [135]
-----------------------------------------------
                0.00    0.00      10/2313454     void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00    1000/2313454     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    6994/2313454     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   11988/2313454     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   13988/2313454     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   14988/2313454     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   26973/2313454     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   35976/2313454     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   43989/2313454     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   80946/2313454     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   95928/2313454     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.03    0.00 1980674/2313454     Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[13]     6.1    0.03    0.00 2313454         std::isfinite(double) [13]
-----------------------------------------------
                0.00    0.03    3996/3996        VND::run(Solution&) [2]
[14]     6.1    0.00    0.03    3996         MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.01   11988/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.01   27976/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   23976/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00   47968/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   41972/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00    9992/147940      Problem::nbInterceptors() const [30]
                0.00    0.00   47968/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   65952/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   35968/2915541     Mobile::position(double) const [17]
                0.00    0.00   13988/2313454     std::isfinite(double) [13]
                0.00    0.00    5996/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00   19984/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   13988/1937360     Mobile::id() const [24]
                0.00    0.00    9992/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00    3996/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  143868/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   37968/224835      FirstAvailablePolicy::keepOn() [80]
                0.00    0.00   23976/124443      Problem::mobiles() const [85]
                0.00    0.00   17984/144897      Interceptor::position() const [83]
                0.00    0.00    7992/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    5996/581315      Problem::interceptors() const [79]
                0.00    0.00    3996/42489       Solution::problem() const [99]
                0.00    0.00    3996/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00    3996/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    3996/2973506     Location::Location(double, double) [70]
                0.00    0.00    1996/4494        FirstAvailablePolicy::update(double, double&) [135]
-----------------------------------------------
                0.00    0.03     999/999         VND::run(Solution&) [2]
[15]     5.5    0.00    0.03     999         MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.01   14985/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00   16983/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   17982/147940      Problem::nbInterceptors() const [30]
                0.00    0.00    9990/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00   28971/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   16983/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00   26973/2313454     std::isfinite(double) [13]
                0.00    0.00    2997/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00   28971/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   31968/2915541     Mobile::position(double) const [17]
                0.00    0.00    6993/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00   35964/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00   33966/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   24975/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00    6993/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00   94905/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00   28971/159896      BestAvailablePolicy::keepOn() [82]
                0.00    0.00    6993/581315      Problem::interceptors() const [79]
                0.00    0.00    6993/144897      Interceptor::position() const [83]
                0.00    0.00    2997/124443      Problem::mobiles() const [85]
                0.00    0.00    1998/2973506     Location::Location(double, double) [70]
                0.00    0.00     999/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00     999/42489       Solution::problem() const [99]
                0.00    0.00     999/33486       AvailablePolicy::maxAcceptableTime() [104]
-----------------------------------------------
                0.00    0.00      50/1112904     Solution::bestInterceptionCount() const [60]
                0.00    0.00    1000/1112904     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    6994/1112904     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   16489/1112904     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   16983/1112904     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   20085/1112904     Solution::totalInterceptionCount() const [38]
                0.00    0.00   24980/1112904     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   41958/1112904     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   41972/1112904     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   43967/1112904     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   50966/1112904     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   79980/1112904     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.01    0.00  767480/1112904     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[16]     5.3    0.02    0.01 1112904         Solution::const_iterator::operator++() [16]
                0.01    0.00 1112904/1937360     Mobile::id() const [24]
-----------------------------------------------
                0.00    0.00       5/2915541     void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     500/2915541     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/2915541     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   25483/2915541     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   29970/2915541     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   29970/2915541     Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00   31968/2915541     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   34972/2915541     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   35968/2915541     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   67949/2915541     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   95936/2915541     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   99975/2915541     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  478674/2915541     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.01    0.00 1980674/2915541     Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[17]     4.1    0.02    0.00 2915541         Mobile::position(double) const [17]
                0.00    0.00 2915541/2973506     Location::Location(double, double) [70]
-----------------------------------------------
                0.00    0.00      30/529147      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00    1999/529147      MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    2498/529147      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    3997/529147      MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    5994/529147      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    5996/529147      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    6993/529147      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    7998/529147      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   20986/529147      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00  128914/529147      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.01    0.00  343742/529147      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[18]     3.1    0.02    0.00  529147         std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
-----------------------------------------------
                0.00    0.00      70/524860      Solution::bestInterceptionCount() const [60]
                0.00    0.00    1500/524860      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00   10491/524860      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   28119/524860      Solution::totalInterceptionCount() const [38]
                0.00    0.00   28971/524860      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   29976/524860      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   38974/524860      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   47952/524860      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   47968/524860      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   86942/524860      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   99975/524860      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  103922/524860      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[19]     2.6    0.01    0.00  524860         Solution::end(Interceptor const&) const [19]
                0.00    0.00  524860/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  524860/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
-----------------------------------------------
                0.00    0.00    1497/9990        MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1996/9990        MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.01    6497/9990        Solution::recomputeFrom(Mobile const&) [31]
[20]     2.5    0.00    0.01    9990         Solution::recomputeFrom(unsigned int) [20]
                0.00    0.01   29970/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00   29970/2915541     Mobile::position(double) const [17]
                0.00    0.00   29970/29970       Solution::iterator::operator++() [49]
                0.00    0.00  129870/129870      Solution::iterator::operator->() [84]
                0.00    0.00   49950/49950       Solution::iterator::~iterator() [95]
                0.00    0.00   39960/39960       Solution::end(Interceptor const&) [100]
                0.00    0.00   39960/39960       Solution::iterator::operator!=(Solution::iterator) [101]
                0.00    0.00   19980/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
                0.00    0.00    9990/49950       Solution::iterator::iterator(Solution::MobileNode*) [94]
                0.00    0.00    9990/144897      Interceptor::position() const [83]
-----------------------------------------------
                0.00    0.00     500/130433      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/130433      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    9990/130433      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   22482/130433      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   29980/130433      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   63984/130433      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[21]     2.2    0.01    0.00  130433         Solution::mobile(unsigned int) const [21]
                0.00    0.00  130433/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
-----------------------------------------------
                0.00    0.00   20992/2082916     Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00   47465/2082916     Solution::isCaught(Mobile const&) const [46]
                0.00    0.00  121980/2082916     Solution::begin(Interceptor const&) const [44]
                0.00    0.00  130433/2082916     Solution::mobile(unsigned int) const [21]
                0.00    0.00  131904/2082916     Solution::lastInterceptionTime(int) const [43]
                0.00    0.00  254864/2082916     Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00  272806/2082916     Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  524860/2082916     Solution::end(Interceptor const&) const [19]
                0.00    0.00  577612/2082916     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[22]     2.0    0.01    0.00 2082916         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
-----------------------------------------------
                0.00    0.00      90/2028902     Solution::bestInterceptionCount() const [60]
                0.00    0.00    2000/2028902     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3998/2028902     MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    7994/2028902     MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00   13988/2028902     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   35964/2028902     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   36153/2028902     Solution::totalInterceptionCount() const [38]
                0.00    0.00   37470/2028902     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   49467/2028902     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   62937/2028902     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   65952/2028902     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00  107928/2028902     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00  127968/2028902     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  131901/2028902     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.01    0.00 1345092/2028902     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[23]     2.0    0.01    0.00 2028902         Solution::const_iterator::~const_iterator() [23]
-----------------------------------------------
                0.00    0.00       5/1937360     Solution::append(Interceptor const&, Mobile const&, double const&) [63]
                0.00    0.00      40/1937360     void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00    2498/1937360     MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    2994/1937360     MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    3992/1937360     MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    3999/1937360     MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
                0.00    0.00    6497/1937360     Solution::recomputeFrom(Mobile const&) [31]
                0.00    0.00    6986/1937360     Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    9992/1937360     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   11988/1937360     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   13483/1937360     Solution::remove(Mobile const&) [53]
                0.00    0.00   13988/1937360     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   16489/1937360     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   29970/1937360     Solution::iterator::operator++() [49]
                0.00    0.00   32491/1937360     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   43967/1937360     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   47465/1937360     Solution::isCaught(Mobile const&) const [46]
                0.00    0.00  577612/1937360     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.01    0.00 1112904/1937360     Solution::const_iterator::operator++() [16]
[24]     2.0    0.01    0.00 1937360         Mobile::id() const [24]
-----------------------------------------------
                0.00    0.00      70/1292340     Solution::bestInterceptionCount() const [60]
                0.00    0.00    1500/1292340     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00   10491/1292340     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   28119/1292340     Solution::totalInterceptionCount() const [38]
                0.00    0.00   28971/1292340     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   29976/1292340     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   38974/1292340     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   47952/1292340     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   47968/1292340     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   86942/1292340     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   99975/1292340     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  103922/1292340     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.01    0.00  767480/1292340     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[25]     2.0    0.01    0.00 1292340         Solution::const_iterator::operator!=(Solution::const_iterator) [25]
-----------------------------------------------
                0.00    0.00       1/147941      std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
                0.01    0.00  147940/147941      Problem::nbInterceptors() const [30]
[26]     2.0    0.01    0.00  147941         std::vector<Interceptor, std::allocator<Interceptor> >::size() const [26]
-----------------------------------------------
                                                 <spontaneous>
[27]     2.0    0.01    0.00                 Move::~Move() [27]
-----------------------------------------------
                                                 <spontaneous>
[28]     2.0    0.01    0.00                 Problem::nbDepots() const [28]
-----------------------------------------------
                0.01    0.00 1293132/1293132     Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[29]     2.0    0.01    0.00 1293132         Interceptor::computePosition(double, Location&, double) const [29]
-----------------------------------------------
                0.00    0.00      46/147940      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00    4996/147940      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    5996/147940      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    5997/147940      MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    8991/147940      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    9992/147940      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   11991/147940      MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00   11997/147940      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   15988/147940      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   17982/147940      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   53964/147940      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
[30]     2.0    0.00    0.01  147940         Problem::nbInterceptors() const [30]
                0.01    0.00  147940/147941      std::vector<Interceptor, std::allocator<Interceptor> >::size() const [26]
-----------------------------------------------
                0.00    0.00    2498/6497        MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    3999/6497        MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
[31]     1.6    0.00    0.01    6497         Solution::recomputeFrom(Mobile const&) [31]
                0.00    0.01    6497/9990        Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00    6497/1937360     Mobile::id() const [24]
-----------------------------------------------
                0.00    0.01    3497/3497        VND::run(Solution&) [2]
[32]     1.3    0.00    0.01    3497         MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3497/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00    3497/4017        Solution::totalInterceptionCount() const [38]
                0.00    0.00    3497/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00    3497/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00   10491/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00    6994/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00    6994/2313454     std::isfinite(double) [13]
                0.00    0.00   10491/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   13988/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00    3497/3997        Solution::worstRoute() const [55]
                0.00    0.00    3497/2915541     Mobile::position(double) const [17]
                0.00    0.00    3497/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00    3497/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00    3497/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00   20982/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00    6994/6994        BestAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [133]
                0.00    0.00    6994/159896      BestAvailablePolicy::keepOn() [82]
                0.00    0.00    3497/3997        Solution::first() const [137]
                0.00    0.00    3497/42489       Solution::problem() const [99]
                0.00    0.00    3497/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    3497/4007        AvailablePolicy::minAcceptableCount() [136]
                0.00    0.00    3497/2973506     Location::Location(double, double) [70]
                0.00    0.00    3497/144897      Interceptor::position() const [83]
                0.00    0.00    3497/124443      Problem::mobiles() const [85]
-----------------------------------------------
                0.00    0.00      25/57971       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     500/57971       MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    2997/57971       MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    3497/57971       MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    8994/57971       MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   17982/57971       MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   23976/57971       MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
[33]     1.0    0.01    0.00   57971         std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
-----------------------------------------------
                0.00    0.00    3999/3999        VND::run(Solution&) [2]
[34]     1.0    0.00    0.00    3999         MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
                0.00    0.00    3999/6497        Solution::recomputeFrom(Mobile const&) [31]
                0.00    0.00    3999/13483       Solution::remove(Mobile const&) [53]
                0.00    0.00    3999/1937360     Mobile::id() const [24]
                0.00    0.00    3999/20992       Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00    3999/943031      Interceptor::id() const [74]
                0.00    0.00    3999/13483       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
-----------------------------------------------
                0.00    0.00    2498/2498        VND::run(Solution&) [2]
[35]     0.6    0.00    0.00    2498         MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    2498/6497        Solution::recomputeFrom(Mobile const&) [31]
                0.00    0.00    2498/1937360     Mobile::id() const [24]
                0.00    0.00    2498/13483       Solution::remove(Mobile const&) [53]
                0.00    0.00    2498/20992       Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00    2498/943031      Interceptor::id() const [74]
                0.00    0.00    2498/13483       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
-----------------------------------------------
                0.00    0.00    1996/1996        VND::run(Solution&) [2]
[36]     0.5    0.00    0.00    1996         MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    1996/9990        Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00    3992/1937360     Mobile::id() const [24]
                0.00    0.00    3992/13483       Solution::remove(Mobile const&) [53]
                0.00    0.00    1996/3493        Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    3992/943031      Interceptor::id() const [74]
                0.00    0.00    1996/3493        Solution::mobile(unsigned int) [138]
                0.00    0.00    1996/13483       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
                0.00    0.00    1996/3493        Solution::operator[](unsigned int) [139]
-----------------------------------------------
                0.00    0.00    1497/1497        VND::run(Solution&) [2]
[37]     0.4    0.00    0.00    1497         MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1497/9990        Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00    2994/13483       Solution::remove(Mobile const&) [53]
                0.00    0.00    2994/1937360     Mobile::id() const [24]
                0.00    0.00    1497/3493        Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    2994/943031      Interceptor::id() const [74]
                0.00    0.00    1497/3493        Solution::mobile(unsigned int) [138]
                0.00    0.00    1497/13483       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
                0.00    0.00    1497/3493        Solution::operator[](unsigned int) [139]
-----------------------------------------------
                0.00    0.00      20/4017        main [1]
                0.00    0.00     500/4017        MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/4017        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
[38]     0.3    0.00    0.00    4017         Solution::totalInterceptionCount() const [38]
                0.00    0.00   28119/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00   20085/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00   28119/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00   36153/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00    8034/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00   36153/62265       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
                0.00    0.00   16068/581315      Problem::interceptors() const [79]
                0.00    0.00   12051/39120       std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
                0.00    0.00   12051/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00    8034/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00    4017/13040       std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
-----------------------------------------------
                0.00    0.00     500/272806      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    2997/272806      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    3497/272806      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3996/272806      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    9992/272806      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   19995/272806      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   24975/272806      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   35976/272806      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   74950/272806      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   95928/272806      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[39]     0.3    0.00    0.00  272806         Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  272806/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  272806/943031      Interceptor::id() const [74]
                0.00    0.00  272806/1057410     std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
-----------------------------------------------
                0.00    0.00     500/254864      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/254864      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    7994/254864      Solution::worstRoute() const [55]
                0.00    0.00   10032/254864      Solution::worstInterceptionTime() const [54]
                0.00    0.00   14988/254864      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   17982/254864      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   19984/254864      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   33966/254864      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   43989/254864      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  101932/254864      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
[40]     0.2    0.00    0.00  254864         Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00  254864/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  509728/943031      Interceptor::id() const [74]
                0.00    0.00  509728/1057410     std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
-----------------------------------------------
                0.00    0.00    3997/3997        VND::run(Solution&) [2]
[41]     0.2    0.00    0.00    3997         MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00   11991/147940      Problem::nbInterceptors() const [30]
                0.00    0.00    3997/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00    7994/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00    7994/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    7994/2973506     Location::Location(double, double) [70]
                0.00    0.00    3997/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    3997/42489       Solution::problem() const [99]
                0.00    0.00    3997/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    3997/581315      Problem::interceptors() const [79]
                0.00    0.00    3997/159896      BestAvailablePolicy::keepOn() [82]
-----------------------------------------------
                0.00    0.00     500/500         VND::run(Solution&) [2]
[42]     0.2    0.00    0.00     500         MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00     500/288806      Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
                0.00    0.00     500/4017        Solution::totalInterceptionCount() const [38]
                0.00    0.00     500/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00     500/130433      Solution::mobile(unsigned int) const [21]
                0.00    0.00    1500/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00    1000/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00    1000/2313454     std::isfinite(double) [13]
                0.00    0.00    1500/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00    2000/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00     500/3997        Solution::worstRoute() const [55]
                0.00    0.00     500/2915541     Mobile::position(double) const [17]
                0.00    0.00     500/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00     500/272806      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00     500/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00    3000/2588285     Solution::const_iterator::operator->() const [71]
                0.00    0.00    1000/1000        FirstAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [141]
                0.00    0.00    1000/224835      FirstAvailablePolicy::keepOn() [80]
                0.00    0.00     500/3997        Solution::first() const [137]
                0.00    0.00     500/42489       Solution::problem() const [99]
                0.00    0.00     500/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00     500/4007        AvailablePolicy::minAcceptableCount() [136]
                0.00    0.00     500/2973506     Location::Location(double, double) [70]
                0.00    0.00     500/144897      Interceptor::position() const [83]
                0.00    0.00     500/124443      Problem::mobiles() const [85]
-----------------------------------------------
                0.00    0.00   35976/131904      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   95928/131904      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[43]     0.1    0.00    0.00  131904         Solution::lastInterceptionTime(int) const [43]
                0.00    0.00  131904/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  131904/1057410     std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
-----------------------------------------------
                0.00    0.00      20/121980      Solution::bestInterceptionCount() const [60]
                0.00    0.00     500/121980      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/121980      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    6993/121980      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    7494/121980      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    7495/121980      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    8034/121980      Solution::totalInterceptionCount() const [38]
                0.00    0.00    8991/121980      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    9992/121980      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   19985/121980      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   20986/121980      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   27993/121980      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[44]     0.1    0.00    0.00  121980         Solution::begin(Interceptor const&) const [44]
                0.00    0.00  121980/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00  121980/943031      Interceptor::id() const [74]
                0.00    0.00  121980/1057410     std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
                0.00    0.00  121980/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
-----------------------------------------------
                0.00    0.00    1999/1999        VND::run(Solution&) [2]
[45]     0.1    0.00    0.00    1999         MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    5997/147940      Problem::nbInterceptors() const [30]
                0.00    0.00    1999/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00    3998/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00    3998/1261422     Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
                0.00    0.00    3998/2973506     Location::Location(double, double) [70]
                0.00    0.00    1999/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00    1999/42489       Solution::problem() const [99]
                0.00    0.00    1999/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    1999/581315      Problem::interceptors() const [79]
                0.00    0.00    1999/224835      FirstAvailablePolicy::keepOn() [80]
-----------------------------------------------
                0.00    0.00   47465/47465       Solution::uncaughtMobiles() const [47]
[46]     0.1    0.00    0.00   47465         Solution::isCaught(Mobile const&) const [46]
                0.00    0.00   47465/1937360     Mobile::id() const [24]
                0.00    0.00   47465/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
-----------------------------------------------
                0.00    0.00     500/9493        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/9493        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2998/9493        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    4496/9493        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[47]     0.1    0.00    0.00    9493         Solution::uncaughtMobiles() const [47]
                0.00    0.00   47465/47465       Solution::isCaught(Mobile const&) const [46]
                0.00    0.00   66451/124443      Problem::mobiles() const [85]
                0.00    0.00   56958/56976       std::vector<Mobile, std::allocator<Mobile> >::end() const [91]
                0.00    0.00   56958/56976       bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [90]
                0.00    0.00   47465/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const [97]
                0.00    0.00   47465/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++() [96]
                0.00    0.00    9493/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::vector() [129]
                0.00    0.00    9493/9496        std::vector<Mobile, std::allocator<Mobile> >::begin() const [114]
-----------------------------------------------
                0.00    0.00    4496/4496        VND::run(Solution&) [2]
[48]     0.1    0.00    0.00    4496         MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
                0.00    0.00    4496/9493        Solution::uncaughtMobiles() const [47]
                0.00    0.00    4496/5016        Solution::worstInterceptionTime() const [54]
                0.00    0.00    4496/42489       Solution::problem() const [99]
                0.00    0.00    4496/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    4496/2973506     Location::Location(double, double) [70]
                0.00    0.00    4496/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00    4496/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
                0.00    0.00    4496/9493        bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
                0.00    0.00    4496/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
-----------------------------------------------
                0.00    0.00   29970/29970       Solution::recomputeFrom(unsigned int) [20]
[49]     0.0    0.00    0.00   29970         Solution::iterator::operator++() [49]
                0.00    0.00   29970/1937360     Mobile::id() const [24]
-----------------------------------------------
                0.00    0.00    2998/2998        VND::run(Solution&) [2]
[50]     0.0    0.00    0.00    2998         MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    2998/9493        Solution::uncaughtMobiles() const [47]
                0.00    0.00    2998/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00    2998/42489       Solution::problem() const [99]
                0.00    0.00    2998/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    2998/2973506     Location::Location(double, double) [70]
                0.00    0.00    2998/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00    2998/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
                0.00    0.00    2998/9493        bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
                0.00    0.00    2998/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
-----------------------------------------------
                0.00    0.00    2498/20992       MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    2498/20992       MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    3999/20992       MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
                0.00    0.00   11997/20992       MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[51]     0.0    0.00    0.00   20992         Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00   20992/2082916     std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [22]
                0.00    0.00   20992/943031      Interceptor::id() const [74]
                0.00    0.00   20992/1057410     std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
-----------------------------------------------
                0.00    0.00    1499/1499        VND::run(Solution&) [2]
[52]     0.0    0.00    0.00    1499         MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    1499/9493        Solution::uncaughtMobiles() const [47]
                0.00    0.00    1499/42489       Solution::problem() const [99]
                0.00    0.00    1499/22983       BestAvailablePolicy::reset() [106]
                0.00    0.00    1499/33486       AvailablePolicy::maxAcceptableTime() [104]
                0.00    0.00    1499/2973506     Location::Location(double, double) [70]
                0.00    0.00    1499/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00    1499/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
                0.00    0.00    1499/9493        bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
                0.00    0.00    1499/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
-----------------------------------------------
                0.00    0.00    2498/13483       MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    2994/13483       MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    3992/13483       MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    3999/13483       MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
[53]     0.0    0.00    0.00   13483         Solution::remove(Mobile const&) [53]
                0.00    0.00   13483/1937360     Mobile::id() const [24]
                0.00    0.00   13483/13483       Solution::remove(unsigned int) [112]
-----------------------------------------------
                0.00    0.00      20/5016        main [1]
                0.00    0.00     500/5016        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    4496/5016        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[54]     0.0    0.00    0.00    5016         Solution::worstInterceptionTime() const [54]
                0.00    0.00   10032/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   20064/581315      Problem::interceptors() const [79]
                0.00    0.00   15048/39120       std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
                0.00    0.00   15048/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00   10032/62265       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
                0.00    0.00   10032/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00    5016/13040       std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
-----------------------------------------------
                0.00    0.00     500/3997        MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/3997        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
[55]     0.0    0.00    0.00    3997         Solution::worstRoute() const [55]
                0.00    0.00    7994/254864      Solution::lastInterceptionTime(Interceptor const&) const [40]
                0.00    0.00   15988/581315      Problem::interceptors() const [79]
                0.00    0.00   15988/62265       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
                0.00    0.00   11991/39120       std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
                0.00    0.00   11991/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00    7994/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00    3997/13040       std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
-----------------------------------------------
                0.00    0.00    1497/3493        MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1996/3493        MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
[56]     0.0    0.00    0.00    3493         Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    6986/1937360     Mobile::id() const [24]
                0.00    0.00    3493/943031      Interceptor::id() const [74]
                0.00    0.00    3493/13483       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
-----------------------------------------------
                0.00    0.00     500/500         VND::run(Solution&) [2]
[57]     0.0    0.00    0.00     500         MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00     500/9493        Solution::uncaughtMobiles() const [47]
                0.00    0.00     500/5016        Solution::worstInterceptionTime() const [54]
                0.00    0.00     500/19486       FirstAvailablePolicy::reset() [107]
                0.00    0.00     500/42489       Solution::problem() const [99]
                0.00    0.00     500/2973506     Location::Location(double, double) [70]
                0.00    0.00     500/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00     500/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
                0.00    0.00     500/9493        bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
                0.00    0.00     500/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[58]     0.0    0.00    0.00       1         Heuristic_fastest<SimpleCachePolicy>::run() [58]
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
-----------------------------------------------
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::run() [58]
[59]     0.0    0.00    0.00       1         void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      20/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
                0.00    0.00      46/147940      Problem::nbInterceptors() const [30]
                0.00    0.00      25/57971       std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [33]
                0.00    0.00      30/529147      std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [18]
                0.00    0.00      40/1937360     Mobile::id() const [24]
                0.00    0.00      10/2313454     std::isfinite(double) [13]
                0.00    0.00       5/2915541     Mobile::position(double) const [17]
                0.00    0.00       5/5           Solution::append(Interceptor const&, Mobile const&, double const&) [63]
                0.00    0.00      45/943031      Interceptor::id() const [74]
                0.00    0.00      39/124443      Problem::mobiles() const [85]
                0.00    0.00      36/154         std::vector<unsigned int, std::allocator<unsigned int> >::end() [164]
                0.00    0.00      35/726         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [144]
                0.00    0.00      35/616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00      34/581315      Problem::interceptors() const [79]
                0.00    0.00      30/30          SimpleCachePolicy::get(unsigned int, unsigned int) [262]
                0.00    0.00      25/330         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [156]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator->() const [287]
                0.00    0.00      20/20          SimpleCachePolicy::set(unsigned int, unsigned int, double) [301]
                0.00    0.00      20/70          std::vector<double, std::allocator<double> >::operator[](unsigned long) [201]
                0.00    0.00      15/15          std::vector<Location, std::allocator<Location> >::operator[](unsigned long) [333]
                0.00    0.00      12/56976       std::vector<Mobile, std::allocator<Mobile> >::end() const [91]
                0.00    0.00      12/56976       bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [90]
                0.00    0.00      11/46          std::vector<unsigned int, std::allocator<unsigned int> >::begin() [226]
                0.00    0.00      10/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const [97]
                0.00    0.00      10/10          std::vector<Location, std::allocator<Location> >::back() [434]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator->() const [408]
                0.00    0.00      10/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++() [96]
                0.00    0.00       6/6           std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [541]
                0.00    0.00       5/687547      std::numeric_limits<double>::infinity() [75]
                0.00    0.00       5/5           __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator<unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int*, __gnu_cxx::__enable_if<std::__are_same<unsigned int*, unsigned int*>::__value, std::vector<unsigned int, std::allocator<unsigned int> > >::__type> const&) [586]
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
                0.00    0.00       3/6           std::vector<Interceptor, std::allocator<Interceptor> >::end() const [540]
                0.00    0.00       3/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00       2/22          Problem::nbMobiles() const [285]
                0.00    0.00       2/144897      Interceptor::position() const [83]
                0.00    0.00       2/2           std::vector<Location, std::allocator<Location> >::push_back(Location const&) [956]
                0.00    0.00       2/2           void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [965]
                0.00    0.00       2/9496        std::vector<Mobile, std::allocator<Mobile> >::begin() const [114]
                0.00    0.00       2/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00       1/4           std::allocator<unsigned int>::allocator() [651]
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&) [1345]
                0.00    0.00       1/87          std::allocator<unsigned int>::~allocator() [176]
                0.00    0.00       1/1           std::vector<Location, std::allocator<Location> >::vector() [1315]
                0.00    0.00       1/3           std::vector<double, std::allocator<double> >::vector() [784]
                0.00    0.00       1/1           void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int) [1409]
                0.00    0.00       1/1           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
                0.00    0.00       1/2           std::vector<Interceptor, std::allocator<Interceptor> >::begin() const [868]
                0.00    0.00       1/3           std::vector<double, std::allocator<double> >::~vector() [785]
                0.00    0.00       1/1           std::vector<Location, std::allocator<Location> >::~vector() [1316]
                0.00    0.00       1/44          std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[60]     0.0    0.00    0.00      10         Solution::bestInterceptionCount() const [60]
                0.00    0.00      70/524860      Solution::end(Interceptor const&) const [19]
                0.00    0.00      50/1112904     Solution::const_iterator::operator++() [16]
                0.00    0.00      70/1292340     Solution::const_iterator::operator!=(Solution::const_iterator) [25]
                0.00    0.00      90/2028902     Solution::const_iterator::~const_iterator() [23]
                0.00    0.00      20/121980      Solution::begin(Interceptor const&) const [44]
                0.00    0.00      90/62265       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
                0.00    0.00      40/581315      Problem::interceptors() const [79]
                0.00    0.00      30/39120       std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
                0.00    0.00      30/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00      20/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00      10/13040       std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[61]     0.0    0.00    0.00       1         Problem::Problem(char const*) [61]
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
                0.00    0.00       5/5           void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&) [611]
                0.00    0.00       4/4           std::vector<Depot, std::allocator<Depot> >::operator[](unsigned long) [675]
                0.00    0.00       2/2           void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::back() [953]
                0.00    0.00       2/2           Depot::addInterceptor(Interceptor const&) [828]
                0.00    0.00       2/2           void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&) [954]
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::vector() [1305]
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::vector() [1313]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::vector() [1309]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[62]     0.0    0.00    0.00       1         std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
                0.00    0.00       1/147941      std::vector<Interceptor, std::allocator<Interceptor> >::size() const [26]
                0.00    0.00       2/2           std::move_iterator<Interceptor*> std::__make_move_if_noexcept_iterator<Interceptor*, std::move_iterator<Interceptor*> >(Interceptor*) [988]
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const [1112]
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::capacity() const [1111]
                0.00    0.00       1/1           Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>) [1304]
                0.00    0.00       1/3           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() [743]
                0.00    0.00       1/2           void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&) [1002]
                0.00    0.00       1/2           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long) [886]
-----------------------------------------------
                0.00    0.00       5/5           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[63]     0.0    0.00    0.00       5         Solution::append(Interceptor const&, Mobile const&, double const&) [63]
                0.00    0.00       5/1937360     Mobile::id() const [24]
                0.00    0.00       5/943031      Interceptor::id() const [74]
                0.00    0.00       5/5           Solution::append(unsigned int, unsigned int, double const&) [581]
-----------------------------------------------
                0.00    0.00       2/2973506     Depot::Depot(double, double, unsigned int) [829]
                0.00    0.00       5/2973506     Mobile::Mobile(double, double, double, double, unsigned int) [578]
                0.00    0.00     500/2973506     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00     500/2973506     MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/2973506     MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    1998/2973506     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    2498/2973506     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    2997/2973506     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    2998/2973506     MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    2998/2973506     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    3497/2973506     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3996/2973506     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    3998/2973506     MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    3999/2973506     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00    4496/2973506     MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
                0.00    0.00    5996/2973506     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00    7994/2973506     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00    7994/2973506     MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00 2915541/2973506     Mobile::position(double) const [17]
[70]     0.0    0.00    0.00 2973506         Location::Location(double, double) [70]
-----------------------------------------------
                0.00    0.00    3000/2588285     MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00   20982/2588285     MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   94905/2588285     MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00  103431/2588285     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00  119877/2588285     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00  143868/2588285     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00  147382/2588285     MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00  275793/2588285     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00  284810/2588285     MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00  436889/2588285     MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00  957348/2588285     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[71]     0.0    0.00    0.00 2588285         Solution::const_iterator::operator->() const [71]
-----------------------------------------------
                0.00    0.00    2998/1261422     Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    3998/1261422     MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    5994/1261422     MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    7992/1261422     MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    7994/1261422     Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00    7994/1261422     MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00  121980/1261422     Solution::begin(Interceptor const&) const [44]
                0.00    0.00  524860/1261422     Solution::end(Interceptor const&) const [19]
                0.00    0.00  577612/1261422     Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [3]
[72]     0.0    0.00    0.00 1261422         Solution::const_iterator::const_iterator(Solution::MobileNode const*) [72]
-----------------------------------------------
                0.00    0.00   20992/1057410     Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00  121980/1057410     Solution::begin(Interceptor const&) const [44]
                0.00    0.00  131904/1057410     Solution::lastInterceptionTime(int) const [43]
                0.00    0.00  272806/1057410     Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  509728/1057410     Solution::lastInterceptionTime(Interceptor const&) const [40]
[73]     0.0    0.00    0.00 1057410         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [73]
-----------------------------------------------
                0.00    0.00       5/943031      Solution::append(Interceptor const&, Mobile const&, double const&) [63]
                0.00    0.00      45/943031      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     499/943031      Solution::remove(unsigned int) [112]
                0.00    0.00    2498/943031      MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    2994/943031      MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    3493/943031      Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    3992/943031      MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    3999/943031      MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
                0.00    0.00   20992/943031      Solution::firstOfRoute(Interceptor const&) const [51]
                0.00    0.00  121980/943031      Solution::begin(Interceptor const&) const [44]
                0.00    0.00  272806/943031      Solution::lastOfRoute(Interceptor const&) const [39]
                0.00    0.00  509728/943031      Solution::lastInterceptionTime(Interceptor const&) const [40]
[74]     0.0    0.00    0.00  943031         Interceptor::id() const [74]
-----------------------------------------------
                0.00    0.00       5/687547      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00  687542/687547      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[75]     0.0    0.00    0.00  687547         std::numeric_limits<double>::infinity() [75]
-----------------------------------------------
                0.00    0.00       2/687544      Interceptor::Interceptor(Depot const&, double, unsigned int, double) [823]
                0.00    0.00  687542/687544      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[76]     0.0    0.00    0.00  687544         Depot::position() const [76]
-----------------------------------------------
                0.00    0.00  687542/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[77]     0.0    0.00    0.00  687542         Interceptor::timeFromTo(Location const&, Location const&) const [77]
-----------------------------------------------
                0.00    0.00  687542/687542      Interceptor::computeInterception(Location, Mobile const&, double) const [4]
[78]     0.0    0.00    0.00  687542         Mobile::direction() const [78]
-----------------------------------------------
                0.00    0.00       4/581315      Solution::Solution(Problem const&) [1050]
                0.00    0.00      34/581315      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      40/581315      Solution::bestInterceptionCount() const [60]
                0.00    0.00    1999/581315      MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    2498/581315      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    3997/581315      MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    5994/581315      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    5996/581315      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    6993/581315      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    7998/581315      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   15988/581315      Solution::worstRoute() const [55]
                0.00    0.00   16068/581315      Solution::totalInterceptionCount() const [38]
                0.00    0.00   20064/581315      Solution::worstInterceptionTime() const [54]
                0.00    0.00   20986/581315      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00  128914/581315      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00  343742/581315      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[79]     0.0    0.00    0.00  581315         Problem::interceptors() const [79]
-----------------------------------------------
                0.00    0.00    1000/224835      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    1999/224835      MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00   24980/224835      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00   37968/224835      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   71946/224835      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00   86942/224835      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
[80]     0.0    0.00    0.00  224835         FirstAvailablePolicy::keepOn() [80]
-----------------------------------------------
                0.00    0.00      23/188296      Solution::append(unsigned int, unsigned int, double const&) [581]
                0.00    0.00    3493/188296      Solution::mobile(unsigned int) [138]
                0.00    0.00   19980/188296      Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00   39950/188296      Solution::remove(unsigned int) [112]
                0.00    0.00   39960/188296      Solution::end(Interceptor const&) [100]
                0.00    0.00   84890/188296      Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
[81]     0.0    0.00    0.00  188296         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
-----------------------------------------------
                0.00    0.00    3997/159896      MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    6994/159896      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00   26982/159896      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   28971/159896      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00   32967/159896      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   59985/159896      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[82]     0.0    0.00    0.00  159896         BestAvailablePolicy::keepOn() [82]
-----------------------------------------------
                0.00    0.00       2/144897      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     500/144897      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/144897      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    6993/144897      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    7494/144897      MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    9990/144897      Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00   10493/144897      Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00   14985/144897      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   17984/144897      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   20986/144897      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   23994/144897      MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00   27979/144897      Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[83]     0.0    0.00    0.00  144897         Interceptor::position() const [83]
-----------------------------------------------
                0.00    0.00  129870/129870      Solution::recomputeFrom(unsigned int) [20]
[84]     0.0    0.00    0.00  129870         Solution::iterator::operator->() [84]
-----------------------------------------------
                0.00    0.00       7/124443      Solution::Solution(Problem const&) [1050]
                0.00    0.00      39/124443      void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     500/124443      MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    2997/124443      MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    3497/124443      MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    8994/124443      MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00   17982/124443      MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00   23976/124443      MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00   66451/124443      Solution::uncaughtMobiles() const [47]
[85]     0.0    0.00    0.00  124443         Problem::mobiles() const [85]
-----------------------------------------------
                0.00    0.00  113952/113952      bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [90]
[86]     0.0    0.00    0.00  113952         __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::base() const [86]
-----------------------------------------------
                0.00    0.00   78252/78252       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
[87]     0.0    0.00    0.00   78252         __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::base() const [87]
-----------------------------------------------
                0.00    0.00    9496/66472       std::vector<Mobile, std::allocator<Mobile> >::begin() const [114]
                0.00    0.00   56976/66472       std::vector<Mobile, std::allocator<Mobile> >::end() const [91]
[88]     0.0    0.00    0.00   66472         __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::__normal_iterator(Mobile const* const&) [88]
-----------------------------------------------
                0.00    0.00       2/62265       Solution::Solution(Problem const&) [1050]
                0.00    0.00      90/62265       Solution::bestInterceptionCount() const [60]
                0.00    0.00   10032/62265       Solution::worstInterceptionTime() const [54]
                0.00    0.00   15988/62265       Solution::worstRoute() const [55]
                0.00    0.00   36153/62265       Solution::totalInterceptionCount() const [38]
[89]     0.0    0.00    0.00   62265         __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
-----------------------------------------------
                0.00    0.00       6/56976       Solution::Solution(Problem const&) [1050]
                0.00    0.00      12/56976       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00   56958/56976       Solution::uncaughtMobiles() const [47]
[90]     0.0    0.00    0.00   56976         bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [90]
                0.00    0.00  113952/113952      __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::base() const [86]
-----------------------------------------------
                0.00    0.00       6/56976       Solution::Solution(Problem const&) [1050]
                0.00    0.00      12/56976       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00   56958/56976       Solution::uncaughtMobiles() const [47]
[91]     0.0    0.00    0.00   56976         std::vector<Mobile, std::allocator<Mobile> >::end() const [91]
                0.00    0.00   56976/66472       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::__normal_iterator(Mobile const* const&) [88]
-----------------------------------------------
                0.00    0.00   52459/52459       VND::run(Solution&) [2]
[92]     0.0    0.00    0.00   52459         std::vector<Move*, std::allocator<Move*> >::operator[](unsigned long) [92]
-----------------------------------------------
                0.00    0.00       2/52168       std::vector<Interceptor, std::allocator<Interceptor> >::begin() const [868]
                0.00    0.00       6/52168       std::vector<Interceptor, std::allocator<Interceptor> >::end() const [540]
                0.00    0.00   13040/52168       std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
                0.00    0.00   39120/52168       std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
[93]     0.0    0.00    0.00   52168         __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [93]
-----------------------------------------------
                0.00    0.00    9990/49950       Solution::recomputeFrom(unsigned int) [20]
                0.00    0.00   39960/49950       Solution::end(Interceptor const&) [100]
[94]     0.0    0.00    0.00   49950         Solution::iterator::iterator(Solution::MobileNode*) [94]
-----------------------------------------------
                0.00    0.00   49950/49950       Solution::recomputeFrom(unsigned int) [20]
[95]     0.0    0.00    0.00   49950         Solution::iterator::~iterator() [95]
-----------------------------------------------
                0.00    0.00       5/47480       Solution::Solution(Problem const&) [1050]
                0.00    0.00      10/47480       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00   47465/47480       Solution::uncaughtMobiles() const [47]
[96]     0.0    0.00    0.00   47480         __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++() [96]
-----------------------------------------------
                0.00    0.00       5/47480       Solution::Solution(Problem const&) [1050]
                0.00    0.00      10/47480       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00   47465/47480       Solution::uncaughtMobiles() const [47]
[97]     0.0    0.00    0.00   47480         __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const [97]
-----------------------------------------------
                0.00    0.00       4/42499       void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      10/42499       std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
                0.00    0.00      16/42499       std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [645]
                0.00    0.00   42469/42499       VND::run(Solution&) [2]
[98]     0.0    0.00    0.00   42499         std::vector<Move*, std::allocator<Move*> >::size() const [98]
-----------------------------------------------
                0.00    0.00      20/42489       main [1]
                0.00    0.00     500/42489       MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00     500/42489       MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00     999/42489       MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    1499/42489       Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    1499/42489       MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    1999/42489       MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    2498/42489       MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    2997/42489       MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    2998/42489       MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    2998/42489       MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00    3497/42489       MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3996/42489       MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    3997/42489       Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00    3997/42489       MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    3999/42489       MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00    4496/42489       MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[99]     0.0    0.00    0.00   42489         Solution::problem() const [99]
-----------------------------------------------
                0.00    0.00   39960/39960       Solution::recomputeFrom(unsigned int) [20]
[100]    0.0    0.00    0.00   39960         Solution::end(Interceptor const&) [100]
                0.00    0.00   39960/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
                0.00    0.00   39960/49950       Solution::iterator::iterator(Solution::MobileNode*) [94]
-----------------------------------------------
                0.00    0.00   39960/39960       Solution::recomputeFrom(unsigned int) [20]
[101]    0.0    0.00    0.00   39960         Solution::iterator::operator!=(Solution::iterator) [101]
-----------------------------------------------
                0.00    0.00       3/39126       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       3/39126       Solution::Solution(Problem const&) [1050]
                0.00    0.00      30/39126       Solution::bestInterceptionCount() const [60]
                0.00    0.00   11991/39126       Solution::worstRoute() const [55]
                0.00    0.00   12051/39126       Solution::totalInterceptionCount() const [38]
                0.00    0.00   15048/39126       Solution::worstInterceptionTime() const [54]
[102]    0.0    0.00    0.00   39126         bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00   78252/78252       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::base() const [87]
-----------------------------------------------
                0.00    0.00      30/39120       Solution::bestInterceptionCount() const [60]
                0.00    0.00   11991/39120       Solution::worstRoute() const [55]
                0.00    0.00   12051/39120       Solution::totalInterceptionCount() const [38]
                0.00    0.00   15048/39120       Solution::worstInterceptionTime() const [54]
[103]    0.0    0.00    0.00   39120         std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [103]
                0.00    0.00   39120/52168       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [93]
-----------------------------------------------
                0.00    0.00      10/33486       main [1]
                0.00    0.00     999/33486       MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    1499/33486       Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    1499/33486       MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    1999/33486       MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    2498/33486       MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    2997/33486       MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    2998/33486       MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    2998/33486       MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00    3996/33486       MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    3997/33486       Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
                0.00    0.00    3997/33486       MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    3999/33486       MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[104]    0.0    0.00    0.00   33486         AvailablePolicy::maxAcceptableTime() [104]
-----------------------------------------------
                0.00    0.00       2/26084       void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       2/26084       Solution::Solution(Problem const&) [1050]
                0.00    0.00      20/26084       Solution::bestInterceptionCount() const [60]
                0.00    0.00    7994/26084       Solution::worstRoute() const [55]
                0.00    0.00    8034/26084       Solution::totalInterceptionCount() const [38]
                0.00    0.00   10032/26084       Solution::worstInterceptionTime() const [54]
[105]    0.0    0.00    0.00   26084         __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
-----------------------------------------------
                0.00    0.00     999/22983       MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [15]
                0.00    0.00    1499/22983       Move2Opt<BestAvailablePolicy>::scan(Solution const&) [10]
                0.00    0.00    1499/22983       MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2997/22983       MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    3497/22983       MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
                0.00    0.00    3997/22983       MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [41]
                0.00    0.00    3999/22983       MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
                0.00    0.00    4496/22983       MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[106]    0.0    0.00    0.00   22983         BestAvailablePolicy::reset() [106]
-----------------------------------------------
                0.00    0.00     500/19486       MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00     500/19486       MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1999/19486       MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [45]
                0.00    0.00    2498/19486       MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
                0.00    0.00    2998/19486       MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    2998/19486       MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [7]
                0.00    0.00    3996/19486       MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    3997/19486       Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [5]
[107]    0.0    0.00    0.00   19486         FirstAvailablePolicy::reset() [107]
-----------------------------------------------
                0.00    0.00    9493/18986       std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00    9493/18986       std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
[108]    0.0    0.00    0.00   18986         __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::__normal_iterator(Mobile const** const&) [108]
-----------------------------------------------
                0.00    0.00   18986/18986       bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
[109]    0.0    0.00    0.00   18986         __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::base() const [109]
-----------------------------------------------
                0.00    0.00       6/17481       Solution::append(unsigned int, unsigned int, double const&) [581]
                0.00    0.00     499/17481       Solution::remove(unsigned int) [112]
                0.00    0.00    3493/17481       Solution::operator[](unsigned int) [139]
                0.00    0.00   13483/17481       Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
[110]    0.0    0.00    0.00   17481         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) [110]
-----------------------------------------------
                0.00    0.00    1497/13483       MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1996/13483       MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
                0.00    0.00    2498/13483       MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [35]
                0.00    0.00    3493/13483       Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [56]
                0.00    0.00    3999/13483       MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [34]
[111]    0.0    0.00    0.00   13483         Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [111]
                0.00    0.00   84890/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
                0.00    0.00   13483/17481       std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) [110]
-----------------------------------------------
                0.00    0.00   13483/13483       Solution::remove(Mobile const&) [53]
[112]    0.0    0.00    0.00   13483         Solution::remove(unsigned int) [112]
                0.00    0.00   39950/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
                0.00    0.00     499/943031      Interceptor::id() const [74]
                0.00    0.00     499/17481       std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) [110]
-----------------------------------------------
                0.00    0.00      10/13040       Solution::bestInterceptionCount() const [60]
                0.00    0.00    3997/13040       Solution::worstRoute() const [55]
                0.00    0.00    4017/13040       Solution::totalInterceptionCount() const [38]
                0.00    0.00    5016/13040       Solution::worstInterceptionTime() const [54]
[113]    0.0    0.00    0.00   13040         std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [113]
                0.00    0.00   13040/52168       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [93]
-----------------------------------------------
                0.00    0.00       1/9496        Solution::Solution(Problem const&) [1050]
                0.00    0.00       2/9496        void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00    9493/9496        Solution::uncaughtMobiles() const [47]
[114]    0.0    0.00    0.00    9496         std::vector<Mobile, std::allocator<Mobile> >::begin() const [114]
                0.00    0.00    9496/66472       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::__normal_iterator(Mobile const* const&) [88]
-----------------------------------------------
                0.00    0.00    9493/9493        std::allocator<Mobile const*>::allocator() [118]
[115]    0.0    0.00    0.00    9493         __gnu_cxx::new_allocator<Mobile const*>::new_allocator() [115]
-----------------------------------------------
                0.00    0.00    9493/9493        std::allocator<Mobile const*>::~allocator() [119]
[116]    0.0    0.00    0.00    9493         __gnu_cxx::new_allocator<Mobile const*>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00     500/9493        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/9493        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2998/9493        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    4496/9493        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[117]    0.0    0.00    0.00    9493         bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [117]
                0.00    0.00   18986/18986       __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::base() const [109]
-----------------------------------------------
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::_Vector_impl() [121]
[118]    0.0    0.00    0.00    9493         std::allocator<Mobile const*>::allocator() [118]
                0.00    0.00    9493/9493        __gnu_cxx::new_allocator<Mobile const*>::new_allocator() [115]
-----------------------------------------------
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::~_Vector_impl() [122]
[119]    0.0    0.00    0.00    9493         std::allocator<Mobile const*>::~allocator() [119]
                0.00    0.00    9493/9493        __gnu_cxx::new_allocator<Mobile const*>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00    9493/9493        void std::_Destroy<Mobile const**>(Mobile const**, Mobile const**) [131]
[120]    0.0    0.00    0.00    9493         void std::_Destroy_aux<true>::__destroy<Mobile const**>(Mobile const**, Mobile const**) [120]
-----------------------------------------------
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_base() [125]
[121]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::_Vector_impl() [121]
                0.00    0.00    9493/9493        std::allocator<Mobile const*>::allocator() [118]
-----------------------------------------------
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base() [126]
[122]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::~_Vector_impl() [122]
                0.00    0.00    9493/9493        std::allocator<Mobile const*>::~allocator() [119]
-----------------------------------------------
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base() [126]
[123]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_deallocate(Mobile const**, unsigned long) [123]
-----------------------------------------------
                0.00    0.00    9493/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
[124]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_get_Tp_allocator() [124]
-----------------------------------------------
                0.00    0.00    9493/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::vector() [129]
[125]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_base() [125]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::_Vector_impl() [121]
-----------------------------------------------
                0.00    0.00    9493/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
[126]    0.0    0.00    0.00    9493         std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base() [126]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_deallocate(Mobile const**, unsigned long) [123]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::~_Vector_impl() [122]
-----------------------------------------------
                0.00    0.00     500/9493        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/9493        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2998/9493        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    4496/9493        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[127]    0.0    0.00    0.00    9493         std::vector<Mobile const*, std::allocator<Mobile const*> >::end() [127]
                0.00    0.00    9493/18986       __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::__normal_iterator(Mobile const** const&) [108]
-----------------------------------------------
                0.00    0.00     500/9493        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/9493        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2998/9493        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    4496/9493        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[128]    0.0    0.00    0.00    9493         std::vector<Mobile const*, std::allocator<Mobile const*> >::begin() [128]
                0.00    0.00    9493/18986       __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::__normal_iterator(Mobile const** const&) [108]
-----------------------------------------------
                0.00    0.00    9493/9493        Solution::uncaughtMobiles() const [47]
[129]    0.0    0.00    0.00    9493         std::vector<Mobile const*, std::allocator<Mobile const*> >::vector() [129]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_base() [125]
-----------------------------------------------
                0.00    0.00     500/9493        MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [57]
                0.00    0.00    1499/9493        MoveReplace<BestAvailablePolicy>::scan(Solution const&) [52]
                0.00    0.00    2998/9493        MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [50]
                0.00    0.00    4496/9493        MoveInsert<BestAvailablePolicy>::scan(Solution const&) [48]
[130]    0.0    0.00    0.00    9493         std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_get_Tp_allocator() [124]
                0.00    0.00    9493/9493        void std::_Destroy<Mobile const**, Mobile const*>(Mobile const**, Mobile const**, std::allocator<Mobile const*>&) [132]
                0.00    0.00    9493/9493        std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base() [126]
-----------------------------------------------
                0.00    0.00    9493/9493        void std::_Destroy<Mobile const**, Mobile const*>(Mobile const**, Mobile const**, std::allocator<Mobile const*>&) [132]
[131]    0.0    0.00    0.00    9493         void std::_Destroy<Mobile const**>(Mobile const**, Mobile const**) [131]
                0.00    0.00    9493/9493        void std::_Destroy_aux<true>::__destroy<Mobile const**>(Mobile const**, Mobile const**) [120]
-----------------------------------------------
                0.00    0.00    9493/9493        std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector() [130]
[132]    0.0    0.00    0.00    9493         void std::_Destroy<Mobile const**, Mobile const*>(Mobile const**, Mobile const**, std::allocator<Mobile const*>&) [132]
                0.00    0.00    9493/9493        void std::_Destroy<Mobile const**>(Mobile const**, Mobile const**) [131]
-----------------------------------------------
                0.00    0.00    6994/6994        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
[133]    0.0    0.00    0.00    6994         BestAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [133]
-----------------------------------------------
                0.00    0.00    1497/6494        MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [11]
                0.00    0.00    4997/6494        MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [6]
[134]    0.0    0.00    0.00    6494         BestAvailablePolicy::update(double, double&) [134]
-----------------------------------------------
                0.00    0.00    1996/4494        MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [14]
                0.00    0.00    2498/4494        MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [12]
[135]    0.0    0.00    0.00    4494         FirstAvailablePolicy::update(double, double&) [135]
-----------------------------------------------
                0.00    0.00      10/4007        main [1]
                0.00    0.00     500/4007        MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/4007        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
[136]    0.0    0.00    0.00    4007         AvailablePolicy::minAcceptableCount() [136]
-----------------------------------------------
                0.00    0.00     500/3997        MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
                0.00    0.00    3497/3997        MoveExtract<BestAvailablePolicy>::scan(Solution const&) [32]
[137]    0.0    0.00    0.00    3997         Solution::first() const [137]
-----------------------------------------------
                0.00    0.00    1497/3493        MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1996/3493        MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
[138]    0.0    0.00    0.00    3493         Solution::mobile(unsigned int) [138]
                0.00    0.00    3493/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
-----------------------------------------------
                0.00    0.00    1497/3493        MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [37]
                0.00    0.00    1996/3493        MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [36]
[139]    0.0    0.00    0.00    3493         Solution::operator[](unsigned int) [139]
                0.00    0.00    3493/17481       std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) [110]
-----------------------------------------------
                0.00    0.00       5/1686        __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator<unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int*, __gnu_cxx::__enable_if<std::__are_same<unsigned int*, unsigned int*>::__value, std::vector<unsigned int, std::allocator<unsigned int> > >::__type> const&) [586]
                0.00    0.00       9/1686        std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [460]
                0.00    0.00     440/1686        __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [158]
                0.00    0.00    1232/1686        bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
[140]    0.0    0.00    0.00    1686         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [140]
-----------------------------------------------
                0.00    0.00    1000/1000        MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [42]
[141]    0.0    0.00    0.00    1000         FirstAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [141]
-----------------------------------------------
                0.00    0.00      10/922         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [587]
                0.00    0.00      12/922         bool __gnu_cxx::operator==<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [533]
                0.00    0.00     900/922         bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [148]
[142]    0.0    0.00    0.00     922         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [142]
-----------------------------------------------
                0.00    0.00       1/751         _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_ [1073]
                0.00    0.00       1/751         _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_ [1078]
                0.00    0.00       1/751         void std::_Construct<char const*, char const* const&>(char const**, char const* const&) [1375]
                0.00    0.00       1/751         void std::_Construct<double, double>(double*, double&&) [1376]
                0.00    0.00       1/751         _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_ [1373]
                0.00    0.00       1/751         void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&) [1374]
                0.00    0.00       2/751         void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*) [971]
                0.00    0.00       2/751         _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_ [836]
                0.00    0.00       2/751         void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [845]
                0.00    0.00       2/751         void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&) [840]
                0.00    0.00       2/751         void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
                0.00    0.00       2/751         _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
                0.00    0.00       2/751         void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [837]
                0.00    0.00       3/751         _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_ [786]
                0.00    0.00       5/751         _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
                0.00    0.00       5/751         _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [584]
                0.00    0.00       7/751         _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_ [518]
                0.00    0.00       7/751         void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [519]
                0.00    0.00       7/751         void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&) [517]
                0.00    0.00      10/751         std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      10/751         void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [402]
                0.00    0.00      16/751         void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&) [321]
                0.00    0.00      22/751         void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&) [295]
                0.00    0.00      55/751         void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&) [216]
                0.00    0.00      80/751         void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&) [183]
                0.00    0.00      80/751         void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [184]
                0.00    0.00      80/751         void std::_Construct<Move*, Move* const&>(Move**, Move* const&) [199]
                0.00    0.00     344/751         void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&) [152]
[143]    0.0    0.00    0.00     751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       5/726         void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int) [1409]
                0.00    0.00      35/726         void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     320/726         main [1]
                0.00    0.00     366/726         void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [160]
[144]    0.0    0.00    0.00     726         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [144]
-----------------------------------------------
                0.00    0.00       7/636         std::move_iterator<unsigned int*>::operator*() const [503]
                0.00    0.00      80/636         std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&) [198]
                0.00    0.00     549/636         void std::swap<unsigned int>(unsigned int&, unsigned int&) [159]
[145]    0.0    0.00    0.00     636         std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&) [145]
-----------------------------------------------
                0.00    0.00       5/616         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
                0.00    0.00       6/616         void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int) [1409]
                0.00    0.00      35/616         void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      90/616         main [1]
                0.00    0.00     480/616         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
[146]    0.0    0.00    0.00     616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00    1232/1686        __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [140]
-----------------------------------------------
                0.00    0.00       3/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [789]
                0.00    0.00      46/456         std::vector<unsigned int, std::allocator<unsigned int> >::begin() [226]
                0.00    0.00     154/456         std::vector<unsigned int, std::allocator<unsigned int> >::end() [164]
                0.00    0.00     253/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [157]
[147]    0.0    0.00    0.00     456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [147]
-----------------------------------------------
                0.00    0.00      90/450         operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00     360/450         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
[148]    0.0    0.00    0.00     450         bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [148]
                0.00    0.00     900/922         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [142]
-----------------------------------------------
                0.00    0.00      80/400         operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00     320/400         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
[149]    0.0    0.00    0.00     400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [149]
-----------------------------------------------
                0.00    0.00      80/400         operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00     320/400         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
[150]    0.0    0.00    0.00     400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [150]
-----------------------------------------------
                0.00    0.00       7/351         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
                0.00    0.00      24/351         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [946]
                0.00    0.00     320/351         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
[151]    0.0    0.00    0.00     351         unsigned int* std::__addressof<unsigned int>(unsigned int&) [151]
-----------------------------------------------
                0.00    0.00      24/344         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [946]
                0.00    0.00     320/344         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
[152]    0.0    0.00    0.00     344         void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&) [152]
                0.00    0.00     344/344         unsigned int const& std::forward<unsigned int const&>(std::remove_reference<unsigned int const&>::type&) [153]
                0.00    0.00     344/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00     344/344         void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&) [152]
[153]    0.0    0.00    0.00     344         unsigned int const& std::forward<unsigned int const&>(std::remove_reference<unsigned int const&>::type&) [153]
-----------------------------------------------
                0.00    0.00       4/331         void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00       7/331         _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_ [518]
                0.00    0.00      80/331         void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&) [194]
                0.00    0.00      80/331         _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [191]
                0.00    0.00      80/331         _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [190]
                0.00    0.00      80/331         void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&) [183]
[154]    0.0    0.00    0.00     331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
-----------------------------------------------
                0.00    0.00       4/331         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00       7/331         void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [519]
                0.00    0.00      80/331         void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&) [197]
                0.00    0.00      80/331         decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [193]
                0.00    0.00      80/331         std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [192]
                0.00    0.00      80/331         void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [184]
[155]    0.0    0.00    0.00     331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
-----------------------------------------------
                0.00    0.00       5/330         void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int) [1409]
                0.00    0.00      25/330         void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      80/330         main [1]
                0.00    0.00     220/330         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
[156]    0.0    0.00    0.00     330         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [156]
-----------------------------------------------
                0.00    0.00       5/253         std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
                0.00    0.00       8/253         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
                0.00    0.00     240/253         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
[157]    0.0    0.00    0.00     253         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [157]
                0.00    0.00     253/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [147]
-----------------------------------------------
                0.00    0.00     220/220         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
[158]    0.0    0.00    0.00     220         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [158]
                0.00    0.00     440/1686        __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [140]
-----------------------------------------------
                0.00    0.00     183/183         void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [160]
[159]    0.0    0.00    0.00     183         void std::swap<unsigned int>(unsigned int&, unsigned int&) [159]
                0.00    0.00     549/636         std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&) [145]
-----------------------------------------------
                0.00    0.00     183/183         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
[160]    0.0    0.00    0.00     183         void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [160]
                0.00    0.00     366/726         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [144]
                0.00    0.00     183/183         void std::swap<unsigned int>(unsigned int&, unsigned int&) [159]
-----------------------------------------------
                0.00    0.00     180/180         bool __gnu_cxx::operator!=<Move* const*, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&) [172]
[161]    0.0    0.00    0.00     180         __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::base() const [161]
-----------------------------------------------
                0.00    0.00     180/180         bool __gnu_cxx::operator!=<Move**, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&) [173]
[162]    0.0    0.00    0.00     180         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::base() const [162]
-----------------------------------------------
                0.00    0.00     160/160         main [1]
[163]    0.0    0.00    0.00     160         std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned long) [163]
-----------------------------------------------
                0.00    0.00       8/154         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
                0.00    0.00      36/154         void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00     110/154         main [1]
[164]    0.0    0.00    0.00     154         std::vector<unsigned int, std::allocator<unsigned int> >::end() [164]
                0.00    0.00     154/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [147]
-----------------------------------------------
                0.00    0.00     132/132         bool __gnu_cxx::operator!=<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&) [203]
[165]    0.0    0.00    0.00     132         __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::base() const [165]
-----------------------------------------------
                0.00    0.00       5/117         std::vector<unsigned int, std::allocator<unsigned int> >::cbegin() const [589]
                0.00    0.00      56/117         std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [212]
                0.00    0.00      56/117         std::vector<unsigned int, std::allocator<unsigned int> >::end() const [211]
[166]    0.0    0.00    0.00     117         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&) [166]
-----------------------------------------------
                0.00    0.00       4/112         void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
                0.00    0.00       4/112         void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&) [954]
                0.00    0.00       4/112         decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
                0.00    0.00       4/112         _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [926]
                0.00    0.00       4/112         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
                0.00    0.00       4/112         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [925]
                0.00    0.00       4/112         void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
                0.00    0.00       4/112         _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
                0.00    0.00      20/112         void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&) [611]
                0.00    0.00      20/112         decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [600]
                0.00    0.00      20/112         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [599]
                0.00    0.00      20/112         _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
[167]    0.0    0.00    0.00     112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
-----------------------------------------------
                0.00    0.00       1/105         std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long) [1344]
                0.00    0.00       2/105         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
                0.00    0.00       8/105         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      10/105         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*) [441]
                0.00    0.00      40/105         std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
                0.00    0.00      44/105         std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
[168]    0.0    0.00    0.00     105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
-----------------------------------------------
                0.00    0.00      10/100         std::vector<Move*, std::allocator<Move*> >::begin() [436]
                0.00    0.00      90/100         std::vector<Move*, std::allocator<Move*> >::end() [174]
[169]    0.0    0.00    0.00     100         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move** const&) [169]
-----------------------------------------------
                0.00    0.00      16/96          std::function<Move* ()>::operator bool() const [317]
                0.00    0.00      80/96          std::function<Move* ()>::operator()() const [189]
[170]    0.0    0.00    0.00      96         std::_Function_base::_M_empty() const [170]
-----------------------------------------------
                0.00    0.00       3/96          main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const [735]
                0.00    0.00       4/96          main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const [649]
                0.00    0.00       4/96          main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const [650]
                0.00    0.00       5/96          main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const [591]
                0.00    0.00       5/96          main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const [590]
                0.00    0.00       6/96          main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const [542]
                0.00    0.00       6/96          main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const [545]
                0.00    0.00       6/96          main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const [546]
                0.00    0.00       6/96          main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const [547]
                0.00    0.00       6/96          main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const [543]
                0.00    0.00       6/96          main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const [544]
                0.00    0.00       7/96          main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const [507]
                0.00    0.00       7/96          main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const [506]
                0.00    0.00       8/96          main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const [473]
                0.00    0.00       8/96          main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const [472]
                0.00    0.00       9/96          main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const [459]
[171]    0.0    0.00    0.00      96         std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00      90/90          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
[172]    0.0    0.00    0.00      90         bool __gnu_cxx::operator!=<Move* const*, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&) [172]
                0.00    0.00     180/180         __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::base() const [161]
-----------------------------------------------
                0.00    0.00      90/90          main [1]
[173]    0.0    0.00    0.00      90         bool __gnu_cxx::operator!=<Move**, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&) [173]
                0.00    0.00     180/180         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::base() const [162]
-----------------------------------------------
                0.00    0.00      90/90          main [1]
[174]    0.0    0.00    0.00      90         std::vector<Move*, std::allocator<Move*> >::end() [174]
                0.00    0.00      90/100         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move** const&) [169]
-----------------------------------------------
                0.00    0.00      87/87          std::allocator<unsigned int>::~allocator() [176]
[175]    0.0    0.00    0.00      87         __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [175]
-----------------------------------------------
                0.00    0.00       1/87          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       2/87          main [1]
                0.00    0.00      40/87          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
                0.00    0.00      44/87          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl() [227]
[176]    0.0    0.00    0.00      87         std::allocator<unsigned int>::~allocator() [176]
                0.00    0.00      87/87          __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [175]
-----------------------------------------------
                0.00    0.00       7/87          Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
                0.00    0.00      80/87          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
[177]    0.0    0.00    0.00      87         Move** std::__addressof<Move*>(Move*&) [177]
-----------------------------------------------
                0.00    0.00       7/87          std::move_iterator<Move**>::operator*() const [502]
                0.00    0.00      80/87          std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&) [195]
[178]    0.0    0.00    0.00      87         std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [178]
-----------------------------------------------
                0.00    0.00      83/83          std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&) [180]
[179]    0.0    0.00    0.00      83         __gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&) [179]
-----------------------------------------------
                0.00    0.00      40/83          std::allocator<unsigned int> const std::allocator_traits<std::allocator<unsigned int> >::_S_select<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, ...) [239]
                0.00    0.00      43/83          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&) [230]
[180]    0.0    0.00    0.00      83         std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&) [180]
                0.00    0.00      83/83          __gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&) [179]
-----------------------------------------------
                0.00    0.00       2/80          MoveMove2Routes<BestAvailablePolicy>::MoveMove2Routes() [825]
                0.00    0.00       3/80          MoveInsert<FirstAvailablePolicy>::MoveInsert() [715]
                0.00    0.00       3/80          MoveMove1Route<FirstAvailablePolicy>::MoveMove1Route() [718]
                0.00    0.00       4/80          Move2Opt<BestAvailablePolicy>::Move2Opt() [630]
                0.00    0.00       4/80          MoveSwap2Routes<FirstAvailablePolicy>::MoveSwap2Routes() [627]
                0.00    0.00       5/80          MoveExtract<BestAvailablePolicy>::MoveExtract() [560]
                0.00    0.00       5/80          MoveSwap1Route<BestAvailablePolicy>::MoveSwap1Route() [572]
                0.00    0.00       5/80          MoveReplace<BestAvailablePolicy>::MoveReplace() [566]
                0.00    0.00       5/80          MoveExtract<FirstAvailablePolicy>::MoveExtract() [563]
                0.00    0.00       5/80          MoveSwap1Route<FirstAvailablePolicy>::MoveSwap1Route() [575]
                0.00    0.00       5/80          MoveReplace<FirstAvailablePolicy>::MoveReplace() [569]
                0.00    0.00       6/80          MoveSwap2Routes<BestAvailablePolicy>::MoveSwap2Routes() [526]
                0.00    0.00       6/80          Move2Opt<FirstAvailablePolicy>::Move2Opt() [529]
                0.00    0.00       7/80          MoveInsert<BestAvailablePolicy>::MoveInsert() [495]
                0.00    0.00       7/80          MoveMove1Route<BestAvailablePolicy>::MoveMove1Route() [498]
                0.00    0.00       8/80          MoveMove2Routes<FirstAvailablePolicy>::MoveMove2Routes() [464]
[181]    0.0    0.00    0.00      80         Move::Move() [181]
-----------------------------------------------
                0.00    0.00       2/80          MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [827]
                0.00    0.00       3/80          MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [720]
                0.00    0.00       3/80          MoveInsert<FirstAvailablePolicy>::~MoveInsert() [717]
                0.00    0.00       4/80          MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [629]
                0.00    0.00       4/80          Move2Opt<BestAvailablePolicy>::~Move2Opt() [632]
                0.00    0.00       5/80          MoveReplace<FirstAvailablePolicy>::~MoveReplace() [571]
                0.00    0.00       5/80          MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [577]
                0.00    0.00       5/80          MoveExtract<FirstAvailablePolicy>::~MoveExtract() [565]
                0.00    0.00       5/80          MoveReplace<BestAvailablePolicy>::~MoveReplace() [568]
                0.00    0.00       5/80          MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [574]
                0.00    0.00       5/80          MoveExtract<BestAvailablePolicy>::~MoveExtract() [562]
                0.00    0.00       6/80          Move2Opt<FirstAvailablePolicy>::~Move2Opt() [531]
                0.00    0.00       6/80          MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [528]
                0.00    0.00       7/80          MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [500]
                0.00    0.00       7/80          MoveInsert<BestAvailablePolicy>::~MoveInsert() [497]
                0.00    0.00       8/80          MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [466]
[182]    0.0    0.00    0.00      80         Move::~Move() [182]
-----------------------------------------------
                0.00    0.00      80/80          _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [190]
[183]    0.0    0.00    0.00      80         void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&) [183]
                0.00    0.00      80/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00      80/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00      80/80          std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [192]
[184]    0.0    0.00    0.00      80         void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [184]
                0.00    0.00      80/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00      80/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00      80/80          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
[185]    0.0    0.00    0.00      80         __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator++() [185]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[186]    0.0    0.00    0.00      80         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator++() [186]
-----------------------------------------------
                0.00    0.00      80/80          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
[187]    0.0    0.00    0.00      80         __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator*() const [187]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[188]    0.0    0.00    0.00      80         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator*() const [188]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[189]    0.0    0.00    0.00      80         std::function<Move* ()>::operator()() const [189]
                0.00    0.00      80/96          std::_Function_base::_M_empty() const [170]
                0.00    0.00       8/8           std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&) [487]
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&) [516]
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&) [515]
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&) [554]
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&) [555]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&) [607]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&) [608]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&) [605]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&) [610]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&) [606]
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&) [609]
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&) [670]
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&) [669]
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&) [780]
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&) [779]
                0.00    0.00       2/2           std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) [945]
-----------------------------------------------
                0.00    0.00      80/80          _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [191]
[190]    0.0    0.00    0.00      80         _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [190]
                0.00    0.00      80/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00      80/80          void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&) [183]
-----------------------------------------------
                0.00    0.00       4/80          void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      76/80          void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&) [194]
[191]    0.0    0.00    0.00      80         _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [191]
                0.00    0.00      80/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00      80/80          _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [190]
-----------------------------------------------
                0.00    0.00      80/80          decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [193]
[192]    0.0    0.00    0.00      80         std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [192]
                0.00    0.00      80/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00      80/80          void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [184]
-----------------------------------------------
                0.00    0.00       4/80          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      76/80          void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&) [197]
[193]    0.0    0.00    0.00      80         decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [193]
                0.00    0.00      80/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00      80/80          std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [192]
-----------------------------------------------
                0.00    0.00      80/80          std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&) [195]
[194]    0.0    0.00    0.00      80         void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&) [194]
                0.00    0.00      80/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00      76/80          _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [191]
                0.00    0.00       4/4           void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[195]    0.0    0.00    0.00      80         std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&) [195]
                0.00    0.00      80/87          std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [178]
                0.00    0.00      80/80          void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&) [194]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[196]    0.0    0.00    0.00      80         std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::operator[](unsigned long) [196]
-----------------------------------------------
                0.00    0.00      80/80          std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&) [198]
[197]    0.0    0.00    0.00      80         void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&) [197]
                0.00    0.00      80/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00      76/80          decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [193]
                0.00    0.00       4/4           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
-----------------------------------------------
                0.00    0.00      80/80          main [1]
[198]    0.0    0.00    0.00      80         std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&) [198]
                0.00    0.00      80/636         std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&) [145]
                0.00    0.00      80/80          void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&) [197]
-----------------------------------------------
                0.00    0.00      80/80          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
[199]    0.0    0.00    0.00      80         void std::_Construct<Move*, Move* const&>(Move**, Move* const&) [199]
                0.00    0.00      80/80          Move* const& std::forward<Move* const&>(std::remove_reference<Move* const&>::type&) [200]
                0.00    0.00      80/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00      80/80          void std::_Construct<Move*, Move* const&>(Move**, Move* const&) [199]
[200]    0.0    0.00    0.00      80         Move* const& std::forward<Move* const&>(std::remove_reference<Move* const&>::type&) [200]
-----------------------------------------------
                0.00    0.00      20/70          SimpleCachePolicy::set(unsigned int, unsigned int, double) [301]
                0.00    0.00      20/70          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      30/70          SimpleCachePolicy::get(unsigned int, unsigned int) [262]
[201]    0.0    0.00    0.00      70         std::vector<double, std::allocator<double> >::operator[](unsigned long) [201]
-----------------------------------------------
                0.00    0.00      10/70          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&) [451]
                0.00    0.00      10/70          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
                0.00    0.00      10/70          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
                0.00    0.00      10/70          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      10/70          decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [425]
                0.00    0.00      10/70          _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_ [422]
                0.00    0.00      10/70          void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [402]
[202]    0.0    0.00    0.00      70         std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
-----------------------------------------------
                0.00    0.00      66/66          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
[203]    0.0    0.00    0.00      66         bool __gnu_cxx::operator!=<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&) [203]
                0.00    0.00     132/132         __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::base() const [165]
-----------------------------------------------
                0.00    0.00      66/66          bool __gnu_cxx::operator!=<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&) [253]
[204]    0.0    0.00    0.00      66         __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::base() const [204]
-----------------------------------------------
                0.00    0.00       4/64          main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [694]
                0.00    0.00       4/64          main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() [679]
                0.00    0.00       4/64          main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() [685]
                0.00    0.00       4/64          main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() [686]
                0.00    0.00       4/64          main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() [687]
                0.00    0.00       4/64          main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() [688]
                0.00    0.00       4/64          main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() [689]
                0.00    0.00       4/64          main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() [690]
                0.00    0.00       4/64          main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() [691]
                0.00    0.00       4/64          main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() [692]
                0.00    0.00       4/64          main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() [693]
                0.00    0.00       4/64          main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() [680]
                0.00    0.00       4/64          main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() [681]
                0.00    0.00       4/64          main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() [682]
                0.00    0.00       4/64          main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() [683]
                0.00    0.00       4/64          main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() [684]
[205]    0.0    0.00    0.00      64         std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       7/62          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
                0.00    0.00      55/62          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
[206]    0.0    0.00    0.00      62         Solution::MobileNode* std::__addressof<Solution::MobileNode>(Solution::MobileNode&) [206]
-----------------------------------------------
                0.00    0.00       4/60          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      16/60          std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [648]
                0.00    0.00      40/60          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[207]    0.0    0.00    0.00      60         std::vector<unsigned int, std::allocator<unsigned int> >::size() const [207]
-----------------------------------------------
                0.00    0.00      58/58          void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*) [209]
[208]    0.0    0.00    0.00      58         void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*) [208]
-----------------------------------------------
                0.00    0.00      58/58          void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&) [210]
[209]    0.0    0.00    0.00      58         void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*) [209]
                0.00    0.00      58/58          void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*) [208]
-----------------------------------------------
                0.00    0.00       4/58          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      10/58          std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*) [441]
                0.00    0.00      44/58          std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
[210]    0.0    0.00    0.00      58         void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&) [210]
                0.00    0.00      58/58          void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*) [209]
-----------------------------------------------
                0.00    0.00       6/56          std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [541]
                0.00    0.00      10/56          operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00      40/56          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[211]    0.0    0.00    0.00      56         std::vector<unsigned int, std::allocator<unsigned int> >::end() const [211]
                0.00    0.00      56/117         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&) [166]
-----------------------------------------------
                0.00    0.00       6/56          std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [541]
                0.00    0.00      10/56          operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00      40/56          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[212]    0.0    0.00    0.00      56         std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [212]
                0.00    0.00      56/117         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&) [166]
-----------------------------------------------
                0.00    0.00      55/55          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
[213]    0.0    0.00    0.00      55         __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator++() [213]
-----------------------------------------------
                0.00    0.00       8/55          unsigned long std::allocator_traits<std::allocator<unsigned int> >::_S_max_size<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, int) [485]
                0.00    0.00      47/55          __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*) [222]
[214]    0.0    0.00    0.00      55         __gnu_cxx::new_allocator<unsigned int>::max_size() const [214]
-----------------------------------------------
                0.00    0.00      55/55          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
[215]    0.0    0.00    0.00      55         __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator*() const [215]
-----------------------------------------------
                0.00    0.00      55/55          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
[216]    0.0    0.00    0.00      55         void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&) [216]
                0.00    0.00      55/55          Solution::MobileNode const& std::forward<Solution::MobileNode const&>(std::remove_reference<Solution::MobileNode const&>::type&) [217]
                0.00    0.00      55/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00      55/55          void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&) [216]
[217]    0.0    0.00    0.00      55         Solution::MobileNode const& std::forward<Solution::MobileNode const&>(std::remove_reference<Solution::MobileNode const&>::type&) [217]
-----------------------------------------------
                0.00    0.00      20/50          SimpleCachePolicy::set(unsigned int, unsigned int, double) [301]
                0.00    0.00      30/50          SimpleCachePolicy::get(unsigned int, unsigned int) [262]
[218]    0.0    0.00    0.00      50         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long) [218]
-----------------------------------------------
                0.00    0.00       8/48          std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const [471]
                0.00    0.00      40/48          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[219]    0.0    0.00    0.00      48         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() const [219]
-----------------------------------------------
                0.00    0.00       4/48          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      44/48          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base() [228]
[220]    0.0    0.00    0.00      48         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long) [220]
                0.00    0.00      47/47          std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long) [224]
-----------------------------------------------
                0.00    0.00      47/47          std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long) [224]
[221]    0.0    0.00    0.00      47         __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long) [221]
-----------------------------------------------
                0.00    0.00      47/47          std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned long) [225]
[222]    0.0    0.00    0.00      47         __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*) [222]
                0.00    0.00      47/55          __gnu_cxx::new_allocator<unsigned int>::max_size() const [214]
-----------------------------------------------
                0.00    0.00       2/47          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
                0.00    0.00       4/47          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00      41/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned long) [231]
[223]    0.0    0.00    0.00      47         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [223]
                0.00    0.00      47/47          std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned long) [225]
-----------------------------------------------
                0.00    0.00      47/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long) [220]
[224]    0.0    0.00    0.00      47         std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long) [224]
                0.00    0.00      47/47          __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long) [221]
-----------------------------------------------
                0.00    0.00      47/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [223]
[225]    0.0    0.00    0.00      47         std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned long) [225]
                0.00    0.00      47/47          __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*) [222]
-----------------------------------------------
                0.00    0.00       5/46          std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
                0.00    0.00      11/46          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      30/46          main [1]
[226]    0.0    0.00    0.00      46         std::vector<unsigned int, std::allocator<unsigned int> >::begin() [226]
                0.00    0.00      46/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [147]
-----------------------------------------------
                0.00    0.00      44/44          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base() [228]
[227]    0.0    0.00    0.00      44         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl() [227]
                0.00    0.00      44/87          std::allocator<unsigned int>::~allocator() [176]
-----------------------------------------------
                0.00    0.00      44/44          std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
[228]    0.0    0.00    0.00      44         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base() [228]
                0.00    0.00      44/48          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long) [220]
                0.00    0.00      44/44          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl() [227]
-----------------------------------------------
                0.00    0.00       1/44          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      13/44          main [1]
                0.00    0.00      30/44          BenchmarkResult::~BenchmarkResult() [261]
[229]    0.0    0.00    0.00      44         std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
                0.00    0.00      44/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00      44/58          void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&) [210]
                0.00    0.00      44/44          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base() [228]
-----------------------------------------------
                0.00    0.00       2/43          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(std::allocator<unsigned int> const&) [900]
                0.00    0.00      41/43          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [232]
[230]    0.0    0.00    0.00      43         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&) [230]
                0.00    0.00      43/83          std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&) [180]
-----------------------------------------------
                0.00    0.00      41/41          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [232]
[231]    0.0    0.00    0.00      41         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned long) [231]
                0.00    0.00      41/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [223]
-----------------------------------------------
                0.00    0.00       1/41          std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&) [1345]
                0.00    0.00      40/41          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[232]    0.0    0.00    0.00      41         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [232]
                0.00    0.00      41/43          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&) [230]
                0.00    0.00      41/41          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned long) [231]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[233]    0.0    0.00    0.00      40         __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_S_select_on_copy(std::allocator<unsigned int> const&) [233]
                0.00    0.00      40/40          std::allocator_traits<std::allocator<unsigned int> >::select_on_container_copy_construction(std::allocator<unsigned int> const&) [238]
-----------------------------------------------
                0.00    0.00      40/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [237]
[234]    0.0    0.00    0.00      40         __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() [234]
                0.00    0.00      40/40          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() [235]
-----------------------------------------------
                0.00    0.00      40/40          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() [234]
[235]    0.0    0.00    0.00      40         __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() [235]
-----------------------------------------------
                0.00    0.00      40/40          bool __gnu_cxx::operator!=<Solution**, std::vector<Solution*, std::allocator<Solution*> > >(__gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&, __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&) [305]
[236]    0.0    0.00    0.00      40         __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::base() const [236]
-----------------------------------------------
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
                0.00    0.00      10/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      20/40          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator->() const [306]
[237]    0.0    0.00    0.00      40         std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [237]
                0.00    0.00      40/40          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() [234]
-----------------------------------------------
                0.00    0.00      40/40          __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_S_select_on_copy(std::allocator<unsigned int> const&) [233]
[238]    0.0    0.00    0.00      40         std::allocator_traits<std::allocator<unsigned int> >::select_on_container_copy_construction(std::allocator<unsigned int> const&) [238]
                0.00    0.00      40/40          std::allocator<unsigned int> const std::allocator_traits<std::allocator<unsigned int> >::_S_select<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, ...) [239]
-----------------------------------------------
                0.00    0.00      40/40          std::allocator_traits<std::allocator<unsigned int> >::select_on_container_copy_construction(std::allocator<unsigned int> const&) [238]
[239]    0.0    0.00    0.00      40         std::allocator<unsigned int> const std::allocator_traits<std::allocator<unsigned int> >::_S_select<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, ...) [239]
                0.00    0.00      40/83          std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&) [180]
-----------------------------------------------
                0.00    0.00      40/40          unsigned int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [243]
[240]    0.0    0.00    0.00      40         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
                0.00    0.00     360/450         bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [148]
                0.00    0.00     320/400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [150]
                0.00    0.00     320/351         unsigned int* std::__addressof<unsigned int>(unsigned int&) [151]
                0.00    0.00     320/344         void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&) [152]
                0.00    0.00     320/400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [149]
-----------------------------------------------
                0.00    0.00      10/40          main [1]
                0.00    0.00      10/40          BenchmarkResult::BenchmarkResult(double, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >) [396]
                0.00    0.00      20/40          BenchmarkResult::BenchmarkResult(BenchmarkResult const&) [300]
[241]    0.0    0.00    0.00      40         std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
                0.00    0.00      40/48          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() const [219]
                0.00    0.00      40/40          __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_S_select_on_copy(std::allocator<unsigned int> const&) [233]
                0.00    0.00      40/60          std::vector<unsigned int, std::allocator<unsigned int> >::size() const [207]
                0.00    0.00      40/41          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [232]
                0.00    0.00      40/87          std::allocator<unsigned int>::~allocator() [176]
                0.00    0.00      40/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00      40/56          std::vector<unsigned int, std::allocator<unsigned int> >::end() const [211]
                0.00    0.00      40/56          std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [212]
                0.00    0.00      40/40          unsigned int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, std::allocator<unsigned int>&) [244]
-----------------------------------------------
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [445]
                0.00    0.00      10/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node() [444]
[242]    0.0    0.00    0.00      40         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator() [242]
-----------------------------------------------
                0.00    0.00      40/40          unsigned int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, std::allocator<unsigned int>&) [244]
[243]    0.0    0.00    0.00      40         unsigned int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [243]
                0.00    0.00      40/40          unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [240]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
[244]    0.0    0.00    0.00      40         unsigned int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, std::allocator<unsigned int>&) [244]
                0.00    0.00      40/40          unsigned int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*) [243]
-----------------------------------------------
                0.00    0.00       8/39          void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      10/39          std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**) [435]
                0.00    0.00      10/39          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
                0.00    0.00      11/39          std::vector<Move*, std::allocator<Move*> >::~vector() [381]
[245]    0.0    0.00    0.00      39         std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [245]
-----------------------------------------------
                0.00    0.00      10/37          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
                0.00    0.00      27/37          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
[246]    0.0    0.00    0.00      37         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_right(std::_Rb_tree_node_base*) [246]
-----------------------------------------------
                0.00    0.00      36/36          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const [250]
[247]    0.0    0.00    0.00      36         __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() const [247]
                0.00    0.00      36/36          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() const [248]
-----------------------------------------------
                0.00    0.00      36/36          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() const [247]
[248]    0.0    0.00    0.00      36         __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() const [248]
-----------------------------------------------
                0.00    0.00       9/36          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*) [461]
                0.00    0.00      27/36          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [265]
[249]    0.0    0.00    0.00      36         std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()(std::pair<char const* const, BenchmarkResult> const&) const [249]
-----------------------------------------------
                0.00    0.00       9/36          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node_base const*) [462]
                0.00    0.00      27/36          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [266]
[250]    0.0    0.00    0.00      36         std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const [250]
                0.00    0.00      36/36          __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() const [247]
-----------------------------------------------
                0.00    0.00       9/36          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
                0.00    0.00      27/36          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
[251]    0.0    0.00    0.00      36         std::less<char const*>::operator()(char const* const&, char const* const&) const [251]
-----------------------------------------------
                0.00    0.00       2/36          void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
                0.00    0.00       2/36          void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&) [954]
                0.00    0.00       2/36          decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
                0.00    0.00       2/36          _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [926]
                0.00    0.00       2/36          std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
                0.00    0.00       2/36          std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [925]
                0.00    0.00       2/36          void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
                0.00    0.00       2/36          _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
                0.00    0.00       5/36          void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&) [611]
                0.00    0.00       5/36          decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [600]
                0.00    0.00       5/36          std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [599]
                0.00    0.00       5/36          _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
[252]    0.0    0.00    0.00      36         unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
-----------------------------------------------
                0.00    0.00      33/33          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
[253]    0.0    0.00    0.00      33         bool __gnu_cxx::operator!=<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&) [253]
                0.00    0.00      66/66          __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::base() const [204]
-----------------------------------------------
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
                0.00    0.00      16/32          std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
[254]    0.0    0.00    0.00      32         std::_Function_base::_Function_base() [254]
-----------------------------------------------
                0.00    0.00      32/32          std::function<Move* ()>::~function() [257]
[255]    0.0    0.00    0.00      32         std::_Function_base::~_Function_base() [255]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) [764]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) [763]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) [762]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) [761]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) [760]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) [774]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) [773]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) [771]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) [770]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) [769]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) [768]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) [767]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) [766]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) [765]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) [759]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) [776]
-----------------------------------------------
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
                0.00    0.00       1/32          std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
                0.00    0.00      16/32          std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
[256]    0.0    0.00    0.00      32         std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
-----------------------------------------------
                0.00    0.00      16/32          main [1]
                0.00    0.00      16/32          void std::_Destroy<std::function<Move* ()> >(std::function<Move* ()>*) [325]
[257]    0.0    0.00    0.00      32         std::function<Move* ()>::~function() [257]
                0.00    0.00      32/32          std::_Function_base::~_Function_base() [255]
-----------------------------------------------
                0.00    0.00      16/32          void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1145]
                0.00    0.00      16/32          std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1296]
[258]    0.0    0.00    0.00      32         std::function<Move* ()>* std::__addressof<std::function<Move* ()> >(std::function<Move* ()>&) [258]
-----------------------------------------------
                0.00    0.00       4/31          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00      11/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
                0.00    0.00      16/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [643]
[259]    0.0    0.00    0.00      31         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const [259]
-----------------------------------------------
                0.00    0.00       8/31          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00      11/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
                0.00    0.00      12/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector() [355]
[260]    0.0    0.00    0.00      31         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() [260]
-----------------------------------------------
                0.00    0.00      10/30          main [1]
                0.00    0.00      10/30          std::pair<char const*, BenchmarkResult>::~pair() [431]
                0.00    0.00      10/30          std::pair<char const* const, BenchmarkResult>::~pair() [429]
[261]    0.0    0.00    0.00      30         BenchmarkResult::~BenchmarkResult() [261]
                0.00    0.00      30/44          std::vector<unsigned int, std::allocator<unsigned int> >::~vector() [229]
-----------------------------------------------
                0.00    0.00      30/30          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[262]    0.0    0.00    0.00      30         SimpleCachePolicy::get(unsigned int, unsigned int) [262]
                0.00    0.00      30/50          std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long) [218]
                0.00    0.00      30/70          std::vector<double, std::allocator<double> >::operator[](unsigned long) [201]
-----------------------------------------------
                0.00    0.00      10/30          std::vector<Solution*, std::allocator<Solution*> >::begin() [439]
                0.00    0.00      20/30          std::vector<Solution*, std::allocator<Solution*> >::end() [308]
[263]    0.0    0.00    0.00      30         __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::__normal_iterator(Solution** const&) [263]
-----------------------------------------------
                0.00    0.00       4/27          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00      11/27          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
                0.00    0.00      12/27          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector() [356]
[264]    0.0    0.00    0.00      27         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() [264]
-----------------------------------------------
                0.00    0.00      27/27          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
[265]    0.0    0.00    0.00      27         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [265]
                0.00    0.00      27/27          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [266]
                0.00    0.00      27/36          std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()(std::pair<char const* const, BenchmarkResult> const&) const [249]
-----------------------------------------------
                0.00    0.00      27/27          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [265]
[266]    0.0    0.00    0.00      27         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [266]
                0.00    0.00      27/36          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const [250]
-----------------------------------------------
                0.00    0.00      25/25          void std::_Destroy<Move**>(Move**, Move**) [269]
[267]    0.0    0.00    0.00      25         void std::_Destroy_aux<true>::__destroy<Move**>(Move**, Move**) [267]
-----------------------------------------------
                0.00    0.00       1/25          std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [1120]
                0.00    0.00       1/25          std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [1118]
                0.00    0.00       1/25          std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [1119]
                0.00    0.00       2/25          std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [869]
                0.00    0.00       2/25          std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [873]
                0.00    0.00       2/25          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [870]
                0.00    0.00       4/25          std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
                0.00    0.00       4/25          std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [645]
                0.00    0.00       4/25          std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [648]
                0.00    0.00       4/25          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [643]
[268]    0.0    0.00    0.00      25         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00      25/25          void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&) [270]
[269]    0.0    0.00    0.00      25         void std::_Destroy<Move**>(Move**, Move**) [269]
                0.00    0.00      25/25          void std::_Destroy_aux<true>::__destroy<Move**>(Move**, Move**) [267]
-----------------------------------------------
                0.00    0.00       4/25          void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      10/25          std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**) [435]
                0.00    0.00      11/25          std::vector<Move*, std::allocator<Move*> >::~vector() [381]
[270]    0.0    0.00    0.00      25         void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&) [270]
                0.00    0.00      25/25          void std::_Destroy<Move**>(Move**, Move**) [269]
-----------------------------------------------
                0.00    0.00       2/24          std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/24          void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       4/24          std::vector<double, std::allocator<double> >::resize(unsigned long) [968]
                0.00    0.00      16/24          std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
[271]    0.0    0.00    0.00      24         std::vector<double, std::allocator<double> >::size() const [271]
-----------------------------------------------
                0.00    0.00       4/24          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00       5/24          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&) [612]
                0.00    0.00       5/24          decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [602]
                0.00    0.00       5/24          _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [601]
                0.00    0.00       5/24          _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [584]
[272]    0.0    0.00    0.00      24         Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
-----------------------------------------------
                0.00    0.00      23/23          std::allocator<Solution::MobileNode>::~allocator() [277]
[273]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<Solution::MobileNode>::~new_allocator() [273]
-----------------------------------------------
                0.00    0.00      23/23          std::allocator<Solution::InterceptorNode>::~allocator() [278]
[274]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<Solution::InterceptorNode>::~new_allocator() [274]
-----------------------------------------------
                0.00    0.00       8/23          unsigned long std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_max_size<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, int) [479]
                0.00    0.00      15/23          __gnu_cxx::new_allocator<Solution::MobileNode>::allocate(unsigned long, void const*) [327]
[275]    0.0    0.00    0.00      23         __gnu_cxx::new_allocator<Solution::MobileNode>::max_size() const [275]
-----------------------------------------------
                0.00    0.00       1/23          std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
                0.00    0.00      22/23          Problem::nbMobiles() const [285]
[276]    0.0    0.00    0.00      23         std::vector<Mobile, std::allocator<Mobile> >::size() const [276]
-----------------------------------------------
                0.00    0.00      11/23          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
                0.00    0.00      12/23          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::~_Vector_impl() [351]
[277]    0.0    0.00    0.00      23         std::allocator<Solution::MobileNode>::~allocator() [277]
                0.00    0.00      23/23          __gnu_cxx::new_allocator<Solution::MobileNode>::~new_allocator() [273]
-----------------------------------------------
                0.00    0.00      11/23          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
                0.00    0.00      12/23          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::~_Vector_impl() [353]
[278]    0.0    0.00    0.00      23         std::allocator<Solution::InterceptorNode>::~allocator() [278]
                0.00    0.00      23/23          __gnu_cxx::new_allocator<Solution::InterceptorNode>::~new_allocator() [274]
-----------------------------------------------
                0.00    0.00       1/23          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
                0.00    0.00      22/23          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
[279]    0.0    0.00    0.00      23         Solution::InterceptorNode* std::__addressof<Solution::InterceptorNode>(Solution::InterceptorNode&) [279]
-----------------------------------------------
                0.00    0.00      22/22          std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&) [292]
[280]    0.0    0.00    0.00      22         __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator(__gnu_cxx::new_allocator<Solution::MobileNode> const&) [280]
-----------------------------------------------
                0.00    0.00      22/22          std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&) [293]
[281]    0.0    0.00    0.00      22         __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator(__gnu_cxx::new_allocator<Solution::InterceptorNode> const&) [281]
-----------------------------------------------
                0.00    0.00      11/22          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::begin() const [362]
                0.00    0.00      11/22          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::end() const [361]
[282]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::__normal_iterator(Solution::MobileNode const* const&) [282]
-----------------------------------------------
                0.00    0.00      11/22          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::begin() const [364]
                0.00    0.00      11/22          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::end() const [363]
[283]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::__normal_iterator(Solution::InterceptorNode const* const&) [283]
-----------------------------------------------
                0.00    0.00      22/22          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
[284]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator++() [284]
-----------------------------------------------
                0.00    0.00       2/22          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00      20/22          main [1]
[285]    0.0    0.00    0.00      22         Problem::nbMobiles() const [285]
                0.00    0.00      22/23          std::vector<Mobile, std::allocator<Mobile> >::size() const [276]
-----------------------------------------------
                0.00    0.00       8/22          unsigned long std::allocator_traits<std::allocator<Move*> >::_S_max_size<std::allocator<Move*> const, void>(std::allocator<Move*> const&, int) [481]
                0.00    0.00      14/22          __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*) [335]
[286]    0.0    0.00    0.00      22         __gnu_cxx::new_allocator<Move*>::max_size() const [286]
-----------------------------------------------
                0.00    0.00      22/22          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[287]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator->() const [287]
-----------------------------------------------
                0.00    0.00      22/22          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
[288]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator*() const [288]
-----------------------------------------------
                0.00    0.00      22/22          bool std::operator==<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [390]
[289]    0.0    0.00    0.00      22         std::move_iterator<Solution::MobileNode*>::base() const [289]
-----------------------------------------------
                0.00    0.00      22/22          bool std::operator==<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [391]
[290]    0.0    0.00    0.00      22         std::move_iterator<Move**>::base() const [290]
-----------------------------------------------
                0.00    0.00      22/22          bool std::operator==<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [392]
[291]    0.0    0.00    0.00      22         std::move_iterator<unsigned int*>::base() const [291]
-----------------------------------------------
                0.00    0.00      11/22          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::MobileNode> const&) [365]
                0.00    0.00      11/22          std::allocator<Solution::MobileNode> const std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_select<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, ...) [374]
[292]    0.0    0.00    0.00      22         std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&) [292]
                0.00    0.00      22/22          __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator(__gnu_cxx::new_allocator<Solution::MobileNode> const&) [280]
-----------------------------------------------
                0.00    0.00      11/22          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::InterceptorNode> const&) [368]
                0.00    0.00      11/22          std::allocator<Solution::InterceptorNode> const std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_select<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, ...) [376]
[293]    0.0    0.00    0.00      22         std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&) [293]
                0.00    0.00      22/22          __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator(__gnu_cxx::new_allocator<Solution::InterceptorNode> const&) [281]
-----------------------------------------------
                0.00    0.00       1/22          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1350]
                0.00    0.00      10/22          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
                0.00    0.00      11/22          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [382]
[294]    0.0    0.00    0.00      22         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [294]
-----------------------------------------------
                0.00    0.00      22/22          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
[295]    0.0    0.00    0.00      22         void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&) [295]
                0.00    0.00      22/22          Solution::InterceptorNode const& std::forward<Solution::InterceptorNode const&>(std::remove_reference<Solution::InterceptorNode const&>::type&) [296]
                0.00    0.00      22/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00      22/22          void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&) [295]
[296]    0.0    0.00    0.00      22         Solution::InterceptorNode const& std::forward<Solution::InterceptorNode const&>(std::remove_reference<Solution::InterceptorNode const&>::type&) [296]
-----------------------------------------------
                0.00    0.00      21/21          std::allocator<Move*>::~allocator() [299]
[297]    0.0    0.00    0.00      21         __gnu_cxx::new_allocator<Move*>::~new_allocator() [297]
-----------------------------------------------
                0.00    0.00       2/21          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00       8/21          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [870]
                0.00    0.00      11/21          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[298]    0.0    0.00    0.00      21         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const [298]
-----------------------------------------------
                0.00    0.00      10/21          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
                0.00    0.00      11/21          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::~_Vector_impl() [371]
[299]    0.0    0.00    0.00      21         std::allocator<Move*>::~allocator() [299]
                0.00    0.00      21/21          __gnu_cxx::new_allocator<Move*>::~new_allocator() [297]
-----------------------------------------------
                0.00    0.00      10/20          std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&) [430]
                0.00    0.00      10/20          std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&) [428]
[300]    0.0    0.00    0.00      20         BenchmarkResult::BenchmarkResult(BenchmarkResult const&) [300]
                0.00    0.00      20/40          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
-----------------------------------------------
                0.00    0.00      20/20          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[301]    0.0    0.00    0.00      20         SimpleCachePolicy::set(unsigned int, unsigned int, double) [301]
                0.00    0.00      20/50          std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long) [218]
                0.00    0.00      20/70          std::vector<double, std::allocator<double> >::operator[](unsigned long) [201]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator<Move*>::allocator(std::allocator<Move*> const&) [307]
[302]    0.0    0.00    0.00      20         __gnu_cxx::new_allocator<Move*>::new_allocator(__gnu_cxx::new_allocator<Move*> const&) [302]
-----------------------------------------------
                0.00    0.00      10/20          std::vector<Location, std::allocator<Location> >::end() [433]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator-(long) const [407]
[303]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::__normal_iterator(Location* const&) [303]
-----------------------------------------------
                0.00    0.00      10/20          std::vector<Move*, std::allocator<Move*> >::begin() const [413]
                0.00    0.00      10/20          std::vector<Move*, std::allocator<Move*> >::end() const [412]
[304]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move* const* const&) [304]
-----------------------------------------------
                0.00    0.00      20/20          main [1]
[305]    0.0    0.00    0.00      20         bool __gnu_cxx::operator!=<Solution**, std::vector<Solution*, std::allocator<Solution*> > >(__gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&, __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&) [305]
                0.00    0.00      40/40          __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::base() const [236]
-----------------------------------------------
                0.00    0.00      20/20          main [1]
[306]    0.0    0.00    0.00      20         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator->() const [306]
                0.00    0.00      20/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [237]
-----------------------------------------------
                0.00    0.00      10/20          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl(std::allocator<Move*> const&) [415]
                0.00    0.00      10/20          std::allocator<Move*> const std::allocator_traits<std::allocator<Move*> >::_S_select<std::allocator<Move*> const, void>(std::allocator<Move*> const&, ...) [419]
[307]    0.0    0.00    0.00      20         std::allocator<Move*>::allocator(std::allocator<Move*> const&) [307]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<Move*>::new_allocator(__gnu_cxx::new_allocator<Move*> const&) [302]
-----------------------------------------------
                0.00    0.00      20/20          main [1]
[308]    0.0    0.00    0.00      20         std::vector<Solution*, std::allocator<Solution*> >::end() [308]
                0.00    0.00      20/30          __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::__normal_iterator(Solution** const&) [263]
-----------------------------------------------
                0.00    0.00      10/20          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
                0.00    0.00      10/20          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
[309]    0.0    0.00    0.00      20         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_end() [309]
-----------------------------------------------
                0.00    0.00      20/20          main [1]
[310]    0.0    0.00    0.00      20         void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [310]
                0.00    0.00     480/616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00     240/253         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [157]
                0.00    0.00     220/220         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [158]
                0.00    0.00     220/330         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [156]
                0.00    0.00     183/183         void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [160]
-----------------------------------------------
                0.00    0.00      10/20          std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&) [430]
                0.00    0.00      10/20          std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&) [428]
[311]    0.0    0.00    0.00      20         BenchmarkResult&& std::forward<BenchmarkResult>(std::remove_reference<BenchmarkResult>::type&) [311]
-----------------------------------------------
                0.00    0.00      20/20          std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, void>(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&) [432]
[312]    0.0    0.00    0.00      20         std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*& std::forward<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>::type&) [312]
-----------------------------------------------
                0.00    0.00       9/19          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
                0.00    0.00      10/19          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
[313]    0.0    0.00    0.00      19         std::pair<char const*, BenchmarkResult>::first_type& std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&) const [313]
-----------------------------------------------
                0.00    0.00       8/19          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const [468]
                0.00    0.00      11/19          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[314]    0.0    0.00    0.00      19         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() const [314]
-----------------------------------------------
                0.00    0.00       8/18          std::vector<Move*, std::allocator<Move*> >::max_size() const [469]
                0.00    0.00      10/18          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[315]    0.0    0.00    0.00      18         std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const [315]
-----------------------------------------------
                0.00    0.00       4/17          unsigned long std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_max_size<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, int) [663]
                0.00    0.00      13/17          __gnu_cxx::new_allocator<Solution::InterceptorNode>::allocate(unsigned long, void const*) [344]
[316]    0.0    0.00    0.00      17         __gnu_cxx::new_allocator<Solution::InterceptorNode>::max_size() const [316]
-----------------------------------------------
                0.00    0.00      16/16          std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
[317]    0.0    0.00    0.00      16         std::function<Move* ()>::operator bool() const [317]
                0.00    0.00      16/96          std::_Function_base::_M_empty() const [170]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [323]
[318]    0.0    0.00    0.00      16         void std::_Destroy_aux<true>::__destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [318]
-----------------------------------------------
                0.00    0.00       4/16          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00      12/16          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base() [352]
[319]    0.0    0.00    0.00      16         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long) [319]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Solution::MobileNode> >::deallocate(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, unsigned long) [331]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&) [321]
[320]    0.0    0.00    0.00      16         std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00      16/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00      16/16          std::function<Move* ()>::operator bool() const [317]
                0.00    0.00      16/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) [764]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) [763]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) [762]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) [761]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) [760]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) [774]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) [773]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) [771]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) [770]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) [769]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) [768]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) [767]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) [766]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) [765]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) [759]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) [776]
-----------------------------------------------
                0.00    0.00      16/16          std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1296]
[321]    0.0    0.00    0.00      16         void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&) [321]
                0.00    0.00      16/16          std::function<Move* ()> const& std::forward<std::function<Move* ()> const&>(std::remove_reference<std::function<Move* ()> const&>::type&) [322]
                0.00    0.00      16/751         operator new(unsigned long, void*) [143]
                0.00    0.00      16/16          std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&) [321]
[322]    0.0    0.00    0.00      16         std::function<Move* ()> const& std::forward<std::function<Move* ()> const&>(std::remove_reference<std::function<Move* ()> const&>::type&) [322]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [324]
[323]    0.0    0.00    0.00      16         void std::_Destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [323]
                0.00    0.00      16/16          void std::_Destroy_aux<true>::__destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [318]
-----------------------------------------------
                0.00    0.00       4/16          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00      12/16          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector() [355]
[324]    0.0    0.00    0.00      16         void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [324]
                0.00    0.00      16/16          void std::_Destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [323]
-----------------------------------------------
                0.00    0.00      16/16          void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1145]
[325]    0.0    0.00    0.00      16         void std::_Destroy<std::function<Move* ()> >(std::function<Move* ()>*) [325]
                0.00    0.00      16/32          std::function<Move* ()>::~function() [257]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Solution::MobileNode> >::deallocate(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, unsigned long) [331]
[326]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<Solution::MobileNode>::deallocate(Solution::MobileNode*, unsigned long) [326]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Solution::MobileNode> >::allocate(std::allocator<Solution::MobileNode>&, unsigned long) [332]
[327]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<Solution::MobileNode>::allocate(unsigned long, void const*) [327]
                0.00    0.00      15/23          __gnu_cxx::new_allocator<Solution::MobileNode>::max_size() const [275]
-----------------------------------------------
                0.00    0.00       4/15          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const [644]
                0.00    0.00      11/15          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[328]    0.0    0.00    0.00      15         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() const [328]
-----------------------------------------------
                0.00    0.00       4/15          void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00      11/15          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_create_storage(unsigned long) [366]
[329]    0.0    0.00    0.00      15         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long) [329]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<Solution::MobileNode> >::allocate(std::allocator<Solution::MobileNode>&, unsigned long) [332]
-----------------------------------------------
                0.00    0.00       4/15          void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      11/15          std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base() [372]
[330]    0.0    0.00    0.00      15         std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long) [330]
                0.00    0.00      14/14          std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long) [339]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long) [319]
[331]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<Solution::MobileNode> >::deallocate(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, unsigned long) [331]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<Solution::MobileNode>::deallocate(Solution::MobileNode*, unsigned long) [326]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long) [329]
[332]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<Solution::MobileNode> >::allocate(std::allocator<Solution::MobileNode>&, unsigned long) [332]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<Solution::MobileNode>::allocate(unsigned long, void const*) [327]
-----------------------------------------------
                0.00    0.00      15/15          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[333]    0.0    0.00    0.00      15         std::vector<Location, std::allocator<Location> >::operator[](unsigned long) [333]
-----------------------------------------------
                0.00    0.00      14/14          std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long) [339]
[334]    0.0    0.00    0.00      14         __gnu_cxx::new_allocator<Move*>::deallocate(Move**, unsigned long) [334]
-----------------------------------------------
                0.00    0.00      14/14          std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long) [340]
[335]    0.0    0.00    0.00      14         __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*) [335]
                0.00    0.00      14/22          __gnu_cxx::new_allocator<Move*>::max_size() const [286]
-----------------------------------------------
                0.00    0.00      14/14          void std::_Destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [341]
[336]    0.0    0.00    0.00      14         void std::_Destroy_aux<true>::__destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [336]
-----------------------------------------------
                0.00    0.00       2/14          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00      12/14          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base() [354]
[337]    0.0    0.00    0.00      14         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long) [337]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::deallocate(std::allocator<Solution::InterceptorNode>&, Solution::InterceptorNode*, unsigned long) [347]
-----------------------------------------------
                0.00    0.00       4/14          void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00      10/14          std::_Vector_base<Move*, std::allocator<Move*> >::_M_create_storage(unsigned long) [416]
[338]    0.0    0.00    0.00      14         std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long) [338]
                0.00    0.00      14/14          std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long) [340]
-----------------------------------------------
                0.00    0.00      14/14          std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long) [330]
[339]    0.0    0.00    0.00      14         std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long) [339]
                0.00    0.00      14/14          __gnu_cxx::new_allocator<Move*>::deallocate(Move**, unsigned long) [334]
-----------------------------------------------
                0.00    0.00      14/14          std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long) [338]
[340]    0.0    0.00    0.00      14         std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long) [340]
                0.00    0.00      14/14          __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*) [335]
-----------------------------------------------
                0.00    0.00      14/14          void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [342]
[341]    0.0    0.00    0.00      14         void std::_Destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [341]
                0.00    0.00      14/14          void std::_Destroy_aux<true>::__destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [336]
-----------------------------------------------
                0.00    0.00       2/14          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00      12/14          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector() [356]
[342]    0.0    0.00    0.00      14         void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [342]
                0.00    0.00      14/14          void std::_Destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [341]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::deallocate(std::allocator<Solution::InterceptorNode>&, Solution::InterceptorNode*, unsigned long) [347]
[343]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Solution::InterceptorNode>::deallocate(Solution::InterceptorNode*, unsigned long) [343]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::allocate(std::allocator<Solution::InterceptorNode>&, unsigned long) [348]
[344]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<Solution::InterceptorNode>::allocate(unsigned long, void const*) [344]
                0.00    0.00      13/17          __gnu_cxx::new_allocator<Solution::InterceptorNode>::max_size() const [316]
-----------------------------------------------
                0.00    0.00       2/13          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00      11/13          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_create_storage(unsigned long) [369]
[345]    0.0    0.00    0.00      13         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long) [345]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::allocate(std::allocator<Solution::InterceptorNode>&, unsigned long) [348]
-----------------------------------------------
                0.00    0.00       3/13          std::vector<double, std::allocator<double> >::~vector() [785]
                0.00    0.00       4/13          void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       6/13          std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
[346]    0.0    0.00    0.00      13         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [346]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long) [337]
[347]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Solution::InterceptorNode> >::deallocate(std::allocator<Solution::InterceptorNode>&, Solution::InterceptorNode*, unsigned long) [347]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Solution::InterceptorNode>::deallocate(Solution::InterceptorNode*, unsigned long) [343]
-----------------------------------------------
                0.00    0.00      13/13          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long) [345]
[348]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<Solution::InterceptorNode> >::allocate(std::allocator<Solution::InterceptorNode>&, unsigned long) [348]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<Solution::InterceptorNode>::allocate(unsigned long, void const*) [344]
-----------------------------------------------
                0.00    0.00       1/12          Heuristic::~Heuristic() [1053]
                0.00    0.00      11/12          main [1]
[349]    0.0    0.00    0.00      12         Solution::~Solution() [349]
                0.00    0.00      12/12          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector() [356]
                0.00    0.00      12/12          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector() [355]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [634]
                0.00    0.00       8/12          unsigned long std::allocator_traits<std::allocator<double> >::_S_max_size<std::allocator<double> const, void>(std::allocator<double> const&, int) [483]
[350]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<double>::max_size() const [350]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base() [352]
[351]    0.0    0.00    0.00      12         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::~_Vector_impl() [351]
                0.00    0.00      12/23          std::allocator<Solution::MobileNode>::~allocator() [277]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector() [355]
[352]    0.0    0.00    0.00      12         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base() [352]
                0.00    0.00      12/16          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long) [319]
                0.00    0.00      12/12          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::~_Vector_impl() [351]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base() [354]
[353]    0.0    0.00    0.00      12         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::~_Vector_impl() [353]
                0.00    0.00      12/23          std::allocator<Solution::InterceptorNode>::~allocator() [278]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector() [356]
[354]    0.0    0.00    0.00      12         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base() [354]
                0.00    0.00      12/12          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::~_Vector_impl() [353]
                0.00    0.00      12/14          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long) [337]
-----------------------------------------------
                0.00    0.00      12/12          Solution::~Solution() [349]
[355]    0.0    0.00    0.00      12         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector() [355]
                0.00    0.00      12/31          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() [260]
                0.00    0.00      12/16          void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [324]
                0.00    0.00      12/12          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base() [352]
-----------------------------------------------
                0.00    0.00      12/12          Solution::~Solution() [349]
[356]    0.0    0.00    0.00      12         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector() [356]
                0.00    0.00      12/27          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() [264]
                0.00    0.00      12/14          void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [342]
                0.00    0.00      12/12          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base() [354]
-----------------------------------------------
                0.00    0.00      11/11          main [1]
[357]    0.0    0.00    0.00      11         Solution::Solution(Solution const&) [357]
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[358]    0.0    0.00    0.00      11         __gnu_cxx::__alloc_traits<std::allocator<Solution::MobileNode> >::_S_select_on_copy(std::allocator<Solution::MobileNode> const&) [358]
                0.00    0.00      11/11          std::allocator_traits<std::allocator<Solution::MobileNode> >::select_on_container_copy_construction(std::allocator<Solution::MobileNode> const&) [373]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[359]    0.0    0.00    0.00      11         __gnu_cxx::__alloc_traits<std::allocator<Solution::InterceptorNode> >::_S_select_on_copy(std::allocator<Solution::InterceptorNode> const&) [359]
                0.00    0.00      11/11          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::select_on_container_copy_construction(std::allocator<Solution::InterceptorNode> const&) [375]
-----------------------------------------------
                0.00    0.00      11/11          main [1]
[360]    0.0    0.00    0.00      11         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator!=(std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > const&) const [360]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[361]    0.0    0.00    0.00      11         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::end() const [361]
                0.00    0.00      11/22          __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::__normal_iterator(Solution::MobileNode const* const&) [282]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[362]    0.0    0.00    0.00      11         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::begin() const [362]
                0.00    0.00      11/22          __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::__normal_iterator(Solution::MobileNode const* const&) [282]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[363]    0.0    0.00    0.00      11         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::end() const [363]
                0.00    0.00      11/22          __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::__normal_iterator(Solution::InterceptorNode const* const&) [283]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[364]    0.0    0.00    0.00      11         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::begin() const [364]
                0.00    0.00      11/22          __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::__normal_iterator(Solution::InterceptorNode const* const&) [283]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&) [367]
[365]    0.0    0.00    0.00      11         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::MobileNode> const&) [365]
                0.00    0.00      11/22          std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&) [292]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&) [367]
[366]    0.0    0.00    0.00      11         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_create_storage(unsigned long) [366]
                0.00    0.00      11/15          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long) [329]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[367]    0.0    0.00    0.00      11         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&) [367]
                0.00    0.00      11/11          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::MobileNode> const&) [365]
                0.00    0.00      11/11          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_create_storage(unsigned long) [366]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&) [370]
[368]    0.0    0.00    0.00      11         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::InterceptorNode> const&) [368]
                0.00    0.00      11/22          std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&) [293]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&) [370]
[369]    0.0    0.00    0.00      11         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_create_storage(unsigned long) [369]
                0.00    0.00      11/13          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long) [345]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[370]    0.0    0.00    0.00      11         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&) [370]
                0.00    0.00      11/11          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::InterceptorNode> const&) [368]
                0.00    0.00      11/11          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_create_storage(unsigned long) [369]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base() [372]
[371]    0.0    0.00    0.00      11         std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::~_Vector_impl() [371]
                0.00    0.00      11/21          std::allocator<Move*>::~allocator() [299]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Move*, std::allocator<Move*> >::~vector() [381]
[372]    0.0    0.00    0.00      11         std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base() [372]
                0.00    0.00      11/15          std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long) [330]
                0.00    0.00      11/11          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::~_Vector_impl() [371]
-----------------------------------------------
                0.00    0.00      11/11          __gnu_cxx::__alloc_traits<std::allocator<Solution::MobileNode> >::_S_select_on_copy(std::allocator<Solution::MobileNode> const&) [358]
[373]    0.0    0.00    0.00      11         std::allocator_traits<std::allocator<Solution::MobileNode> >::select_on_container_copy_construction(std::allocator<Solution::MobileNode> const&) [373]
                0.00    0.00      11/11          std::allocator<Solution::MobileNode> const std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_select<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, ...) [374]
-----------------------------------------------
                0.00    0.00      11/11          std::allocator_traits<std::allocator<Solution::MobileNode> >::select_on_container_copy_construction(std::allocator<Solution::MobileNode> const&) [373]
[374]    0.0    0.00    0.00      11         std::allocator<Solution::MobileNode> const std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_select<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, ...) [374]
                0.00    0.00      11/22          std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&) [292]
-----------------------------------------------
                0.00    0.00      11/11          __gnu_cxx::__alloc_traits<std::allocator<Solution::InterceptorNode> >::_S_select_on_copy(std::allocator<Solution::InterceptorNode> const&) [359]
[375]    0.0    0.00    0.00      11         std::allocator_traits<std::allocator<Solution::InterceptorNode> >::select_on_container_copy_construction(std::allocator<Solution::InterceptorNode> const&) [375]
                0.00    0.00      11/11          std::allocator<Solution::InterceptorNode> const std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_select<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, ...) [376]
-----------------------------------------------
                0.00    0.00      11/11          std::allocator_traits<std::allocator<Solution::InterceptorNode> >::select_on_container_copy_construction(std::allocator<Solution::InterceptorNode> const&) [375]
[376]    0.0    0.00    0.00      11         std::allocator<Solution::InterceptorNode> const std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_select<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, ...) [376]
                0.00    0.00      11/22          std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&) [293]
-----------------------------------------------
                0.00    0.00      11/11          Solution::MobileNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [385]
[377]    0.0    0.00    0.00      11         Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
                0.00    0.00      66/66          bool __gnu_cxx::operator!=<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&) [203]
                0.00    0.00      55/55          __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator*() const [215]
                0.00    0.00      55/62          Solution::MobileNode* std::__addressof<Solution::MobileNode>(Solution::MobileNode&) [206]
                0.00    0.00      55/55          __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator++() [213]
                0.00    0.00      55/55          void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&) [216]
-----------------------------------------------
                0.00    0.00      11/11          Solution::InterceptorNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [386]
[378]    0.0    0.00    0.00      11         Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
                0.00    0.00      33/33          bool __gnu_cxx::operator!=<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&) [253]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator*() const [288]
                0.00    0.00      22/23          Solution::InterceptorNode* std::__addressof<Solution::InterceptorNode>(Solution::InterceptorNode&) [279]
                0.00    0.00      22/22          void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&) [295]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator++() [284]
-----------------------------------------------
                0.00    0.00      11/11          Solution::Solution(Solution const&) [357]
[379]    0.0    0.00    0.00      11         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
                0.00    0.00      11/19          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() const [314]
                0.00    0.00      11/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const [259]
                0.00    0.00      11/11          __gnu_cxx::__alloc_traits<std::allocator<Solution::MobileNode> >::_S_select_on_copy(std::allocator<Solution::MobileNode> const&) [358]
                0.00    0.00      11/23          std::allocator<Solution::MobileNode>::~allocator() [277]
                0.00    0.00      11/11          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&) [367]
                0.00    0.00      11/31          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() [260]
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::begin() const [362]
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::end() const [361]
                0.00    0.00      11/11          Solution::MobileNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, Solution::MobileNode>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [387]
-----------------------------------------------
                0.00    0.00      11/11          Solution::Solution(Solution const&) [357]
[380]    0.0    0.00    0.00      11         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
                0.00    0.00      11/15          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() const [328]
                0.00    0.00      11/11          __gnu_cxx::__alloc_traits<std::allocator<Solution::InterceptorNode> >::_S_select_on_copy(std::allocator<Solution::InterceptorNode> const&) [359]
                0.00    0.00      11/21          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const [298]
                0.00    0.00      11/11          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&) [370]
                0.00    0.00      11/27          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() [264]
                0.00    0.00      11/23          std::allocator<Solution::InterceptorNode>::~allocator() [278]
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::end() const [363]
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::begin() const [364]
                0.00    0.00      11/11          Solution::InterceptorNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, Solution::InterceptorNode>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [388]
-----------------------------------------------
                0.00    0.00       1/11          main [1]
                0.00    0.00      10/11          VND::~VND() [398]
[381]    0.0    0.00    0.00      11         std::vector<Move*, std::allocator<Move*> >::~vector() [381]
                0.00    0.00      11/39          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [245]
                0.00    0.00      11/25          void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&) [270]
                0.00    0.00      11/11          std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base() [372]
-----------------------------------------------
                0.00    0.00      11/11          std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [384]
[382]    0.0    0.00    0.00      11         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [382]
                0.00    0.00      11/22          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [294]
-----------------------------------------------
                0.00    0.00       1/11          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree() [1353]
                0.00    0.00      10/11          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
[383]    0.0    0.00    0.00      11         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_begin() [383]
-----------------------------------------------
                0.00    0.00      11/11          main [1]
[384]    0.0    0.00    0.00      11         std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [384]
                0.00    0.00      11/11          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end() [382]
-----------------------------------------------
                0.00    0.00      11/11          Solution::MobileNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, Solution::MobileNode>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [387]
[385]    0.0    0.00    0.00      11         Solution::MobileNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [385]
                0.00    0.00      11/11          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [377]
-----------------------------------------------
                0.00    0.00      11/11          Solution::InterceptorNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, Solution::InterceptorNode>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [388]
[386]    0.0    0.00    0.00      11         Solution::InterceptorNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [386]
                0.00    0.00      11/11          Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [378]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&) [379]
[387]    0.0    0.00    0.00      11         Solution::MobileNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, Solution::MobileNode>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [387]
                0.00    0.00      11/11          Solution::MobileNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*) [385]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&) [380]
[388]    0.0    0.00    0.00      11         Solution::InterceptorNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, Solution::InterceptorNode>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [388]
                0.00    0.00      11/11          Solution::InterceptorNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*) [386]
-----------------------------------------------
                0.00    0.00       1/11          void std::_Construct<double, double>(double*, double&&) [1376]
                0.00    0.00       2/11          void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [965]
                0.00    0.00       2/11          decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [944]
                0.00    0.00       2/11          void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       2/11          std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&) [943]
                0.00    0.00       2/11          void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [845]
[389]    0.0    0.00    0.00      11         double&& std::forward<double>(std::remove_reference<double>::type&) [389]
-----------------------------------------------
                0.00    0.00      11/11          bool std::operator!=<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [393]
[390]    0.0    0.00    0.00      11         bool std::operator==<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [390]
                0.00    0.00      22/22          std::move_iterator<Solution::MobileNode*>::base() const [289]
-----------------------------------------------
                0.00    0.00      11/11          bool std::operator!=<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [394]
[391]    0.0    0.00    0.00      11         bool std::operator==<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [391]
                0.00    0.00      22/22          std::move_iterator<Move**>::base() const [290]
-----------------------------------------------
                0.00    0.00      11/11          bool std::operator!=<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [395]
[392]    0.0    0.00    0.00      11         bool std::operator==<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [392]
                0.00    0.00      22/22          std::move_iterator<unsigned int*>::base() const [291]
-----------------------------------------------
                0.00    0.00      11/11          Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
[393]    0.0    0.00    0.00      11         bool std::operator!=<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [393]
                0.00    0.00      11/11          bool std::operator==<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [390]
-----------------------------------------------
                0.00    0.00      11/11          Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
[394]    0.0    0.00    0.00      11         bool std::operator!=<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [394]
                0.00    0.00      11/11          bool std::operator==<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [391]
-----------------------------------------------
                0.00    0.00      11/11          unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
[395]    0.0    0.00    0.00      11         bool std::operator!=<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [395]
                0.00    0.00      11/11          bool std::operator==<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [392]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[396]    0.0    0.00    0.00      10         BenchmarkResult::BenchmarkResult(double, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >) [396]
                0.00    0.00      10/40          std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&) [241]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[397]    0.0    0.00    0.00      10         VND::VND(std::vector<Move*, std::allocator<Move*> >&) [397]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[398]    0.0    0.00    0.00      10         VND::~VND() [398]
                0.00    0.00      10/11          std::vector<Move*, std::allocator<Move*> >::~vector() [381]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::deallocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [421]
[399]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::deallocate(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [399]
-----------------------------------------------
                0.00    0.00      10/10          std::enable_if<std::__and_<std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::__destroy_helper<std::pair<char const* const, BenchmarkResult> >::type>::value, void>::type std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::_S_destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [420]
[400]    0.0    0.00    0.00      10         void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*) [400]
                0.00    0.00      10/10          std::pair<char const* const, BenchmarkResult>::~pair() [429]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, unsigned long) [424]
[401]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocate(unsigned long, void const*) [401]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::max_size() const [405]
-----------------------------------------------
                0.00    0.00      10/10          _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_ [422]
[402]    0.0    0.00    0.00      10         void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [402]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/751         operator new(unsigned long, void*) [143]
                0.00    0.00      10/10          std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&) [428]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[403]    0.0    0.00    0.00      10         __gnu_cxx::__alloc_traits<std::allocator<Move*> >::_S_select_on_copy(std::allocator<Move*> const&) [403]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Move*> >::select_on_container_copy_construction(std::allocator<Move*> const&) [418]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[404]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator++() [404]
-----------------------------------------------
                0.00    0.00      10/10          __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocate(unsigned long, void const*) [401]
[405]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::max_size() const [405]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Location, std::allocator<Location> >::back() [434]
[406]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator*() const [406]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Location, std::allocator<Location> >::back() [434]
[407]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator-(long) const [407]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::__normal_iterator(Location* const&) [303]
-----------------------------------------------
                0.00    0.00      10/10          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[408]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator->() const [408]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[409]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator*() const [409]
-----------------------------------------------
                0.00    0.00      10/10          bool std::operator==<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [619]
[410]    0.0    0.00    0.00      10         std::move_iterator<double*>::base() const [410]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
                0.00    0.00       8/10          std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [869]
[411]    0.0    0.00    0.00      10         std::vector<Location, std::allocator<Location> >::size() const [411]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[412]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::end() const [412]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move* const* const&) [304]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[413]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::begin() const [413]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move* const* const&) [304]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
                0.00    0.00       8/10          std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [873]
[414]    0.0    0.00    0.00      10         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::size() const [414]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&) [417]
[415]    0.0    0.00    0.00      10         std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl(std::allocator<Move*> const&) [415]
                0.00    0.00      10/20          std::allocator<Move*>::allocator(std::allocator<Move*> const&) [307]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&) [417]
[416]    0.0    0.00    0.00      10         std::_Vector_base<Move*, std::allocator<Move*> >::_M_create_storage(unsigned long) [416]
                0.00    0.00      10/14          std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long) [338]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[417]    0.0    0.00    0.00      10         std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&) [417]
                0.00    0.00      10/10          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl(std::allocator<Move*> const&) [415]
                0.00    0.00      10/10          std::_Vector_base<Move*, std::allocator<Move*> >::_M_create_storage(unsigned long) [416]
-----------------------------------------------
                0.00    0.00      10/10          __gnu_cxx::__alloc_traits<std::allocator<Move*> >::_S_select_on_copy(std::allocator<Move*> const&) [403]
[418]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<Move*> >::select_on_container_copy_construction(std::allocator<Move*> const&) [418]
                0.00    0.00      10/10          std::allocator<Move*> const std::allocator_traits<std::allocator<Move*> >::_S_select<std::allocator<Move*> const, void>(std::allocator<Move*> const&, ...) [419]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<Move*> >::select_on_container_copy_construction(std::allocator<Move*> const&) [418]
[419]    0.0    0.00    0.00      10         std::allocator<Move*> const std::allocator_traits<std::allocator<Move*> >::_S_select<std::allocator<Move*> const, void>(std::allocator<Move*> const&, ...) [419]
                0.00    0.00      10/20          std::allocator<Move*>::allocator(std::allocator<Move*> const&) [307]
-----------------------------------------------
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [423]
[420]    0.0    0.00    0.00      10         std::enable_if<std::__and_<std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::__destroy_helper<std::pair<char const* const, BenchmarkResult> >::type>::value, void>::type std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::_S_destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [420]
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*) [400]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [445]
[421]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::deallocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [421]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::deallocate(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [399]
-----------------------------------------------
                0.00    0.00      10/10          decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [425]
[422]    0.0    0.00    0.00      10         _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_ [422]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [402]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
[423]    0.0    0.00    0.00      10         void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [423]
                0.00    0.00      10/10          std::enable_if<std::__and_<std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::__destroy_helper<std::pair<char const* const, BenchmarkResult> >::type>::value, void>::type std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::_S_destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [420]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node() [444]
[424]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, unsigned long) [424]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocate(unsigned long, void const*) [401]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
[425]    0.0    0.00    0.00      10         decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [425]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/10          _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_ [422]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[426]    0.0    0.00    0.00      10         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator++() [426]
-----------------------------------------------
                0.00    0.00      10/10          Move** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [452]
[427]    0.0    0.00    0.00      10         Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
                0.00    0.00      90/90          bool __gnu_cxx::operator!=<Move* const*, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&) [172]
                0.00    0.00      80/80          __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator*() const [187]
                0.00    0.00      80/80          void std::_Construct<Move*, Move* const&>(Move**, Move* const&) [199]
                0.00    0.00      80/87          Move** std::__addressof<Move*>(Move*&) [177]
                0.00    0.00      80/80          __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator++() [185]
-----------------------------------------------
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [402]
[428]    0.0    0.00    0.00      10         std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&) [428]
                0.00    0.00      10/10          char const*&& std::forward<char const*>(std::remove_reference<char const*>::type&) [455]
                0.00    0.00      10/20          BenchmarkResult&& std::forward<BenchmarkResult>(std::remove_reference<BenchmarkResult>::type&) [311]
                0.00    0.00      10/20          BenchmarkResult::BenchmarkResult(BenchmarkResult const&) [300]
-----------------------------------------------
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*) [400]
[429]    0.0    0.00    0.00      10         std::pair<char const* const, BenchmarkResult>::~pair() [429]
                0.00    0.00      10/30          BenchmarkResult::~BenchmarkResult() [261]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[430]    0.0    0.00    0.00      10         std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&) [430]
                0.00    0.00      10/10          char const*& std::forward<char const*&>(std::remove_reference<char const*&>::type&) [457]
                0.00    0.00      10/20          BenchmarkResult&& std::forward<BenchmarkResult>(std::remove_reference<BenchmarkResult>::type&) [311]
                0.00    0.00      10/20          BenchmarkResult::BenchmarkResult(BenchmarkResult const&) [300]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[431]    0.0    0.00    0.00      10         std::pair<char const*, BenchmarkResult>::~pair() [431]
                0.00    0.00      10/30          BenchmarkResult::~BenchmarkResult() [261]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
[432]    0.0    0.00    0.00      10         std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, void>(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&) [432]
                0.00    0.00      20/20          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*& std::forward<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>::type&) [312]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Location, std::allocator<Location> >::back() [434]
[433]    0.0    0.00    0.00      10         std::vector<Location, std::allocator<Location> >::end() [433]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::__normal_iterator(Location* const&) [303]
-----------------------------------------------
                0.00    0.00      10/10          void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[434]    0.0    0.00    0.00      10         std::vector<Location, std::allocator<Location> >::back() [434]
                0.00    0.00      10/10          std::vector<Location, std::allocator<Location> >::end() [433]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator-(long) const [407]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator*() const [406]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::clear() [437]
[435]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**) [435]
                0.00    0.00      10/39          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [245]
                0.00    0.00      10/25          void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&) [270]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[436]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::begin() [436]
                0.00    0.00      10/100         __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move** const&) [169]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[437]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::clear() [437]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**) [435]
-----------------------------------------------
                0.00    0.00      10/10          VND::VND(std::vector<Move*, std::allocator<Move*> >&) [397]
[438]    0.0    0.00    0.00      10         std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
                0.00    0.00      10/18          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const [315]
                0.00    0.00      10/10          __gnu_cxx::__alloc_traits<std::allocator<Move*> >::_S_select_on_copy(std::allocator<Move*> const&) [403]
                0.00    0.00      10/42499       std::vector<Move*, std::allocator<Move*> >::size() const [98]
                0.00    0.00      10/10          std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&) [417]
                0.00    0.00      10/21          std::allocator<Move*>::~allocator() [299]
                0.00    0.00      10/39          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [245]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::end() const [412]
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::begin() const [413]
                0.00    0.00      10/10          Move** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, Move*>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, std::allocator<Move*>&) [453]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[439]    0.0    0.00    0.00      10         std::vector<Solution*, std::allocator<Solution*> >::begin() [439]
                0.00    0.00      10/30          __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::__normal_iterator(Solution** const&) [263]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[440]    0.0    0.00    0.00      10         std::vector<char const*, std::allocator<char const*> >::operator[](unsigned long) [440]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<unsigned int, std::allocator<unsigned int> >::clear() [442]
[441]    0.0    0.00    0.00      10         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*) [441]
                0.00    0.00      10/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00      10/58          void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&) [210]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[442]    0.0    0.00    0.00      10         std::vector<unsigned int, std::allocator<unsigned int> >::clear() [442]
                0.00    0.00      10/10          std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*) [441]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
[443]    0.0    0.00    0.00      10         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
                0.00    0.00      10/20          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_end() [309]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/10          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      10/22          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [294]
                0.00    0.00       9/9           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*) [461]
                0.00    0.00       9/19          std::pair<char const*, BenchmarkResult>::first_type& std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&) const [313]
                0.00    0.00       9/36          std::less<char const*>::operator()(char const* const&, char const* const&) const [251]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
[444]    0.0    0.00    0.00      10         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node() [444]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator() [242]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, unsigned long) [424]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
[445]    0.0    0.00    0.00      10         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [445]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator() [242]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::deallocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [421]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
[446]    0.0    0.00    0.00      10         std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [446]
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node() [444]
                0.00    0.00      10/751         operator new(unsigned long, void*) [143]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [237]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator() [242]
                0.00    0.00      10/10          decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [425]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
[447]    0.0    0.00    0.00      10         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
                0.00    0.00      10/40          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator() [242]
                0.00    0.00      10/40          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [237]
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [423]
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [445]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&) [451]
[448]    0.0    0.00    0.00      10         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
                0.00    0.00      10/19          std::pair<char const*, BenchmarkResult>::first_type& std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&) const [313]
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
[449]    0.0    0.00    0.00      10         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&) [449]
                0.00    0.00      27/27          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*) [265]
                0.00    0.00      27/36          std::less<char const*>::operator()(char const* const&, char const* const&) const [251]
                0.00    0.00      27/37          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_right(std::_Rb_tree_node_base*) [246]
                0.00    0.00      10/11          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_begin() [383]
                0.00    0.00      10/20          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_end() [309]
                0.00    0.00      10/10          std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, void>(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&) [432]
-----------------------------------------------
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
[450]    0.0    0.00    0.00      10         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_left(std::_Rb_tree_node_base*) [450]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[451]    0.0    0.00    0.00      10         std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&) [451]
                0.00    0.00      10/70          std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&) [202]
                0.00    0.00      10/10          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&) [448]
-----------------------------------------------
                0.00    0.00      10/10          Move** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, Move*>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, std::allocator<Move*>&) [453]
[452]    0.0    0.00    0.00      10         Move** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [452]
                0.00    0.00      10/10          Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [427]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&) [438]
[453]    0.0    0.00    0.00      10         Move** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, Move*>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, std::allocator<Move*>&) [453]
                0.00    0.00      10/10          Move** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**) [452]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&) [959]
                0.00    0.00       2/10          decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&) [940]
                0.00    0.00       2/10          void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
                0.00    0.00       2/10          _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_ [938]
                0.00    0.00       2/10          void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&) [840]
[454]    0.0    0.00    0.00      10         Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
-----------------------------------------------
                0.00    0.00      10/10          std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&) [428]
[455]    0.0    0.00    0.00      10         char const*&& std::forward<char const*>(std::remove_reference<char const*>::type&) [455]
-----------------------------------------------
                0.00    0.00       2/10          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&) [957]
                0.00    0.00       2/10          _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_ [932]
                0.00    0.00       2/10          void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00       2/10          _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [931]
                0.00    0.00       2/10          void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [837]
[456]    0.0    0.00    0.00      10         Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
-----------------------------------------------
                0.00    0.00      10/10          std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&) [430]
[457]    0.0    0.00    0.00      10         char const*& std::forward<char const*&>(std::remove_reference<char const*&>::type&) [457]
-----------------------------------------------
                0.00    0.00      10/10          main [1]
[458]    0.0    0.00    0.00      10         operator<<(std::ostream&, BenchmarkResult const&) [458]
                0.00    0.00      90/450         bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [148]
                0.00    0.00      80/400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [150]
                0.00    0.00      80/400         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [149]
                0.00    0.00      10/56          std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [212]
                0.00    0.00      10/56          std::vector<unsigned int, std::allocator<unsigned int> >::end() const [211]
-----------------------------------------------
                0.00    0.00       1/9           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>) [1211]
                0.00    0.00       8/9           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&) [478]
[459]    0.0    0.00    0.00       9         main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const [459]
                0.00    0.00       9/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       9/9           std::_Niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [463]
[460]    0.0    0.00    0.00       9         std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [460]
                0.00    0.00       9/1686        __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [140]
-----------------------------------------------
                0.00    0.00       9/9           std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&) [443]
[461]    0.0    0.00    0.00       9         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*) [461]
                0.00    0.00       9/9           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node_base const*) [462]
                0.00    0.00       9/36          std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()(std::pair<char const* const, BenchmarkResult> const&) const [249]
-----------------------------------------------
                0.00    0.00       9/9           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*) [461]
[462]    0.0    0.00    0.00       9         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node_base const*) [462]
                0.00    0.00       9/36          std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const [250]
-----------------------------------------------
                0.00    0.00       9/9           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [789]
[463]    0.0    0.00    0.00       9         std::_Niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [463]
                0.00    0.00       9/9           std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [460]
-----------------------------------------------
                0.00    0.00       8/8           main::{lambda()#12}::operator()() const [494]
[464]    0.0    0.00    0.00       8         MoveMove2Routes<FirstAvailablePolicy>::MoveMove2Routes() [464]
                0.00    0.00       8/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       8/8           main [1]
[465]    0.0    0.00    0.00       8         MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [465]
                0.00    0.00       8/8           MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [466]
-----------------------------------------------
                0.00    0.00       8/8           MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [465]
[466]    0.0    0.00    0.00       8         MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [466]
                0.00    0.00       8/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<double, std::allocator<double> >::max_size() const [470]
[467]    0.0    0.00    0.00       8         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [467]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [643]
[468]    0.0    0.00    0.00       8         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const [468]
                0.00    0.00       8/19          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() const [314]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Solution::MobileNode> >::max_size(std::allocator<Solution::MobileNode> const&) [480]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [645]
[469]    0.0    0.00    0.00       8         std::vector<Move*, std::allocator<Move*> >::max_size() const [469]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&) [482]
                0.00    0.00       8/18          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const [315]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
[470]    0.0    0.00    0.00       8         std::vector<double, std::allocator<double> >::max_size() const [470]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [484]
                0.00    0.00       8/8           std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [467]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [648]
[471]    0.0    0.00    0.00       8         std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const [471]
                0.00    0.00       8/48          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() const [219]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<unsigned int> >::max_size(std::allocator<unsigned int> const&) [486]
-----------------------------------------------
                0.00    0.00       1/8           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>) [1231]
                0.00    0.00       7/8           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&) [513]
[472]    0.0    0.00    0.00       8         main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const [472]
                0.00    0.00       8/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/8           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>) [1267]
                0.00    0.00       7/8           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [514]
[473]    0.0    0.00    0.00       8         main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const [473]
                0.00    0.00       8/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Solution::MobileNode*> std::__make_move_if_noexcept_iterator<Solution::MobileNode*, std::move_iterator<Solution::MobileNode*> >(Solution::MobileNode*) [488]
[474]    0.0    0.00    0.00       8         std::move_iterator<Solution::MobileNode*>::move_iterator(Solution::MobileNode*) [474]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**) [489]
[475]    0.0    0.00    0.00       8         std::move_iterator<Move**>::move_iterator(Move**) [475]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double*> >(double*) [490]
[476]    0.0    0.00    0.00       8         std::move_iterator<double*>::move_iterator(double*) [476]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<unsigned int*> std::__make_move_if_noexcept_iterator<unsigned int*, std::move_iterator<unsigned int*> >(unsigned int*) [491]
[477]    0.0    0.00    0.00       8         std::move_iterator<unsigned int*>::move_iterator(unsigned int*) [477]
-----------------------------------------------
                0.00    0.00       8/8           std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&) [487]
[478]    0.0    0.00    0.00       8         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&) [478]
                0.00    0.00       8/9           main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const [459]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Solution::MobileNode> >::max_size(std::allocator<Solution::MobileNode> const&) [480]
[479]    0.0    0.00    0.00       8         unsigned long std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_max_size<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, int) [479]
                0.00    0.00       8/23          __gnu_cxx::new_allocator<Solution::MobileNode>::max_size() const [275]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const [468]
[480]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Solution::MobileNode> >::max_size(std::allocator<Solution::MobileNode> const&) [480]
                0.00    0.00       8/8           unsigned long std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_max_size<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, int) [479]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&) [482]
[481]    0.0    0.00    0.00       8         unsigned long std::allocator_traits<std::allocator<Move*> >::_S_max_size<std::allocator<Move*> const, void>(std::allocator<Move*> const&, int) [481]
                0.00    0.00       8/22          __gnu_cxx::new_allocator<Move*>::max_size() const [286]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Move*, std::allocator<Move*> >::max_size() const [469]
[482]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&) [482]
                0.00    0.00       8/8           unsigned long std::allocator_traits<std::allocator<Move*> >::_S_max_size<std::allocator<Move*> const, void>(std::allocator<Move*> const&, int) [481]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [484]
[483]    0.0    0.00    0.00       8         unsigned long std::allocator_traits<std::allocator<double> >::_S_max_size<std::allocator<double> const, void>(std::allocator<double> const&, int) [483]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<double>::max_size() const [350]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<double, std::allocator<double> >::max_size() const [470]
[484]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [484]
                0.00    0.00       8/8           unsigned long std::allocator_traits<std::allocator<double> >::_S_max_size<std::allocator<double> const, void>(std::allocator<double> const&, int) [483]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<unsigned int> >::max_size(std::allocator<unsigned int> const&) [486]
[485]    0.0    0.00    0.00       8         unsigned long std::allocator_traits<std::allocator<unsigned int> >::_S_max_size<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, int) [485]
                0.00    0.00       8/55          __gnu_cxx::new_allocator<unsigned int>::max_size() const [214]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const [471]
[486]    0.0    0.00    0.00       8         std::allocator_traits<std::allocator<unsigned int> >::max_size(std::allocator<unsigned int> const&) [486]
                0.00    0.00       8/8           unsigned long std::allocator_traits<std::allocator<unsigned int> >::_S_max_size<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, int) [485]
-----------------------------------------------
                0.00    0.00       8/8           std::function<Move* ()>::operator()() const [189]
[487]    0.0    0.00    0.00       8         std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&) [487]
                0.00    0.00       8/8           main::{lambda()#12}::operator()() const [494]
                0.00    0.00       8/8           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&) [478]
-----------------------------------------------
                0.00    0.00       8/8           Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [707]
[488]    0.0    0.00    0.00       8         std::move_iterator<Solution::MobileNode*> std::__make_move_if_noexcept_iterator<Solution::MobileNode*, std::move_iterator<Solution::MobileNode*> >(Solution::MobileNode*) [488]
                0.00    0.00       8/8           std::move_iterator<Solution::MobileNode*>::move_iterator(Solution::MobileNode*) [474]
-----------------------------------------------
                0.00    0.00       8/8           Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&) [708]
[489]    0.0    0.00    0.00       8         std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**) [489]
                0.00    0.00       8/8           std::move_iterator<Move**>::move_iterator(Move**) [475]
-----------------------------------------------
                0.00    0.00       8/8           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [709]
[490]    0.0    0.00    0.00       8         std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double*> >(double*) [490]
                0.00    0.00       8/8           std::move_iterator<double*>::move_iterator(double*) [476]
-----------------------------------------------
                0.00    0.00       8/8           unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&) [710]
[491]    0.0    0.00    0.00       8         std::move_iterator<unsigned int*> std::__make_move_if_noexcept_iterator<unsigned int*, std::move_iterator<unsigned int*> >(unsigned int*) [491]
                0.00    0.00       8/8           std::move_iterator<unsigned int*>::move_iterator(unsigned int*) [477]
-----------------------------------------------
                0.00    0.00       2/8           void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
                0.00    0.00       2/8           decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
                0.00    0.00       2/8           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
                0.00    0.00       2/8           void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
[492]    0.0    0.00    0.00       8         Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&) [492]
-----------------------------------------------
                0.00    0.00       2/8           _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [930]
                0.00    0.00       2/8           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
                0.00    0.00       2/8           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&) [928]
                0.00    0.00       2/8           _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_ [836]
[493]    0.0    0.00    0.00       8         Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&) [493]
-----------------------------------------------
                0.00    0.00       8/8           std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&) [487]
[494]    0.0    0.00    0.00       8         main::{lambda()#12}::operator()() const [494]
                0.00    0.00       8/8           MoveMove2Routes<FirstAvailablePolicy>::MoveMove2Routes() [464]
-----------------------------------------------
                0.00    0.00       7/7           main::{lambda()#1}::operator()() const [525]
[495]    0.0    0.00    0.00       7         MoveInsert<BestAvailablePolicy>::MoveInsert() [495]
                0.00    0.00       7/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       7/7           main [1]
[496]    0.0    0.00    0.00       7         MoveInsert<BestAvailablePolicy>::~MoveInsert() [496]
                0.00    0.00       7/7           MoveInsert<BestAvailablePolicy>::~MoveInsert() [497]
-----------------------------------------------
                0.00    0.00       7/7           MoveInsert<BestAvailablePolicy>::~MoveInsert() [496]
[497]    0.0    0.00    0.00       7         MoveInsert<BestAvailablePolicy>::~MoveInsert() [497]
                0.00    0.00       7/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       7/7           main::{lambda()#3}::operator()() const [524]
[498]    0.0    0.00    0.00       7         MoveMove1Route<BestAvailablePolicy>::MoveMove1Route() [498]
                0.00    0.00       7/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       7/7           main [1]
[499]    0.0    0.00    0.00       7         MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [499]
                0.00    0.00       7/7           MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [500]
-----------------------------------------------
                0.00    0.00       7/7           MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [499]
[500]    0.0    0.00    0.00       7         MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [500]
                0.00    0.00       7/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       7/7           Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
[501]    0.0    0.00    0.00       7         std::move_iterator<Solution::MobileNode*>::operator*() const [501]
                0.00    0.00       7/7           std::remove_reference<Solution::MobileNode&>::type&& std::move<Solution::MobileNode&>(Solution::MobileNode&) [520]
-----------------------------------------------
                0.00    0.00       7/7           Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
[502]    0.0    0.00    0.00       7         std::move_iterator<Move**>::operator*() const [502]
                0.00    0.00       7/87          std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&) [178]
-----------------------------------------------
                0.00    0.00       7/7           unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
[503]    0.0    0.00    0.00       7         std::move_iterator<unsigned int*>::operator*() const [503]
                0.00    0.00       7/636         std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&) [145]
-----------------------------------------------
                0.00    0.00       1/7           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
                0.00    0.00       2/7           main [1]
                0.00    0.00       4/7           std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [1118]
[504]    0.0    0.00    0.00       7         std::vector<Problem*, std::allocator<Problem*> >::size() const [504]
-----------------------------------------------
                0.00    0.00       1/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
                0.00    0.00       2/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long) [1339]
                0.00    0.00       4/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [1120]
[505]    0.0    0.00    0.00       7         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [505]
-----------------------------------------------
                0.00    0.00       1/7           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>) [1227]
                0.00    0.00       6/7           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&) [552]
[506]    0.0    0.00    0.00       7         main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const [506]
                0.00    0.00       7/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/7           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>) [1243]
                0.00    0.00       6/7           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&) [553]
[507]    0.0    0.00    0.00       7         main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const [507]
                0.00    0.00       7/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Destroy<double*>(double*, double*) [522]
[508]    0.0    0.00    0.00       7         void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [508]
-----------------------------------------------
                0.00    0.00       2/7           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/7           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       3/7           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [758]
[509]    0.0    0.00    0.00       7         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [509]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [667]
-----------------------------------------------
                0.00    0.00       7/7           Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
[510]    0.0    0.00    0.00       7         std::move_iterator<Solution::MobileNode*>::operator++() [510]
-----------------------------------------------
                0.00    0.00       7/7           Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
[511]    0.0    0.00    0.00       7         std::move_iterator<Move**>::operator++() [511]
-----------------------------------------------
                0.00    0.00       7/7           unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
[512]    0.0    0.00    0.00       7         std::move_iterator<unsigned int*>::operator++() [512]
-----------------------------------------------
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&) [515]
[513]    0.0    0.00    0.00       7         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&) [513]
                0.00    0.00       7/8           main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const [472]
-----------------------------------------------
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&) [516]
[514]    0.0    0.00    0.00       7         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [514]
                0.00    0.00       7/8           main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const [473]
-----------------------------------------------
                0.00    0.00       7/7           std::function<Move* ()>::operator()() const [189]
[515]    0.0    0.00    0.00       7         std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&) [515]
                0.00    0.00       7/7           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&) [513]
                0.00    0.00       7/7           main::{lambda()#3}::operator()() const [524]
-----------------------------------------------
                0.00    0.00       7/7           std::function<Move* ()>::operator()() const [189]
[516]    0.0    0.00    0.00       7         std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&) [516]
                0.00    0.00       7/7           main::{lambda()#1}::operator()() const [525]
                0.00    0.00       7/7           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [514]
-----------------------------------------------
                0.00    0.00       7/7           Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
[517]    0.0    0.00    0.00       7         void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&) [517]
                0.00    0.00       7/7           Solution::MobileNode&& std::forward<Solution::MobileNode>(std::remove_reference<Solution::MobileNode>::type&) [521]
                0.00    0.00       7/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       7/7           Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
[518]    0.0    0.00    0.00       7         _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_ [518]
                0.00    0.00       7/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00       7/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       7/7           unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
[519]    0.0    0.00    0.00       7         void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [519]
                0.00    0.00       7/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00       7/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       7/7           std::move_iterator<Solution::MobileNode*>::operator*() const [501]
[520]    0.0    0.00    0.00       7         std::remove_reference<Solution::MobileNode&>::type&& std::move<Solution::MobileNode&>(Solution::MobileNode&) [520]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&) [517]
[521]    0.0    0.00    0.00       7         Solution::MobileNode&& std::forward<Solution::MobileNode>(std::remove_reference<Solution::MobileNode>::type&) [521]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [523]
[522]    0.0    0.00    0.00       7         void std::_Destroy<double*>(double*, double*) [522]
                0.00    0.00       7/7           void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [508]
-----------------------------------------------
                0.00    0.00       2/7           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/7           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       3/7           std::vector<double, std::allocator<double> >::~vector() [785]
[523]    0.0    0.00    0.00       7         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [523]
                0.00    0.00       7/7           void std::_Destroy<double*>(double*, double*) [522]
-----------------------------------------------
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&) [515]
[524]    0.0    0.00    0.00       7         main::{lambda()#3}::operator()() const [524]
                0.00    0.00       7/7           MoveMove1Route<BestAvailablePolicy>::MoveMove1Route() [498]
-----------------------------------------------
                0.00    0.00       7/7           std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&) [516]
[525]    0.0    0.00    0.00       7         main::{lambda()#1}::operator()() const [525]
                0.00    0.00       7/7           MoveInsert<BestAvailablePolicy>::MoveInsert() [495]
-----------------------------------------------
                0.00    0.00       6/6           main::{lambda()#6}::operator()() const [559]
[526]    0.0    0.00    0.00       6         MoveSwap2Routes<BestAvailablePolicy>::MoveSwap2Routes() [526]
                0.00    0.00       6/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       6/6           main [1]
[527]    0.0    0.00    0.00       6         MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [527]
                0.00    0.00       6/6           MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [528]
-----------------------------------------------
                0.00    0.00       6/6           MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [527]
[528]    0.0    0.00    0.00       6         MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [528]
                0.00    0.00       6/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       6/6           main::{lambda()#16}::operator()() const [558]
[529]    0.0    0.00    0.00       6         Move2Opt<FirstAvailablePolicy>::Move2Opt() [529]
                0.00    0.00       6/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       6/6           main [1]
[530]    0.0    0.00    0.00       6         Move2Opt<FirstAvailablePolicy>::~Move2Opt() [530]
                0.00    0.00       6/6           Move2Opt<FirstAvailablePolicy>::~Move2Opt() [531]
-----------------------------------------------
                0.00    0.00       6/6           Move2Opt<FirstAvailablePolicy>::~Move2Opt() [530]
[531]    0.0    0.00    0.00       6         Move2Opt<FirstAvailablePolicy>::~Move2Opt() [531]
                0.00    0.00       6/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<std::string>::~allocator() [548]
[532]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::string>::~new_allocator() [532]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [541]
[533]    0.0    0.00    0.00       6         bool __gnu_cxx::operator==<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [533]
                0.00    0.00      12/922         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [142]
-----------------------------------------------
                0.00    0.00       2/6           __gnu_cxx::new_allocator<Location>::allocate(unsigned long, void const*) [835]
                0.00    0.00       4/6           unsigned long std::allocator_traits<std::allocator<Location> >::_S_max_size<std::allocator<Location> const, void>(std::allocator<Location> const&, int) [661]
[534]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<Location>::max_size() const [534]
-----------------------------------------------
                0.00    0.00       2/6           __gnu_cxx::new_allocator<Interceptor const*>::allocate(unsigned long, void const*) [839]
                0.00    0.00       4/6           unsigned long std::allocator_traits<std::allocator<Interceptor const*> >::_S_max_size<std::allocator<Interceptor const*> const, void>(std::allocator<Interceptor const*> const&, int) [665]
[535]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<Interceptor const*>::max_size() const [535]
-----------------------------------------------
                0.00    0.00       6/6           bool __gnu_cxx::operator!=<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&) [728]
[536]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::base() const [536]
-----------------------------------------------
                0.00    0.00       6/6           bool std::operator==<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [817]
[537]    0.0    0.00    0.00       6         std::move_iterator<Location*>::base() const [537]
-----------------------------------------------
                0.00    0.00       6/6           bool std::operator==<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [818]
[538]    0.0    0.00    0.00       6         std::move_iterator<Solution::InterceptorNode*>::base() const [538]
-----------------------------------------------
                0.00    0.00       3/6           std::initializer_list<std::string>::end() const [733]
                0.00    0.00       3/6           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
[539]    0.0    0.00    0.00       6         std::initializer_list<std::string>::begin() const [539]
-----------------------------------------------
                0.00    0.00       3/6           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       3/6           Solution::Solution(Problem const&) [1050]
[540]    0.0    0.00    0.00       6         std::vector<Interceptor, std::allocator<Interceptor> >::end() const [540]
                0.00    0.00       6/52168       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [93]
-----------------------------------------------
                0.00    0.00       6/6           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[541]    0.0    0.00    0.00       6         std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [541]
                0.00    0.00       6/56          std::vector<unsigned int, std::allocator<unsigned int> >::end() const [211]
                0.00    0.00       6/56          std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [212]
                0.00    0.00       6/6           bool __gnu_cxx::operator==<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [533]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>) [1207]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&) [593]
[542]    0.0    0.00    0.00       6         main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const [542]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>) [1215]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&) [594]
[543]    0.0    0.00    0.00       6         main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const [543]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>) [1223]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&) [595]
[544]    0.0    0.00    0.00       6         main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const [544]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>) [1239]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&) [596]
[545]    0.0    0.00    0.00       6         main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const [545]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>) [1247]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&) [597]
[546]    0.0    0.00    0.00       6         main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const [546]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>) [1259]
                0.00    0.00       5/6           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&) [598]
[547]    0.0    0.00    0.00       6         main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const [547]
                0.00    0.00       6/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/6           __static_initialization_and_destruction_0(int, int) [1042]
                0.00    0.00       2/6           __static_initialization_and_destruction_0(int, int) [1043]
                0.00    0.00       3/6           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl() [751]
[548]    0.0    0.00    0.00       6         std::allocator<std::string>::~allocator() [548]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::string>::~new_allocator() [532]
-----------------------------------------------
                0.00    0.00       6/6           std::_Miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [557]
[549]    0.0    0.00    0.00       6         std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [549]
-----------------------------------------------
                0.00    0.00       2/6           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector() [963]
                0.00    0.00       4/6           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[550]    0.0    0.00    0.00       6         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() [550]
-----------------------------------------------
                0.00    0.00       3/6           void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
                0.00    0.00       3/6           std::vector<std::string, std::allocator<std::string> >::~vector() [1739]
[551]    0.0    0.00    0.00       6         std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator() [551]
-----------------------------------------------
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&) [554]
[552]    0.0    0.00    0.00       6         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&) [552]
                0.00    0.00       6/7           main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const [506]
-----------------------------------------------
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&) [555]
[553]    0.0    0.00    0.00       6         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&) [553]
                0.00    0.00       6/7           main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const [507]
-----------------------------------------------
                0.00    0.00       6/6           std::function<Move* ()>::operator()() const [189]
[554]    0.0    0.00    0.00       6         std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&) [554]
                0.00    0.00       6/6           main::{lambda()#16}::operator()() const [558]
                0.00    0.00       6/6           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&) [552]
-----------------------------------------------
                0.00    0.00       6/6           std::function<Move* ()>::operator()() const [189]
[555]    0.0    0.00    0.00       6         std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&) [555]
                0.00    0.00       6/6           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&) [553]
                0.00    0.00       6/6           main::{lambda()#6}::operator()() const [559]
-----------------------------------------------
                0.00    0.00       3/6           std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [781]
                0.00    0.00       3/6           void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*) [741]
[556]    0.0    0.00    0.00       6         std::string* std::__addressof<std::string>(std::string&) [556]
-----------------------------------------------
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [793]
[557]    0.0    0.00    0.00       6         std::_Miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [557]
                0.00    0.00       6/6           std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [549]
-----------------------------------------------
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&) [554]
[558]    0.0    0.00    0.00       6         main::{lambda()#16}::operator()() const [558]
                0.00    0.00       6/6           Move2Opt<FirstAvailablePolicy>::Move2Opt() [529]
-----------------------------------------------
                0.00    0.00       6/6           std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&) [555]
[559]    0.0    0.00    0.00       6         main::{lambda()#6}::operator()() const [559]
                0.00    0.00       6/6           MoveSwap2Routes<BestAvailablePolicy>::MoveSwap2Routes() [526]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#2}::operator()() const [621]
[560]    0.0    0.00    0.00       5         MoveExtract<BestAvailablePolicy>::MoveExtract() [560]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[561]    0.0    0.00    0.00       5         MoveExtract<BestAvailablePolicy>::~MoveExtract() [561]
                0.00    0.00       5/5           MoveExtract<BestAvailablePolicy>::~MoveExtract() [562]
-----------------------------------------------
                0.00    0.00       5/5           MoveExtract<BestAvailablePolicy>::~MoveExtract() [561]
[562]    0.0    0.00    0.00       5         MoveExtract<BestAvailablePolicy>::~MoveExtract() [562]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#10}::operator()() const [626]
[563]    0.0    0.00    0.00       5         MoveExtract<FirstAvailablePolicy>::MoveExtract() [563]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[564]    0.0    0.00    0.00       5         MoveExtract<FirstAvailablePolicy>::~MoveExtract() [564]
                0.00    0.00       5/5           MoveExtract<FirstAvailablePolicy>::~MoveExtract() [565]
-----------------------------------------------
                0.00    0.00       5/5           MoveExtract<FirstAvailablePolicy>::~MoveExtract() [564]
[565]    0.0    0.00    0.00       5         MoveExtract<FirstAvailablePolicy>::~MoveExtract() [565]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#7}::operator()() const [625]
[566]    0.0    0.00    0.00       5         MoveReplace<BestAvailablePolicy>::MoveReplace() [566]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[567]    0.0    0.00    0.00       5         MoveReplace<BestAvailablePolicy>::~MoveReplace() [567]
                0.00    0.00       5/5           MoveReplace<BestAvailablePolicy>::~MoveReplace() [568]
-----------------------------------------------
                0.00    0.00       5/5           MoveReplace<BestAvailablePolicy>::~MoveReplace() [567]
[568]    0.0    0.00    0.00       5         MoveReplace<BestAvailablePolicy>::~MoveReplace() [568]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#15}::operator()() const [623]
[569]    0.0    0.00    0.00       5         MoveReplace<FirstAvailablePolicy>::MoveReplace() [569]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[570]    0.0    0.00    0.00       5         MoveReplace<FirstAvailablePolicy>::~MoveReplace() [570]
                0.00    0.00       5/5           MoveReplace<FirstAvailablePolicy>::~MoveReplace() [571]
-----------------------------------------------
                0.00    0.00       5/5           MoveReplace<FirstAvailablePolicy>::~MoveReplace() [570]
[571]    0.0    0.00    0.00       5         MoveReplace<FirstAvailablePolicy>::~MoveReplace() [571]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#5}::operator()() const [624]
[572]    0.0    0.00    0.00       5         MoveSwap1Route<BestAvailablePolicy>::MoveSwap1Route() [572]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[573]    0.0    0.00    0.00       5         MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [573]
                0.00    0.00       5/5           MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [574]
-----------------------------------------------
                0.00    0.00       5/5           MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [573]
[574]    0.0    0.00    0.00       5         MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [574]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           main::{lambda()#13}::operator()() const [622]
[575]    0.0    0.00    0.00       5         MoveSwap1Route<FirstAvailablePolicy>::MoveSwap1Route() [575]
                0.00    0.00       5/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       5/5           main [1]
[576]    0.0    0.00    0.00       5         MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [576]
                0.00    0.00       5/5           MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [577]
-----------------------------------------------
                0.00    0.00       5/5           MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [576]
[577]    0.0    0.00    0.00       5         MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [577]
                0.00    0.00       5/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       5/5           _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
[578]    0.0    0.00    0.00       5         Mobile::Mobile(double, double, double, double, unsigned int) [578]
                0.00    0.00       5/2973506     Location::Location(double, double) [70]
                0.00    0.00       5/5           Direction::Direction(double, double) [582]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy<Mobile>(Mobile*) [618]
[579]    0.0    0.00    0.00       5         Mobile::~Mobile() [579]
-----------------------------------------------
                0.00    0.00       5/5           _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [584]
[580]    0.0    0.00    0.00       5         Solution::MobileNode::MobileNode(Mobile const&) [580]
-----------------------------------------------
                0.00    0.00       5/5           Solution::append(Interceptor const&, Mobile const&, double const&) [63]
[581]    0.0    0.00    0.00       5         Solution::append(unsigned int, unsigned int, double const&) [581]
                0.00    0.00      23/188296      std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) [81]
                0.00    0.00       6/17481       std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) [110]
-----------------------------------------------
                0.00    0.00       5/5           Mobile::Mobile(double, double, double, double, unsigned int) [578]
[582]    0.0    0.00    0.00       5         Direction::Direction(double, double) [582]
-----------------------------------------------
                0.00    0.00       5/5           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [599]
[583]    0.0    0.00    0.00       5         _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
                0.00    0.00      20/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       5/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       5/751         operator new(unsigned long, void*) [143]
                0.00    0.00       5/5           Mobile::Mobile(double, double, double, double, unsigned int) [578]
-----------------------------------------------
                0.00    0.00       5/5           _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [601]
[584]    0.0    0.00    0.00       5         _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [584]
                0.00    0.00       5/24          Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
                0.00    0.00       5/751         operator new(unsigned long, void*) [143]
                0.00    0.00       5/5           Solution::MobileNode::MobileNode(Mobile const&) [580]
-----------------------------------------------
                0.00    0.00       5/5           std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__destroy_helper<unsigned int>::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [603]
[585]    0.0    0.00    0.00       5         void __gnu_cxx::new_allocator<unsigned int>::destroy<unsigned int>(unsigned int*) [585]
-----------------------------------------------
                0.00    0.00       5/5           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[586]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator<unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int*, __gnu_cxx::__enable_if<std::__are_same<unsigned int*, unsigned int*>::__value, std::vector<unsigned int, std::allocator<unsigned int> > >::__type> const&) [586]
                0.00    0.00       5/1686        __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [140]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
[587]    0.0    0.00    0.00       5         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [587]
                0.00    0.00      10/922         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [142]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
                0.00    0.00       4/5           std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [1119]
[588]    0.0    0.00    0.00       5         std::vector<Solution*, std::allocator<Solution*> >::size() const [588]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
[589]    0.0    0.00    0.00       5         std::vector<unsigned int, std::allocator<unsigned int> >::cbegin() const [589]
                0.00    0.00       5/117         __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&) [166]
-----------------------------------------------
                0.00    0.00       1/5           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>) [1219]
                0.00    0.00       4/5           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&) [659]
[590]    0.0    0.00    0.00       5         main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const [590]
                0.00    0.00       5/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/5           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>) [1251]
                0.00    0.00       4/5           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&) [660]
[591]    0.0    0.00    0.00       5         main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const [591]
                0.00    0.00       5/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/5           std::vector<Location, std::allocator<Location> >::~vector() [1316]
                0.00    0.00       4/5           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[592]    0.0    0.00    0.00       5         std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() [592]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&) [605]
[593]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&) [593]
                0.00    0.00       5/6           main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const [542]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&) [606]
[594]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&) [594]
                0.00    0.00       5/6           main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const [543]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&) [607]
[595]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&) [595]
                0.00    0.00       5/6           main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const [544]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&) [608]
[596]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&) [596]
                0.00    0.00       5/6           main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const [545]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&) [609]
[597]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&) [597]
                0.00    0.00       5/6           main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const [546]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&) [610]
[598]    0.0    0.00    0.00       5         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&) [598]
                0.00    0.00       5/6           main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const [547]
-----------------------------------------------
                0.00    0.00       5/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [600]
[599]    0.0    0.00    0.00       5         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [599]
                0.00    0.00      20/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       5/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       5/5           _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [583]
-----------------------------------------------
                0.00    0.00       5/5           void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&) [611]
[600]    0.0    0.00    0.00       5         decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [600]
                0.00    0.00      20/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       5/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       5/5           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [599]
-----------------------------------------------
                0.00    0.00       5/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [602]
[601]    0.0    0.00    0.00       5         _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [601]
                0.00    0.00       5/24          Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
                0.00    0.00       5/5           _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [584]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&) [612]
                0.00    0.00       4/5           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
[602]    0.0    0.00    0.00       5         decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [602]
                0.00    0.00       5/24          Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
                0.00    0.00       5/5           _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [601]
-----------------------------------------------
                0.00    0.00       5/5           void std::allocator_traits<std::allocator<unsigned int> >::destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [604]
[603]    0.0    0.00    0.00       5         std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__destroy_helper<unsigned int>::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [603]
                0.00    0.00       5/5           void __gnu_cxx::new_allocator<unsigned int>::destroy<unsigned int>(unsigned int*) [585]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
[604]    0.0    0.00    0.00       5         void std::allocator_traits<std::allocator<unsigned int> >::destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [604]
                0.00    0.00       5/5           std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__destroy_helper<unsigned int>::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [603]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[605]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&) [605]
                0.00    0.00       5/5           main::{lambda()#2}::operator()() const [621]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&) [593]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[606]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&) [606]
                0.00    0.00       5/5           main::{lambda()#13}::operator()() const [622]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&) [594]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[607]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&) [607]
                0.00    0.00       5/5           main::{lambda()#15}::operator()() const [623]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&) [595]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[608]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&) [608]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&) [596]
                0.00    0.00       5/5           main::{lambda()#5}::operator()() const [624]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[609]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&) [609]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&) [597]
                0.00    0.00       5/5           main::{lambda()#7}::operator()() const [625]
-----------------------------------------------
                0.00    0.00       5/5           std::function<Move* ()>::operator()() const [189]
[610]    0.0    0.00    0.00       5         std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&) [610]
                0.00    0.00       5/5           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&) [598]
                0.00    0.00       5/5           main::{lambda()#10}::operator()() const [626]
-----------------------------------------------
                0.00    0.00       5/5           Problem::Problem(char const*) [61]
[611]    0.0    0.00    0.00       5         void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&) [611]
                0.00    0.00      20/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       5/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       5/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [600]
-----------------------------------------------
                0.00    0.00       5/5           Solution::Solution(Problem const&) [1050]
[612]    0.0    0.00    0.00       5         void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&) [612]
                0.00    0.00       5/24          Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
                0.00    0.00       4/4           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00       1/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [602]
-----------------------------------------------
                0.00    0.00       5/5           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[613]    0.0    0.00    0.00       5         std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::cbegin() const [589]
                0.00    0.00       5/5           __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [587]
                0.00    0.00       5/46          std::vector<unsigned int, std::allocator<unsigned int> >::begin() [226]
                0.00    0.00       5/253         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [157]
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >) [613]
[614]    0.0    0.00    0.00       5         std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
                0.00    0.00       8/154         std::vector<unsigned int, std::allocator<unsigned int> >::end() [164]
                0.00    0.00       8/253         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [157]
                0.00    0.00       5/616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00       5/5           void std::allocator_traits<std::allocator<unsigned int> >::destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [604]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [793]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*) [882]
[615]    0.0    0.00    0.00       5         Mobile* std::__addressof<Mobile>(Mobile&) [615]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&) [1320]
                0.00    0.00       1/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&) [1283]
                0.00    0.00       1/5           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
                0.00    0.00       1/5           _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [1281]
                0.00    0.00       1/5           _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_ [1073]
[616]    0.0    0.00    0.00       5         Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&) [1327]
                0.00    0.00       1/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1287]
                0.00    0.00       1/5           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
                0.00    0.00       1/5           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1285]
                0.00    0.00       1/5           _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_ [1078]
[617]    0.0    0.00    0.00       5         Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
-----------------------------------------------
                0.00    0.00       5/5           void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*) [882]
[618]    0.0    0.00    0.00       5         void std::_Destroy<Mobile>(Mobile*) [618]
                0.00    0.00       5/5           Mobile::~Mobile() [579]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [620]
[619]    0.0    0.00    0.00       5         bool std::operator==<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [619]
                0.00    0.00      10/10          std::move_iterator<double*>::base() const [410]
-----------------------------------------------
                0.00    0.00       5/5           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
[620]    0.0    0.00    0.00       5         bool std::operator!=<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [620]
                0.00    0.00       5/5           bool std::operator==<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [619]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&) [605]
[621]    0.0    0.00    0.00       5         main::{lambda()#2}::operator()() const [621]
                0.00    0.00       5/5           MoveExtract<BestAvailablePolicy>::MoveExtract() [560]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&) [606]
[622]    0.0    0.00    0.00       5         main::{lambda()#13}::operator()() const [622]
                0.00    0.00       5/5           MoveSwap1Route<FirstAvailablePolicy>::MoveSwap1Route() [575]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&) [607]
[623]    0.0    0.00    0.00       5         main::{lambda()#15}::operator()() const [623]
                0.00    0.00       5/5           MoveReplace<FirstAvailablePolicy>::MoveReplace() [569]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&) [608]
[624]    0.0    0.00    0.00       5         main::{lambda()#5}::operator()() const [624]
                0.00    0.00       5/5           MoveSwap1Route<BestAvailablePolicy>::MoveSwap1Route() [572]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&) [609]
[625]    0.0    0.00    0.00       5         main::{lambda()#7}::operator()() const [625]
                0.00    0.00       5/5           MoveReplace<BestAvailablePolicy>::MoveReplace() [566]
-----------------------------------------------
                0.00    0.00       5/5           std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&) [610]
[626]    0.0    0.00    0.00       5         main::{lambda()#10}::operator()() const [626]
                0.00    0.00       5/5           MoveExtract<FirstAvailablePolicy>::MoveExtract() [563]
-----------------------------------------------
                0.00    0.00       4/4           main::{lambda()#14}::operator()() const [713]
[627]    0.0    0.00    0.00       4         MoveSwap2Routes<FirstAvailablePolicy>::MoveSwap2Routes() [627]
                0.00    0.00       4/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[628]    0.0    0.00    0.00       4         MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [628]
                0.00    0.00       4/4           MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [629]
-----------------------------------------------
                0.00    0.00       4/4           MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [628]
[629]    0.0    0.00    0.00       4         MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [629]
                0.00    0.00       4/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       4/4           main::{lambda()#8}::operator()() const [714]
[630]    0.0    0.00    0.00       4         Move2Opt<BestAvailablePolicy>::Move2Opt() [630]
                0.00    0.00       4/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[631]    0.0    0.00    0.00       4         Move2Opt<BestAvailablePolicy>::~Move2Opt() [631]
                0.00    0.00       4/4           Move2Opt<BestAvailablePolicy>::~Move2Opt() [632]
-----------------------------------------------
                0.00    0.00       4/4           Move2Opt<BestAvailablePolicy>::~Move2Opt() [631]
[632]    0.0    0.00    0.00       4         Move2Opt<BestAvailablePolicy>::~Move2Opt() [632]
                0.00    0.00       4/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [667]
[633]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [633]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [668]
[634]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [634]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<double>::max_size() const [350]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<unsigned int>::allocator() [651]
[635]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<unsigned int>::new_allocator() [635]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<Interceptor, std::allocator<Interceptor> >::end() [952]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator-(long) const [854]
[636]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor* const&) [636]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator!=<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&) [849]
[637]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::base() const [637]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Location, std::allocator<Location> >::max_size() const [642]
[638]    0.0    0.00    0.00       4         std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() const [638]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const [646]
[639]    0.0    0.00    0.00       4         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() const [639]
-----------------------------------------------
                0.00    0.00       4/4           bool std::operator==<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1015]
[640]    0.0    0.00    0.00       4         std::move_iterator<Interceptor const**>::base() const [640]
-----------------------------------------------
                0.00    0.00       2/4           std::initializer_list<unsigned int>::end() const [866]
                0.00    0.00       2/4           std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
[641]    0.0    0.00    0.00       4         std::initializer_list<unsigned int>::begin() const [641]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [869]
[642]    0.0    0.00    0.00       4         std::vector<Location, std::allocator<Location> >::max_size() const [642]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Location> >::max_size(std::allocator<Location> const&) [662]
                0.00    0.00       4/4           std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() const [638]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
[643]    0.0    0.00    0.00       4         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [643]
                0.00    0.00      16/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const [259]
                0.00    0.00       8/8           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const [468]
                0.00    0.00       4/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [870]
[644]    0.0    0.00    0.00       4         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const [644]
                0.00    0.00       4/15          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() const [328]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Solution::InterceptorNode> >::max_size(std::allocator<Solution::InterceptorNode> const&) [664]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
[645]    0.0    0.00    0.00       4         std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [645]
                0.00    0.00      16/42499       std::vector<Move*, std::allocator<Move*> >::size() const [98]
                0.00    0.00       8/8           std::vector<Move*, std::allocator<Move*> >::max_size() const [469]
                0.00    0.00       4/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [873]
[646]    0.0    0.00    0.00       4         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const [646]
                0.00    0.00       4/4           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() const [639]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Interceptor const*> >::max_size(std::allocator<Interceptor const*> const&) [666]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/4           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
[647]    0.0    0.00    0.00       4         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
                0.00    0.00      16/24          std::vector<double, std::allocator<double> >::size() const [271]
                0.00    0.00       8/8           std::vector<double, std::allocator<double> >::max_size() const [470]
                0.00    0.00       4/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
[648]    0.0    0.00    0.00       4         std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [648]
                0.00    0.00      16/60          std::vector<unsigned int, std::allocator<unsigned int> >::size() const [207]
                0.00    0.00       8/8           std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const [471]
                0.00    0.00       4/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>) [1255]
                0.00    0.00       3/4           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&) [772]
[649]    0.0    0.00    0.00       4         main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const [649]
                0.00    0.00       4/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>) [1263]
                0.00    0.00       3/4           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&) [775]
[650]    0.0    0.00    0.00       4         main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const [650]
                0.00    0.00       4/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       1/4           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       1/4           std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl() [1199]
                0.00    0.00       2/4           main [1]
[651]    0.0    0.00    0.00       4         std::allocator<unsigned int>::allocator() [651]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<unsigned int>::new_allocator() [635]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [711]
[652]    0.0    0.00    0.00       4         void std::_Destroy_aux<true>::__destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [652]
-----------------------------------------------
                0.00    0.00       2/4           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base() [896]
                0.00    0.00       2/4           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[653]    0.0    0.00    0.00       4         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long) [653]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Interceptor const*> >::deallocate(std::allocator<Interceptor const*>&, Interceptor const**, unsigned long) [937]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~vector() [1736]
                0.00    0.00       3/4           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
[654]    0.0    0.00    0.00       4         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() [654]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/4           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
[655]    0.0    0.00    0.00       4         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [655]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [668]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<Location*> std::__make_move_if_noexcept_iterator<Location*, std::move_iterator<Location*> >(Location*) [704]
[656]    0.0    0.00    0.00       4         std::move_iterator<Location*>::move_iterator(Location*) [656]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<Solution::InterceptorNode*> std::__make_move_if_noexcept_iterator<Solution::InterceptorNode*, std::move_iterator<Solution::InterceptorNode*> >(Solution::InterceptorNode*) [705]
[657]    0.0    0.00    0.00       4         std::move_iterator<Solution::InterceptorNode*>::move_iterator(Solution::InterceptorNode*) [657]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<Interceptor const**> std::__make_move_if_noexcept_iterator<Interceptor const**, std::move_iterator<Interceptor const**> >(Interceptor const**) [706]
[658]    0.0    0.00    0.00       4         std::move_iterator<Interceptor const**>::move_iterator(Interceptor const**) [658]
-----------------------------------------------
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&) [669]
[659]    0.0    0.00    0.00       4         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&) [659]
                0.00    0.00       4/5           main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const [590]
-----------------------------------------------
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&) [670]
[660]    0.0    0.00    0.00       4         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&) [660]
                0.00    0.00       4/5           main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const [591]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Location> >::max_size(std::allocator<Location> const&) [662]
[661]    0.0    0.00    0.00       4         unsigned long std::allocator_traits<std::allocator<Location> >::_S_max_size<std::allocator<Location> const, void>(std::allocator<Location> const&, int) [661]
                0.00    0.00       4/6           __gnu_cxx::new_allocator<Location>::max_size() const [534]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Location, std::allocator<Location> >::max_size() const [642]
[662]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Location> >::max_size(std::allocator<Location> const&) [662]
                0.00    0.00       4/4           unsigned long std::allocator_traits<std::allocator<Location> >::_S_max_size<std::allocator<Location> const, void>(std::allocator<Location> const&, int) [661]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Solution::InterceptorNode> >::max_size(std::allocator<Solution::InterceptorNode> const&) [664]
[663]    0.0    0.00    0.00       4         unsigned long std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_max_size<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, int) [663]
                0.00    0.00       4/17          __gnu_cxx::new_allocator<Solution::InterceptorNode>::max_size() const [316]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const [644]
[664]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Solution::InterceptorNode> >::max_size(std::allocator<Solution::InterceptorNode> const&) [664]
                0.00    0.00       4/4           unsigned long std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_max_size<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, int) [663]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Interceptor const*> >::max_size(std::allocator<Interceptor const*> const&) [666]
[665]    0.0    0.00    0.00       4         unsigned long std::allocator_traits<std::allocator<Interceptor const*> >::_S_max_size<std::allocator<Interceptor const*> const, void>(std::allocator<Interceptor const*> const&, int) [665]
                0.00    0.00       4/6           __gnu_cxx::new_allocator<Interceptor const*>::max_size() const [535]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const [646]
[666]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Interceptor const*> >::max_size(std::allocator<Interceptor const*> const&) [666]
                0.00    0.00       4/4           unsigned long std::allocator_traits<std::allocator<Interceptor const*> >::_S_max_size<std::allocator<Interceptor const*> const, void>(std::allocator<Interceptor const*> const&, int) [665]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [509]
[667]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [667]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [633]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [655]
[668]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [668]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [634]
-----------------------------------------------
                0.00    0.00       4/4           std::function<Move* ()>::operator()() const [189]
[669]    0.0    0.00    0.00       4         std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&) [669]
                0.00    0.00       4/4           main::{lambda()#14}::operator()() const [713]
                0.00    0.00       4/4           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&) [659]
-----------------------------------------------
                0.00    0.00       4/4           std::function<Move* ()>::operator()() const [189]
[670]    0.0    0.00    0.00       4         std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&) [670]
                0.00    0.00       4/4           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&) [660]
                0.00    0.00       4/4           main::{lambda()#8}::operator()() const [714]
-----------------------------------------------
                0.00    0.00       4/4           Solution::MobileNode* std::uninitialized_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [696]
[671]    0.0    0.00    0.00       4         Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
                0.00    0.00      11/11          bool std::operator!=<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&) [393]
                0.00    0.00       7/7           std::move_iterator<Solution::MobileNode*>::operator*() const [501]
                0.00    0.00       7/62          Solution::MobileNode* std::__addressof<Solution::MobileNode>(Solution::MobileNode&) [206]
                0.00    0.00       7/7           void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&) [517]
                0.00    0.00       7/7           std::move_iterator<Solution::MobileNode*>::operator++() [510]
-----------------------------------------------
                0.00    0.00       4/4           Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [697]
[672]    0.0    0.00    0.00       4         Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
                0.00    0.00      11/11          bool std::operator!=<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&) [394]
                0.00    0.00       7/7           std::move_iterator<Move**>::operator*() const [502]
                0.00    0.00       7/87          Move** std::__addressof<Move*>(Move*&) [177]
                0.00    0.00       7/7           _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_ [518]
                0.00    0.00       7/7           std::move_iterator<Move**>::operator++() [511]
-----------------------------------------------
                0.00    0.00       4/4           double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [698]
[673]    0.0    0.00    0.00       4         double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
                0.00    0.00       5/5           bool std::operator!=<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&) [620]
                0.00    0.00       1/1           std::move_iterator<double*>::operator*() const [1106]
                0.00    0.00       1/1           double* std::__addressof<double>(double&) [1382]
                0.00    0.00       1/1           void std::_Construct<double, double>(double*, double&&) [1376]
                0.00    0.00       1/1           std::move_iterator<double*>::operator++() [1203]
-----------------------------------------------
                0.00    0.00       4/4           unsigned int* std::uninitialized_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [699]
[674]    0.0    0.00    0.00       4         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
                0.00    0.00      11/11          bool std::operator!=<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&) [395]
                0.00    0.00       7/7           std::move_iterator<unsigned int*>::operator*() const [503]
                0.00    0.00       7/7           void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [519]
                0.00    0.00       7/351         unsigned int* std::__addressof<unsigned int>(unsigned int&) [151]
                0.00    0.00       7/7           std::move_iterator<unsigned int*>::operator++() [512]
-----------------------------------------------
                0.00    0.00       4/4           Problem::Problem(char const*) [61]
[675]    0.0    0.00    0.00       4         std::vector<Depot, std::allocator<Depot> >::operator[](unsigned long) [675]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&) [612]
[676]    0.0    0.00    0.00       4         void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
                0.00    0.00       8/31          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() [260]
                0.00    0.00       4/4           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [643]
                0.00    0.00       4/15          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long) [329]
                0.00    0.00       4/24          Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&) [272]
                0.00    0.00       4/31          std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const [259]
                0.00    0.00       4/5           decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [602]
                0.00    0.00       4/4           Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [707]
                0.00    0.00       4/16          void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [324]
                0.00    0.00       4/16          std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long) [319]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&) [194]
[677]    0.0    0.00    0.00       4         void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
                0.00    0.00       8/39          std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [245]
                0.00    0.00       4/4           std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [645]
                0.00    0.00       4/14          std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long) [338]
                0.00    0.00       4/331         Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&) [154]
                0.00    0.00       4/42499       std::vector<Move*, std::allocator<Move*> >::size() const [98]
                0.00    0.00       4/80          _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [191]
                0.00    0.00       4/4           Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&) [708]
                0.00    0.00       4/25          void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&) [270]
                0.00    0.00       4/15          std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long) [330]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&) [197]
[678]    0.0    0.00    0.00       4         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
                0.00    0.00       8/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00       4/4           std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [648]
                0.00    0.00       4/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [223]
                0.00    0.00       4/331         unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&) [155]
                0.00    0.00       4/60          std::vector<unsigned int, std::allocator<unsigned int> >::size() const [207]
                0.00    0.00       4/80          decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [193]
                0.00    0.00       4/4           unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&) [710]
                0.00    0.00       4/58          void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&) [210]
                0.00    0.00       4/48          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long) [220]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>) [1205]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>) [1207]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [906]
[679]    0.0    0.00    0.00       4         main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() [679]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>) [1209]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>) [1211]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [907]
[680]    0.0    0.00    0.00       4         main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() [680]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>) [1213]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>) [1215]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [908]
[681]    0.0    0.00    0.00       4         main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() [681]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>) [1217]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>) [1219]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [909]
[682]    0.0    0.00    0.00       4         main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() [682]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>) [1221]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>) [1223]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [910]
[683]    0.0    0.00    0.00       4         main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() [683]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>) [1225]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>) [1227]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [911]
[684]    0.0    0.00    0.00       4         main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() [684]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>) [1229]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>) [1231]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [912]
[685]    0.0    0.00    0.00       4         main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() [685]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>) [1233]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>) [1235]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [913]
[686]    0.0    0.00    0.00       4         main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() [686]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>) [1237]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>) [1239]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [915]
[687]    0.0    0.00    0.00       4         main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() [687]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>) [1241]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>) [1243]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [916]
[688]    0.0    0.00    0.00       4         main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() [688]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>) [1245]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>) [1247]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [917]
[689]    0.0    0.00    0.00       4         main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() [689]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>) [1249]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>) [1251]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [918]
[690]    0.0    0.00    0.00       4         main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() [690]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>) [1253]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>) [1255]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [919]
[691]    0.0    0.00    0.00       4         main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() [691]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>) [1257]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>) [1259]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [920]
[692]    0.0    0.00    0.00       4         main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() [692]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>) [1261]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>) [1263]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [921]
[693]    0.0    0.00    0.00       4         main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() [693]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>) [1265]
                0.00    0.00       1/4           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>) [1267]
                0.00    0.00       2/4           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [922]
[694]    0.0    0.00    0.00       4         main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [694]
                0.00    0.00       4/64          std::_Any_data::_M_access() [205]
-----------------------------------------------
                0.00    0.00       2/4           void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1302]
                0.00    0.00       2/4           void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [883]
[695]    0.0    0.00    0.00       4         std::vector<double, std::allocator<double> >* std::__addressof<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >&) [695]
-----------------------------------------------
                0.00    0.00       4/4           Solution::MobileNode* std::__uninitialized_copy_a<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, Solution::MobileNode>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [700]
[696]    0.0    0.00    0.00       4         Solution::MobileNode* std::uninitialized_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [696]
                0.00    0.00       4/4           Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [671]
-----------------------------------------------
                0.00    0.00       4/4           Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&) [701]
[697]    0.0    0.00    0.00       4         Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [697]
                0.00    0.00       4/4           Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [672]
-----------------------------------------------
                0.00    0.00       4/4           double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [702]
[698]    0.0    0.00    0.00       4         double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [698]
                0.00    0.00       4/4           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
-----------------------------------------------
                0.00    0.00       4/4           unsigned int* std::__uninitialized_copy_a<std::move_iterator<unsigned int*>, unsigned int*, unsigned int>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*, std::allocator<unsigned int>&) [703]
[699]    0.0    0.00    0.00       4         unsigned int* std::uninitialized_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [699]
                0.00    0.00       4/4           unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [674]
-----------------------------------------------
                0.00    0.00       4/4           Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [707]
[700]    0.0    0.00    0.00       4         Solution::MobileNode* std::__uninitialized_copy_a<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, Solution::MobileNode>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [700]
                0.00    0.00       4/4           Solution::MobileNode* std::uninitialized_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*) [696]
-----------------------------------------------
                0.00    0.00       4/4           Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&) [708]
[701]    0.0    0.00    0.00       4         Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&) [701]
                0.00    0.00       4/4           Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**) [697]
-----------------------------------------------
                0.00    0.00       4/4           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [709]
[702]    0.0    0.00    0.00       4         double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [702]
                0.00    0.00       4/4           double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [698]
-----------------------------------------------
                0.00    0.00       4/4           unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&) [710]
[703]    0.0    0.00    0.00       4         unsigned int* std::__uninitialized_copy_a<std::move_iterator<unsigned int*>, unsigned int*, unsigned int>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*, std::allocator<unsigned int>&) [703]
                0.00    0.00       4/4           unsigned int* std::uninitialized_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*) [699]
-----------------------------------------------
                0.00    0.00       4/4           Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&) [994]
[704]    0.0    0.00    0.00       4         std::move_iterator<Location*> std::__make_move_if_noexcept_iterator<Location*, std::move_iterator<Location*> >(Location*) [704]
                0.00    0.00       4/4           std::move_iterator<Location*>::move_iterator(Location*) [656]
-----------------------------------------------
                0.00    0.00       4/4           Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [995]
[705]    0.0    0.00    0.00       4         std::move_iterator<Solution::InterceptorNode*> std::__make_move_if_noexcept_iterator<Solution::InterceptorNode*, std::move_iterator<Solution::InterceptorNode*> >(Solution::InterceptorNode*) [705]
                0.00    0.00       4/4           std::move_iterator<Solution::InterceptorNode*>::move_iterator(Solution::InterceptorNode*) [657]
-----------------------------------------------
                0.00    0.00       4/4           Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [996]
[706]    0.0    0.00    0.00       4         std::move_iterator<Interceptor const**> std::__make_move_if_noexcept_iterator<Interceptor const**, std::move_iterator<Interceptor const**> >(Interceptor const**) [706]
                0.00    0.00       4/4           std::move_iterator<Interceptor const**>::move_iterator(Interceptor const**) [658]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&) [676]
[707]    0.0    0.00    0.00       4         Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [707]
                0.00    0.00       8/8           std::move_iterator<Solution::MobileNode*> std::__make_move_if_noexcept_iterator<Solution::MobileNode*, std::move_iterator<Solution::MobileNode*> >(Solution::MobileNode*) [488]
                0.00    0.00       4/4           Solution::MobileNode* std::__uninitialized_copy_a<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, Solution::MobileNode>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, std::allocator<Solution::MobileNode>&) [700]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&) [677]
[708]    0.0    0.00    0.00       4         Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&) [708]
                0.00    0.00       8/8           std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**) [489]
                0.00    0.00       4/4           Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&) [701]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       2/4           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
[709]    0.0    0.00    0.00       4         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [709]
                0.00    0.00       8/8           std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double*> >(double*) [490]
                0.00    0.00       4/4           double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [702]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&) [678]
[710]    0.0    0.00    0.00       4         unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&) [710]
                0.00    0.00       8/8           std::move_iterator<unsigned int*> std::__make_move_if_noexcept_iterator<unsigned int*, std::move_iterator<unsigned int*> >(unsigned int*) [491]
                0.00    0.00       4/4           unsigned int* std::__uninitialized_copy_a<std::move_iterator<unsigned int*>, unsigned int*, unsigned int>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*, std::allocator<unsigned int>&) [703]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [712]
[711]    0.0    0.00    0.00       4         void std::_Destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [711]
                0.00    0.00       4/4           void std::_Destroy_aux<true>::__destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [652]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector() [963]
                0.00    0.00       2/4           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[712]    0.0    0.00    0.00       4         void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [712]
                0.00    0.00       4/4           void std::_Destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [711]
-----------------------------------------------
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&) [669]
[713]    0.0    0.00    0.00       4         main::{lambda()#14}::operator()() const [713]
                0.00    0.00       4/4           MoveSwap2Routes<FirstAvailablePolicy>::MoveSwap2Routes() [627]
-----------------------------------------------
                0.00    0.00       4/4           std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&) [670]
[714]    0.0    0.00    0.00       4         main::{lambda()#8}::operator()() const [714]
                0.00    0.00       4/4           Move2Opt<BestAvailablePolicy>::Move2Opt() [630]
-----------------------------------------------
                0.00    0.00       3/3           main::{lambda()#9}::operator()() const [821]
[715]    0.0    0.00    0.00       3         MoveInsert<FirstAvailablePolicy>::MoveInsert() [715]
                0.00    0.00       3/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       3/3           main [1]
[716]    0.0    0.00    0.00       3         MoveInsert<FirstAvailablePolicy>::~MoveInsert() [716]
                0.00    0.00       3/3           MoveInsert<FirstAvailablePolicy>::~MoveInsert() [717]
-----------------------------------------------
                0.00    0.00       3/3           MoveInsert<FirstAvailablePolicy>::~MoveInsert() [716]
[717]    0.0    0.00    0.00       3         MoveInsert<FirstAvailablePolicy>::~MoveInsert() [717]
                0.00    0.00       3/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       3/3           main::{lambda()#11}::operator()() const [822]
[718]    0.0    0.00    0.00       3         MoveMove1Route<FirstAvailablePolicy>::MoveMove1Route() [718]
                0.00    0.00       3/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       3/3           main [1]
[719]    0.0    0.00    0.00       3         MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [719]
                0.00    0.00       3/3           MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [720]
-----------------------------------------------
                0.00    0.00       3/3           MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [719]
[720]    0.0    0.00    0.00       3         MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [720]
                0.00    0.00       3/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::string> >::deallocate(std::allocator<std::string>&, std::string*, unsigned long) [777]
[721]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long) [721]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::string> >::allocate(std::allocator<std::string>&, unsigned long) [778]
[722]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*) [722]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::max_size() const [731]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<std::string>::allocator(std::allocator<std::string> const&) [736]
[723]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::string>::new_allocator(__gnu_cxx::new_allocator<std::string> const&) [723]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<std::string>::allocator() [737]
[724]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::string>::new_allocator() [724]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<double>::allocator() [738]
[725]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<double>::new_allocator() [725]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<double>::~allocator() [739]
[726]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<double>::~new_allocator() [726]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<char const*, std::allocator<char const*> >::begin() [1333]
                0.00    0.00       2/3           std::vector<char const*, std::allocator<char const*> >::end() [964]
[727]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&) [727]
-----------------------------------------------
                0.00    0.00       3/3           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[728]    0.0    0.00    0.00       3         bool __gnu_cxx::operator!=<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&) [728]
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::base() const [536]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<Problem*>::allocate(unsigned long, void const*) [1072]
                0.00    0.00       2/3           unsigned long std::allocator_traits<std::allocator<Problem*> >::_S_max_size<std::allocator<Problem*> const, void>(std::allocator<Problem*> const&, int) [933]
[729]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<Problem*>::max_size() const [729]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<Solution*>::allocate(unsigned long, void const*) [1077]
                0.00    0.00       2/3           unsigned long std::allocator_traits<std::allocator<Solution*> >::_S_max_size<std::allocator<Solution*> const, void>(std::allocator<Solution*> const&, int) [935]
[730]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<Solution*>::max_size() const [730]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*) [722]
[731]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::string>::max_size() const [731]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::allocate(unsigned long, void const*) [1088]
                0.00    0.00       2/3           unsigned long std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::_S_max_size<std::allocator<std::vector<double, std::allocator<double> > > const, void>(std::allocator<std::vector<double, std::allocator<double> > > const&, int) [941]
[732]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::max_size() const [732]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
[733]    0.0    0.00    0.00       3         std::initializer_list<std::string>::end() const [733]
                0.00    0.00       3/6           std::initializer_list<std::string>::begin() const [539]
                0.00    0.00       3/3           std::initializer_list<std::string>::size() const [734]
-----------------------------------------------
                0.00    0.00       3/3           std::initializer_list<std::string>::end() const [733]
[734]    0.0    0.00    0.00       3         std::initializer_list<std::string>::size() const [734]
-----------------------------------------------
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>) [1235]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&) [914]
[735]    0.0    0.00    0.00       3         main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const [735]
                0.00    0.00       3/96          std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl(std::allocator<std::string> const&) [750]
[736]    0.0    0.00    0.00       3         std::allocator<std::string>::allocator(std::allocator<std::string> const&) [736]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::new_allocator(__gnu_cxx::new_allocator<std::string> const&) [723]
-----------------------------------------------
                0.00    0.00       1/3           __static_initialization_and_destruction_0(int, int) [1042]
                0.00    0.00       2/3           __static_initialization_and_destruction_0(int, int) [1043]
[737]    0.0    0.00    0.00       3         std::allocator<std::string>::allocator() [737]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::new_allocator() [724]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [755]
[738]    0.0    0.00    0.00       3         std::allocator<double>::allocator() [738]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<double>::new_allocator() [725]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [756]
[739]    0.0    0.00    0.00       3         std::allocator<double>::~allocator() [739]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<double>::~new_allocator() [726]
-----------------------------------------------
                0.00    0.00       3/3           unsigned int* std::__copy_move_a<true, unsigned int*, unsigned int*>(unsigned int*, unsigned int*, unsigned int*) [788]
[740]    0.0    0.00    0.00       3         unsigned int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned int>(unsigned int const*, unsigned int const*, unsigned int*) [740]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<std::string*>(std::string*, std::string*) [813]
[741]    0.0    0.00    0.00       3         void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*) [741]
                0.00    0.00       3/6           std::string* std::__addressof<std::string>(std::string&) [556]
                0.00    0.00       3/3           void std::_Destroy<std::string>(std::string*) [815]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<Location*>(Location*, Location*) [811]
[742]    0.0    0.00    0.00       3         void std::_Destroy_aux<true>::__destroy<Location*>(Location*, Location*) [742]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Interceptor, std::allocator<Interceptor> >::~vector() [1306]
                0.00    0.00       1/3           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
                0.00    0.00       1/3           Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>) [1304]
[743]    0.0    0.00    0.00       3         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() [743]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Depot, std::allocator<Depot> >::~vector() [1310]
                0.00    0.00       1/3           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
                0.00    0.00       1/3           Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*) [1307]
[744]    0.0    0.00    0.00       3         std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() [744]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Mobile, std::allocator<Mobile> >::~vector() [1314]
                0.00    0.00       1/3           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
                0.00    0.00       1/3           Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>) [1311]
[745]    0.0    0.00    0.00       3         std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() [745]
-----------------------------------------------
                0.00    0.00       1/3           std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base() [1165]
                0.00    0.00       2/3           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[746]    0.0    0.00    0.00       3         std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long) [746]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Location> >::deallocate(std::allocator<Location>&, Location*, unsigned long) [927]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Problem*, std::allocator<Problem*> >::~vector() [1325]
                0.00    0.00       2/3           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[747]    0.0    0.00    0.00       3         std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() [747]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Solution*, std::allocator<Solution*> >::~vector() [1330]
                0.00    0.00       2/3           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[748]    0.0    0.00    0.00       3         std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() [748]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
[749]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long) [749]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::string> >::allocate(std::allocator<std::string>&, unsigned long) [778]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base(std::allocator<std::string> const&) [753]
[750]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl(std::allocator<std::string> const&) [750]
                0.00    0.00       3/3           std::allocator<std::string>::allocator(std::allocator<std::string> const&) [736]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base() [754]
[751]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl() [751]
                0.00    0.00       3/6           std::allocator<std::string>::~allocator() [548]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base() [754]
[752]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long) [752]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::string> >::deallocate(std::allocator<std::string>&, std::string*, unsigned long) [777]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
[753]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base(std::allocator<std::string> const&) [753]
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl(std::allocator<std::string> const&) [750]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::~vector() [1739]
[754]    0.0    0.00    0.00       3         std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base() [754]
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl() [751]
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long) [752]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_base() [757]
[755]    0.0    0.00    0.00       3         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [755]
                0.00    0.00       3/3           std::allocator<double>::allocator() [738]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [758]
[756]    0.0    0.00    0.00       3         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [756]
                0.00    0.00       3/3           std::allocator<double>::~allocator() [739]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<double, std::allocator<double> >::vector() [784]
[757]    0.0    0.00    0.00       3         std::_Vector_base<double, std::allocator<double> >::_Vector_base() [757]
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [755]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<double, std::allocator<double> >::~vector() [785]
[758]    0.0    0.00    0.00       3         std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [758]
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [756]
                0.00    0.00       3/7           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [509]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[759]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) [759]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [906]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>) [1207]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[760]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) [760]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [907]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>) [1211]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[761]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) [761]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [908]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>) [1215]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[762]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) [762]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [909]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>) [1219]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[763]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) [763]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [910]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>) [1223]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[764]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) [764]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [911]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>) [1227]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[765]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) [765]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [912]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>) [1231]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[766]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) [766]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [913]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>) [1235]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[767]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) [767]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [915]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>) [1239]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[768]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) [768]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [916]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>) [1243]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[769]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) [769]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [917]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>) [1247]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[770]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) [770]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [918]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>) [1251]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[771]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) [771]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [919]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>) [1255]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&) [779]
[772]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&) [772]
                0.00    0.00       3/4           main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const [649]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[773]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) [773]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [920]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>) [1259]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[774]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) [774]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [921]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>) [1263]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&) [780]
[775]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&) [775]
                0.00    0.00       3/4           main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const [650]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function(std::function<Move* ()> const&) [320]
                0.00    0.00       2/3           std::_Function_base::~_Function_base() [255]
[776]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) [776]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [922]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>) [1267]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long) [752]
[777]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::string> >::deallocate(std::allocator<std::string>&, std::string*, unsigned long) [777]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long) [721]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long) [749]
[778]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::string> >::allocate(std::allocator<std::string>&, unsigned long) [778]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*) [722]
-----------------------------------------------
                0.00    0.00       3/3           std::function<Move* ()>::operator()() const [189]
[779]    0.0    0.00    0.00       3         std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&) [779]
                0.00    0.00       3/3           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&) [772]
                0.00    0.00       3/3           main::{lambda()#9}::operator()() const [821]
-----------------------------------------------
                0.00    0.00       3/3           std::function<Move* ()>::operator()() const [189]
[780]    0.0    0.00    0.00       3         std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&) [780]
                0.00    0.00       3/3           main::{lambda()#11}::operator()() const [822]
                0.00    0.00       3/3           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&) [775]
-----------------------------------------------
                0.00    0.00       3/3           std::string* std::uninitialized_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [790]
[781]    0.0    0.00    0.00       3         std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [781]
                0.00    0.00       3/6           std::string* std::__addressof<std::string>(std::string&) [556]
                0.00    0.00       3/3           _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_ [786]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
[782]    0.0    0.00    0.00       3         void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
                0.00    0.00       3/3           std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*) [816]
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long) [749]
                0.00    0.00       3/6           std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator() [551]
                0.00    0.00       3/3           std::string* std::__uninitialized_copy_a<std::string const*, std::string*, std::string>(std::string const*, std::string const*, std::string*, std::allocator<std::string>&) [792]
-----------------------------------------------
                0.00    0.00       1/3           __static_initialization_and_destruction_0(int, int) [1042]
                0.00    0.00       2/3           __static_initialization_and_destruction_0(int, int) [1043]
[783]    0.0    0.00    0.00       3         std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
                0.00    0.00       3/3           std::initializer_list<std::string>::end() const [733]
                0.00    0.00       3/3           std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base(std::allocator<std::string> const&) [753]
                0.00    0.00       3/6           std::initializer_list<std::string>::begin() const [539]
                0.00    0.00       3/3           void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
-----------------------------------------------
                0.00    0.00       1/3           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       2/3           void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*) [971]
[784]    0.0    0.00    0.00       3         std::vector<double, std::allocator<double> >::vector() [784]
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::_Vector_base() [757]
-----------------------------------------------
                0.00    0.00       1/3           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       2/3           void std::_Destroy<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*) [1013]
[785]    0.0    0.00    0.00       3         std::vector<double, std::allocator<double> >::~vector() [785]
                0.00    0.00       3/13          std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [346]
                0.00    0.00       3/7           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [523]
                0.00    0.00       3/3           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [758]
-----------------------------------------------
                0.00    0.00       3/3           std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [781]
[786]    0.0    0.00    0.00       3         _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_ [786]
                0.00    0.00       3/3           std::string const& std::forward<std::string const&>(std::remove_reference<std::string const&>::type&) [810]
                0.00    0.00       3/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       3/3           std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*) [816]
[787]    0.0    0.00    0.00       3         std::iterator_traits<std::string const*>::difference_type std::__distance<std::string const*>(std::string const*, std::string const*, std::random_access_iterator_tag) [787]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [789]
[788]    0.0    0.00    0.00       3         unsigned int* std::__copy_move_a<true, unsigned int*, unsigned int*>(unsigned int*, unsigned int*, unsigned int*) [788]
                0.00    0.00       3/3           unsigned int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned int>(unsigned int const*, unsigned int const*, unsigned int*) [740]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [793]
[789]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [789]
                0.00    0.00       9/9           std::_Niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [463]
                0.00    0.00       3/3           unsigned int* std::__copy_move_a<true, unsigned int*, unsigned int*>(unsigned int*, unsigned int*, unsigned int*) [788]
                0.00    0.00       3/456         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [147]
-----------------------------------------------
                0.00    0.00       3/3           std::string* std::__uninitialized_copy_a<std::string const*, std::string*, std::string>(std::string const*, std::string const*, std::string*, std::allocator<std::string>&) [792]
[790]    0.0    0.00    0.00       3         std::string* std::uninitialized_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [790]
                0.00    0.00       3/3           std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [781]
-----------------------------------------------
                0.00    0.00       3/3           std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*) [816]
[791]    0.0    0.00    0.00       3         std::iterator_traits<std::string const*>::iterator_category std::__iterator_category<std::string const*>(std::string const* const&) [791]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
[792]    0.0    0.00    0.00       3         std::string* std::__uninitialized_copy_a<std::string const*, std::string*, std::string>(std::string const*, std::string const*, std::string*, std::allocator<std::string>&) [792]
                0.00    0.00       3/3           std::string* std::uninitialized_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*) [790]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [614]
[793]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [793]
                0.00    0.00       6/6           std::_Miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [557]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [789]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&) [1204]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>) [1205]
[794]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [794]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&) [1208]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>) [1209]
[795]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&) [795]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&) [1212]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>) [1213]
[796]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&) [796]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&) [1216]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>) [1217]
[797]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&) [797]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&) [1220]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>) [1221]
[798]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&) [798]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&) [1224]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>) [1225]
[799]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&) [799]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&) [1228]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>) [1229]
[800]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&) [800]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&) [1232]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>) [1233]
[801]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [801]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&) [1236]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>) [1237]
[802]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [802]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&) [1240]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>) [1241]
[803]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&) [803]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&) [1244]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>) [1245]
[804]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&) [804]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&) [1248]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>) [1249]
[805]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&) [805]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&) [1252]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>) [1253]
[806]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&) [806]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&) [1256]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>) [1257]
[807]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&) [807]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&) [1260]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>) [1261]
[808]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&) [808]
-----------------------------------------------
                0.00    0.00       1/3           std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [1264]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>) [1265]
[809]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [809]
-----------------------------------------------
                0.00    0.00       3/3           _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_ [786]
[810]    0.0    0.00    0.00       3         std::string const& std::forward<std::string const&>(std::remove_reference<std::string const&>::type&) [810]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&) [812]
[811]    0.0    0.00    0.00       3         void std::_Destroy<Location*>(Location*, Location*) [811]
                0.00    0.00       3/3           void std::_Destroy_aux<true>::__destroy<Location*>(Location*, Location*) [742]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<Location, std::allocator<Location> >::~vector() [1316]
                0.00    0.00       2/3           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[812]    0.0    0.00    0.00       3         void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&) [812]
                0.00    0.00       3/3           void std::_Destroy<Location*>(Location*, Location*) [811]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>&) [814]
[813]    0.0    0.00    0.00       3         void std::_Destroy<std::string*>(std::string*, std::string*) [813]
                0.00    0.00       3/3           void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*) [741]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::~vector() [1739]
[814]    0.0    0.00    0.00       3         void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>&) [814]
                0.00    0.00       3/3           void std::_Destroy<std::string*>(std::string*, std::string*) [813]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*) [741]
[815]    0.0    0.00    0.00       3         void std::_Destroy<std::string>(std::string*) [815]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag) [782]
[816]    0.0    0.00    0.00       3         std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*) [816]
                0.00    0.00       3/3           std::iterator_traits<std::string const*>::iterator_category std::__iterator_category<std::string const*>(std::string const* const&) [791]
                0.00    0.00       3/3           std::iterator_traits<std::string const*>::difference_type std::__distance<std::string const*>(std::string const*, std::string const*, std::random_access_iterator_tag) [787]
-----------------------------------------------
                0.00    0.00       3/3           bool std::operator!=<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [819]
[817]    0.0    0.00    0.00       3         bool std::operator==<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [817]
                0.00    0.00       6/6           std::move_iterator<Location*>::base() const [537]
-----------------------------------------------
                0.00    0.00       3/3           bool std::operator!=<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [820]
[818]    0.0    0.00    0.00       3         bool std::operator==<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [818]
                0.00    0.00       6/6           std::move_iterator<Solution::InterceptorNode*>::base() const [538]
-----------------------------------------------
                0.00    0.00       3/3           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
[819]    0.0    0.00    0.00       3         bool std::operator!=<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [819]
                0.00    0.00       3/3           bool std::operator==<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [817]
-----------------------------------------------
                0.00    0.00       3/3           Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
[820]    0.0    0.00    0.00       3         bool std::operator!=<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [820]
                0.00    0.00       3/3           bool std::operator==<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [818]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&) [779]
[821]    0.0    0.00    0.00       3         main::{lambda()#9}::operator()() const [821]
                0.00    0.00       3/3           MoveInsert<FirstAvailablePolicy>::MoveInsert() [715]
-----------------------------------------------
                0.00    0.00       3/3           std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&) [780]
[822]    0.0    0.00    0.00       3         main::{lambda()#11}::operator()() const [822]
                0.00    0.00       3/3           MoveMove1Route<FirstAvailablePolicy>::MoveMove1Route() [718]
-----------------------------------------------
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
[823]    0.0    0.00    0.00       2         Interceptor::Interceptor(Depot const&, double, unsigned int, double) [823]
                0.00    0.00       2/687544      Depot::position() const [76]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Interceptor>(Interceptor*) [999]
[824]    0.0    0.00    0.00       2         Interceptor::~Interceptor() [824]
-----------------------------------------------
                0.00    0.00       2/2           main::{lambda()#4}::operator()() const [1017]
[825]    0.0    0.00    0.00       2         MoveMove2Routes<BestAvailablePolicy>::MoveMove2Routes() [825]
                0.00    0.00       2/80          Move::Move() [181]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[826]    0.0    0.00    0.00       2         MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [826]
                0.00    0.00       2/2           MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [827]
-----------------------------------------------
                0.00    0.00       2/2           MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [826]
[827]    0.0    0.00    0.00       2         MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [827]
                0.00    0.00       2/80          Move::~Move() [182]
-----------------------------------------------
                0.00    0.00       2/2           Problem::Problem(char const*) [61]
[828]    0.0    0.00    0.00       2         Depot::addInterceptor(Interceptor const&) [828]
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&) [961]
-----------------------------------------------
                0.00    0.00       2/2           _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
[829]    0.0    0.00    0.00       2         Depot::Depot(double, double, unsigned int) [829]
                0.00    0.00       2/2973506     Location::Location(double, double) [70]
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::vector() [962]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Depot>(Depot*) [1000]
[830]    0.0    0.00    0.00       2         Depot::~Depot() [830]
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector() [963]
-----------------------------------------------
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [837]
[831]    0.0    0.00    0.00       2         Solution::InterceptorNode::InterceptorNode(Interceptor const&) [831]
-----------------------------------------------
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
[832]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/8           Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&) [492]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
                0.00    0.00       2/2           Interceptor::Interceptor(Depot const&, double, unsigned int, double) [823]
-----------------------------------------------
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [925]
[833]    0.0    0.00    0.00       2         _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
                0.00    0.00       2/2           Depot::Depot(double, double, unsigned int) [829]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Location> >::deallocate(std::allocator<Location>&, Location*, unsigned long) [927]
[834]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Location>::deallocate(Location*, unsigned long) [834]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Location> >::allocate(std::allocator<Location>&, unsigned long) [929]
[835]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Location>::allocate(unsigned long, void const*) [835]
                0.00    0.00       2/6           __gnu_cxx::new_allocator<Location>::max_size() const [534]
-----------------------------------------------
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&) [928]
[836]    0.0    0.00    0.00       2         _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_ [836]
                0.00    0.00       2/8           Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&) [493]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [931]
[837]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [837]
                0.00    0.00       2/10          Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
                0.00    0.00       2/2           Solution::InterceptorNode::InterceptorNode(Interceptor const&) [831]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Interceptor const*> >::deallocate(std::allocator<Interceptor const*>&, Interceptor const**, unsigned long) [937]
[838]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Interceptor const*>::deallocate(Interceptor const**, unsigned long) [838]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Interceptor const*> >::allocate(std::allocator<Interceptor const*>&, unsigned long) [939]
[839]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Interceptor const*>::allocate(unsigned long, void const*) [839]
                0.00    0.00       2/6           __gnu_cxx::new_allocator<Interceptor const*>::max_size() const [535]
-----------------------------------------------
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_ [938]
[840]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&) [840]
                0.00    0.00       2/10          Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Interceptor const*>::allocator() [875]
[841]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Interceptor const*>::new_allocator() [841]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Interceptor const*>::~allocator() [876]
[842]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Interceptor const*>::~new_allocator() [842]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<char const*>::~allocator() [877]
[843]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<char const*>::~new_allocator() [843]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::function<Move* ()> >::~allocator() [878]
[844]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::function<Move* ()> >::~new_allocator() [844]
-----------------------------------------------
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&) [943]
[845]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [845]
                0.00    0.00       2/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Problem*, std::allocator<Problem*> >::end() [1322]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator-(long) const [1099]
[846]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::__normal_iterator(Problem** const&) [846]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::begin() [1338]
                0.00    0.00       1/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::end() [1337]
[847]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::__normal_iterator(std::vector<double, std::allocator<double> >* const&) [847]
-----------------------------------------------
                0.00    0.00       2/2           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[848]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator++() [848]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[849]    0.0    0.00    0.00       2         bool __gnu_cxx::operator!=<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&) [849]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::base() const [637]
-----------------------------------------------
                0.00    0.00       1/2           unsigned long std::allocator_traits<std::allocator<Interceptor> >::_S_max_size<std::allocator<Interceptor> const, void>(std::allocator<Interceptor> const&, int) [1269]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Interceptor>::allocate(unsigned long, void const*) [1055]
[850]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Interceptor>::max_size() const [850]
-----------------------------------------------
                0.00    0.00       1/2           unsigned long std::allocator_traits<std::allocator<Depot> >::_S_max_size<std::allocator<Depot> const, void>(std::allocator<Depot> const&, int) [1273]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Depot>::allocate(unsigned long, void const*) [1059]
[851]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Depot>::max_size() const [851]
-----------------------------------------------
                0.00    0.00       1/2           unsigned long std::allocator_traits<std::allocator<Mobile> >::_S_max_size<std::allocator<Mobile> const, void>(std::allocator<Mobile> const&, int) [1277]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Mobile>::allocate(unsigned long, void const*) [1063]
[852]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Mobile>::max_size() const [852]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::back() [953]
[853]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [853]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::back() [953]
[854]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator-(long) const [854]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor* const&) [636]
-----------------------------------------------
                0.00    0.00       2/2           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[855]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator*() const [855]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Problem*, std::allocator<Problem*> >::max_size() const [871]
[856]    0.0    0.00    0.00       2         std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() const [856]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Solution*, std::allocator<Solution*> >::max_size() const [872]
[857]    0.0    0.00    0.00       2         std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() const [857]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const [874]
[858]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() const [858]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator==<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1423]
[859]    0.0    0.00    0.00       2         std::move_iterator<Interceptor*>::base() const [859]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator==<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1424]
[860]    0.0    0.00    0.00       2         std::move_iterator<Mobile*>::base() const [860]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator==<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1425]
[861]    0.0    0.00    0.00       2         std::move_iterator<Problem**>::base() const [861]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator==<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1426]
[862]    0.0    0.00    0.00       2         std::move_iterator<Solution**>::base() const [862]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator==<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1427]
[863]    0.0    0.00    0.00       2         std::move_iterator<std::vector<double, std::allocator<double> >*>::base() const [863]
-----------------------------------------------
                0.00    0.00       1/2           std::initializer_list<char const*>::end() const [1107]
                0.00    0.00       1/2           std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
[864]    0.0    0.00    0.00       2         std::initializer_list<char const*>::begin() const [864]
-----------------------------------------------
                0.00    0.00       1/2           std::initializer_list<std::function<Move* ()> >::end() const [1109]
                0.00    0.00       1/2           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
[865]    0.0    0.00    0.00       2         std::initializer_list<std::function<Move* ()> >::begin() const [865]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
[866]    0.0    0.00    0.00       2         std::initializer_list<unsigned int>::end() const [866]
                0.00    0.00       2/4           std::initializer_list<unsigned int>::begin() const [641]
                0.00    0.00       2/2           std::initializer_list<unsigned int>::size() const [867]
-----------------------------------------------
                0.00    0.00       2/2           std::initializer_list<unsigned int>::end() const [866]
[867]    0.0    0.00    0.00       2         std::initializer_list<unsigned int>::size() const [867]
-----------------------------------------------
                0.00    0.00       1/2           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
                0.00    0.00       1/2           Solution::Solution(Problem const&) [1050]
[868]    0.0    0.00    0.00       2         std::vector<Interceptor, std::allocator<Interceptor> >::begin() const [868]
                0.00    0.00       2/52168       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [93]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[869]    0.0    0.00    0.00       2         std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [869]
                0.00    0.00       8/10          std::vector<Location, std::allocator<Location> >::size() const [411]
                0.00    0.00       4/4           std::vector<Location, std::allocator<Location> >::max_size() const [642]
                0.00    0.00       2/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
[870]    0.0    0.00    0.00       2         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [870]
                0.00    0.00       8/21          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const [298]
                0.00    0.00       4/4           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const [644]
                0.00    0.00       2/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [1118]
[871]    0.0    0.00    0.00       2         std::vector<Problem*, std::allocator<Problem*> >::max_size() const [871]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Problem*> >::max_size(std::allocator<Problem*> const&) [934]
                0.00    0.00       2/2           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() const [856]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [1119]
[872]    0.0    0.00    0.00       2         std::vector<Solution*, std::allocator<Solution*> >::max_size() const [872]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Solution*> >::max_size(std::allocator<Solution*> const&) [936]
                0.00    0.00       2/2           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() const [857]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[873]    0.0    0.00    0.00       2         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [873]
                0.00    0.00       8/10          std::vector<Interceptor const*, std::allocator<Interceptor const*> >::size() const [414]
                0.00    0.00       4/4           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const [646]
                0.00    0.00       2/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [1120]
[874]    0.0    0.00    0.00       2         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const [874]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::max_size(std::allocator<std::vector<double, std::allocator<double> > > const&) [942]
                0.00    0.00       2/2           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() const [858]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::_Vector_impl() [893]
[875]    0.0    0.00    0.00       2         std::allocator<Interceptor const*>::allocator() [875]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Interceptor const*>::new_allocator() [841]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::~_Vector_impl() [894]
[876]    0.0    0.00    0.00       2         std::allocator<Interceptor const*>::~allocator() [876]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Interceptor const*>::~new_allocator() [842]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl() [1184]
[877]    0.0    0.00    0.00       2         std::allocator<char const*>::~allocator() [877]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<char const*>::~new_allocator() [843]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::~_Vector_impl() [1195]
[878]    0.0    0.00    0.00       2         std::allocator<std::function<Move* ()> >::~allocator() [878]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::function<Move* ()> >::~new_allocator() [844]
-----------------------------------------------
                0.00    0.00       2/2           std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*) [976]
[879]    0.0    0.00    0.00       2         std::_Iter_base<double*, false>::_S_base(double*) [879]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Interceptor*>(Interceptor*, Interceptor*) [1001]
[880]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*) [880]
                0.00    0.00       2/2           void std::_Destroy<Interceptor>(Interceptor*) [999]
                0.00    0.00       2/2           Interceptor* std::__addressof<Interceptor>(Interceptor&) [974]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Depot*>(Depot*, Depot*) [1003]
[881]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*) [881]
                0.00    0.00       2/2           void std::_Destroy<Depot>(Depot*) [1000]
                0.00    0.00       2/2           Depot* std::__addressof<Depot>(Depot&) [975]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Mobile*>(Mobile*, Mobile*) [1005]
[882]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*) [882]
                0.00    0.00       5/5           void std::_Destroy<Mobile>(Mobile*) [618]
                0.00    0.00       5/5           Mobile* std::__addressof<Mobile>(Mobile&) [615]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [1011]
[883]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [883]
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >* std::__addressof<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >&) [695]
                0.00    0.00       2/2           void std::_Destroy<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*) [1013]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Problem**>(Problem**, Problem**) [1007]
[884]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<Problem**>(Problem**, Problem**) [884]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Solution**>(Solution**, Solution**) [1009]
[885]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<Solution**>(Solution**, Solution**) [885]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
                0.00    0.00       1/2           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base() [1151]
[886]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long) [886]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::deallocate(std::allocator<Interceptor>&, Interceptor*, unsigned long) [1268]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
                0.00    0.00       1/2           std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base() [1156]
[887]    0.0    0.00    0.00       2         std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long) [887]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::deallocate(std::allocator<Depot>&, Depot*, unsigned long) [1272]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
                0.00    0.00       1/2           std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base() [1161]
[888]    0.0    0.00    0.00       2         std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long) [888]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::deallocate(std::allocator<Mobile>&, Mobile*, unsigned long) [1276]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[889]    0.0    0.00    0.00       2         std::_Vector_base<Location, std::allocator<Location> >::_M_allocate(unsigned long) [889]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Location> >::allocate(std::allocator<Location>&, unsigned long) [929]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base() [1176]
                0.00    0.00       1/2           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[890]    0.0    0.00    0.00       2         std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long) [890]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Problem*> >::deallocate(std::allocator<Problem*>&, Problem**, unsigned long) [1280]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base() [1181]
                0.00    0.00       1/2           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[891]    0.0    0.00    0.00       2         std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long) [891]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Solution*> >::deallocate(std::allocator<Solution*>&, Solution**, unsigned long) [1284]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[892]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_allocate(unsigned long) [892]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Interceptor const*> >::allocate(std::allocator<Interceptor const*>&, unsigned long) [939]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_base() [895]
[893]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::_Vector_impl() [893]
                0.00    0.00       2/2           std::allocator<Interceptor const*>::allocator() [875]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base() [896]
[894]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::~_Vector_impl() [894]
                0.00    0.00       2/2           std::allocator<Interceptor const*>::~allocator() [876]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::vector() [962]
[895]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_base() [895]
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::_Vector_impl() [893]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector() [963]
[896]    0.0    0.00    0.00       2         std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base() [896]
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::~_Vector_impl() [894]
                0.00    0.00       2/4           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long) [653]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<char const*, std::allocator<char const*> >::~vector() [1335]
                0.00    0.00       1/2           void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
[897]    0.0    0.00    0.00       2         std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator() [897]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
                0.00    0.00       1/2           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~_Vector_base() [1192]
[898]    0.0    0.00    0.00       2         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [898]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::deallocate(std::allocator<std::vector<double, std::allocator<double> > >&, std::vector<double, std::allocator<double> >*, unsigned long) [1290]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector() [1343]
                0.00    0.00       1/2           void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
[899]    0.0    0.00    0.00       2         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_get_Tp_allocator() [899]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
[900]    0.0    0.00    0.00       2         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(std::allocator<unsigned int> const&) [900]
                0.00    0.00       2/43          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&) [230]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<Interceptor*> std::__make_move_if_noexcept_iterator<Interceptor*, std::move_iterator<Interceptor*> >(Interceptor*) [988]
[901]    0.0    0.00    0.00       2         std::move_iterator<Interceptor*>::move_iterator(Interceptor*) [901]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<Mobile*> std::__make_move_if_noexcept_iterator<Mobile*, std::move_iterator<Mobile*> >(Mobile*) [990]
[902]    0.0    0.00    0.00       2         std::move_iterator<Mobile*>::move_iterator(Mobile*) [902]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<Problem**> std::__make_move_if_noexcept_iterator<Problem**, std::move_iterator<Problem**> >(Problem**) [991]
[903]    0.0    0.00    0.00       2         std::move_iterator<Problem**>::move_iterator(Problem**) [903]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<Solution**> std::__make_move_if_noexcept_iterator<Solution**, std::move_iterator<Solution**> >(Solution**) [992]
[904]    0.0    0.00    0.00       2         std::move_iterator<Solution**>::move_iterator(Solution**) [904]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<std::vector<double, std::allocator<double> >*> std::__make_move_if_noexcept_iterator<std::vector<double, std::allocator<double> >*, std::move_iterator<std::vector<double, std::allocator<double> >*> >(std::vector<double, std::allocator<double> >*) [993]
[905]    0.0    0.00    0.00       2         std::move_iterator<std::vector<double, std::allocator<double> >*>::move_iterator(std::vector<double, std::allocator<double> >*) [905]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) [759]
[906]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [906]
                0.00    0.00       2/4           main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() [679]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) [760]
[907]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [907]
                0.00    0.00       2/4           main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() [680]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) [761]
[908]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [908]
                0.00    0.00       2/4           main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() [681]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) [762]
[909]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [909]
                0.00    0.00       2/4           main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() [682]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) [763]
[910]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [910]
                0.00    0.00       2/4           main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() [683]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) [764]
[911]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [911]
                0.00    0.00       2/4           main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() [684]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) [765]
[912]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [912]
                0.00    0.00       2/4           main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() [685]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) [766]
[913]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [913]
                0.00    0.00       2/4           main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() [686]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) [945]
[914]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&) [914]
                0.00    0.00       2/3           main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const [735]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) [767]
[915]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [915]
                0.00    0.00       2/4           main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() [687]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) [768]
[916]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [916]
                0.00    0.00       2/4           main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() [688]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) [769]
[917]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [917]
                0.00    0.00       2/4           main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() [689]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) [770]
[918]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [918]
                0.00    0.00       2/4           main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() [690]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) [771]
[919]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [919]
                0.00    0.00       2/4           main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() [691]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) [773]
[920]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [920]
                0.00    0.00       2/4           main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() [692]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) [774]
[921]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [921]
                0.00    0.00       2/4           main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() [693]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) [776]
[922]    0.0    0.00    0.00       2         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [922]
                0.00    0.00       2/4           main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [694]
-----------------------------------------------
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
[923]    0.0    0.00    0.00       2         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/8           Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&) [492]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [832]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
[924]    0.0    0.00    0.00       2         decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/8           Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&) [492]
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [923]
-----------------------------------------------
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [926]
[925]    0.0    0.00    0.00       2         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [925]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/2           _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [833]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&) [954]
[926]    0.0    0.00    0.00       2         _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [926]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [925]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long) [746]
[927]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Location> >::deallocate(std::allocator<Location>&, Location*, unsigned long) [927]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Location>::deallocate(Location*, unsigned long) [834]
-----------------------------------------------
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [930]
[928]    0.0    0.00    0.00       2         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&) [928]
                0.00    0.00       2/8           Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&) [493]
                0.00    0.00       2/2           _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_ [836]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Location, std::allocator<Location> >::_M_allocate(unsigned long) [889]
[929]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Location> >::allocate(std::allocator<Location>&, unsigned long) [929]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Location>::allocate(unsigned long, void const*) [835]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[930]    0.0    0.00    0.00       2         _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [930]
                0.00    0.00       2/8           Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&) [493]
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&) [928]
-----------------------------------------------
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_ [932]
[931]    0.0    0.00    0.00       2         _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [931]
                0.00    0.00       2/10          Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [837]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
[932]    0.0    0.00    0.00       2         _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_ [932]
                0.00    0.00       2/10          Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [931]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Problem*> >::max_size(std::allocator<Problem*> const&) [934]
[933]    0.0    0.00    0.00       2         unsigned long std::allocator_traits<std::allocator<Problem*> >::_S_max_size<std::allocator<Problem*> const, void>(std::allocator<Problem*> const&, int) [933]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<Problem*>::max_size() const [729]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Problem*, std::allocator<Problem*> >::max_size() const [871]
[934]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Problem*> >::max_size(std::allocator<Problem*> const&) [934]
                0.00    0.00       2/2           unsigned long std::allocator_traits<std::allocator<Problem*> >::_S_max_size<std::allocator<Problem*> const, void>(std::allocator<Problem*> const&, int) [933]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Solution*> >::max_size(std::allocator<Solution*> const&) [936]
[935]    0.0    0.00    0.00       2         unsigned long std::allocator_traits<std::allocator<Solution*> >::_S_max_size<std::allocator<Solution*> const, void>(std::allocator<Solution*> const&, int) [935]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<Solution*>::max_size() const [730]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Solution*, std::allocator<Solution*> >::max_size() const [872]
[936]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Solution*> >::max_size(std::allocator<Solution*> const&) [936]
                0.00    0.00       2/2           unsigned long std::allocator_traits<std::allocator<Solution*> >::_S_max_size<std::allocator<Solution*> const, void>(std::allocator<Solution*> const&, int) [935]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long) [653]
[937]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Interceptor const*> >::deallocate(std::allocator<Interceptor const*>&, Interceptor const**, unsigned long) [937]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Interceptor const*>::deallocate(Interceptor const**, unsigned long) [838]
-----------------------------------------------
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&) [940]
[938]    0.0    0.00    0.00       2         _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_ [938]
                0.00    0.00       2/10          Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&) [840]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_allocate(unsigned long) [892]
[939]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Interceptor const*> >::allocate(std::allocator<Interceptor const*>&, unsigned long) [939]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Interceptor const*>::allocate(unsigned long, void const*) [839]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[940]    0.0    0.00    0.00       2         decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&) [940]
                0.00    0.00       2/10          Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_ [938]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::max_size(std::allocator<std::vector<double, std::allocator<double> > > const&) [942]
[941]    0.0    0.00    0.00       2         unsigned long std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::_S_max_size<std::allocator<std::vector<double, std::allocator<double> > > const, void>(std::allocator<std::vector<double, std::allocator<double> > > const&, int) [941]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::max_size() const [732]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const [874]
[942]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::max_size(std::allocator<std::vector<double, std::allocator<double> > > const&) [942]
                0.00    0.00       2/2           unsigned long std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::_S_max_size<std::allocator<std::vector<double, std::allocator<double> > > const, void>(std::allocator<std::vector<double, std::allocator<double> > > const&, int) [941]
-----------------------------------------------
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [944]
[943]    0.0    0.00    0.00       2         std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&) [943]
                0.00    0.00       2/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [845]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
[944]    0.0    0.00    0.00       2         decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [944]
                0.00    0.00       2/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       2/2           std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&) [943]
-----------------------------------------------
                0.00    0.00       2/2           std::function<Move* ()>::operator()() const [189]
[945]    0.0    0.00    0.00       2         std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) [945]
                0.00    0.00       2/2           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&) [914]
                0.00    0.00       2/2           main::{lambda()#4}::operator()() const [1017]
-----------------------------------------------
                0.00    0.00       2/2           unsigned int* std::uninitialized_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [977]
[946]    0.0    0.00    0.00       2         unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [946]
                0.00    0.00      24/351         unsigned int* std::__addressof<unsigned int>(unsigned int&) [151]
                0.00    0.00      24/344         void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&) [152]
-----------------------------------------------
                0.00    0.00       2/2           Location* std::uninitialized_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [978]
[947]    0.0    0.00    0.00       2         Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
                0.00    0.00       3/3           bool std::operator!=<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&) [819]
                0.00    0.00       1/1           std::move_iterator<Location*>::operator*() const [1104]
                0.00    0.00       1/1           _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_ [1373]
                0.00    0.00       1/1           Location* std::__addressof<Location>(Location&) [1380]
                0.00    0.00       1/1           std::move_iterator<Location*>::operator++() [1201]
-----------------------------------------------
                0.00    0.00       2/2           Solution::InterceptorNode* std::uninitialized_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [979]
[948]    0.0    0.00    0.00       2         Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
                0.00    0.00       3/3           bool std::operator!=<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&) [820]
                0.00    0.00       1/1           std::move_iterator<Solution::InterceptorNode*>::operator*() const [1105]
                0.00    0.00       1/23          Solution::InterceptorNode* std::__addressof<Solution::InterceptorNode>(Solution::InterceptorNode&) [279]
                0.00    0.00       1/1           void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&) [1374]
                0.00    0.00       1/1           std::move_iterator<Solution::InterceptorNode*>::operator++() [1202]
-----------------------------------------------
                0.00    0.00       2/2           Interceptor const** std::uninitialized_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [980]
[949]    0.0    0.00    0.00       2         Interceptor const** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [949]
                0.00    0.00       2/2           bool std::operator!=<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1016]
-----------------------------------------------
                0.00    0.00       2/2           void std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [986]
[950]    0.0    0.00    0.00       2         void std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [950]
                0.00    0.00       2/2           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [998]
-----------------------------------------------
                0.00    0.00       2/2           Problem::Problem(char const*) [61]
[951]    0.0    0.00    0.00       2         void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&) [951]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/8           Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&) [492]
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [924]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::back() [953]
[952]    0.0    0.00    0.00       2         std::vector<Interceptor, std::allocator<Interceptor> >::end() [952]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor* const&) [636]
-----------------------------------------------
                0.00    0.00       2/2           Problem::Problem(char const*) [61]
[953]    0.0    0.00    0.00       2         std::vector<Interceptor, std::allocator<Interceptor> >::back() [953]
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::end() [952]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator-(long) const [854]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [853]
-----------------------------------------------
                0.00    0.00       2/2           Problem::Problem(char const*) [61]
[954]    0.0    0.00    0.00       2         void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&) [954]
                0.00    0.00       4/112         double& std::forward<double&>(std::remove_reference<double&>::type&) [167]
                0.00    0.00       2/36          unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&) [252]
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [926]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Location, std::allocator<Location> >::push_back(Location const&) [956]
[955]    0.0    0.00    0.00       2         void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
                0.00    0.00       4/5           std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() [592]
                0.00    0.00       2/2           std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [869]
                0.00    0.00       2/2           std::_Vector_base<Location, std::allocator<Location> >::_M_allocate(unsigned long) [889]
                0.00    0.00       2/8           Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&) [493]
                0.00    0.00       2/10          std::vector<Location, std::allocator<Location> >::size() const [411]
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [930]
                0.00    0.00       2/2           Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&) [994]
                0.00    0.00       2/3           void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&) [812]
                0.00    0.00       2/3           std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long) [746]
-----------------------------------------------
                0.00    0.00       2/2           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[956]    0.0    0.00    0.00       2         std::vector<Location, std::allocator<Location> >::push_back(Location const&) [956]
                0.00    0.00       2/2           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
-----------------------------------------------
                0.00    0.00       2/2           Solution::Solution(Problem const&) [1050]
[957]    0.0    0.00    0.00       2         void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&) [957]
                0.00    0.00       2/10          Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&) [957]
[958]    0.0    0.00    0.00       2         void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
                0.00    0.00       4/27          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() [264]
                0.00    0.00       2/2           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [870]
                0.00    0.00       2/13          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long) [345]
                0.00    0.00       2/10          Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&) [456]
                0.00    0.00       2/21          std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const [298]
                0.00    0.00       2/2           _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_ [932]
                0.00    0.00       2/2           Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [995]
                0.00    0.00       2/14          void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [342]
                0.00    0.00       2/14          std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long) [337]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&) [961]
[959]    0.0    0.00    0.00       2         void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&) [959]
                0.00    0.00       2/10          Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&) [959]
[960]    0.0    0.00    0.00       2         void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
                0.00    0.00       4/6           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() [550]
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [873]
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_allocate(unsigned long) [892]
                0.00    0.00       2/10          Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&) [454]
                0.00    0.00       2/10          std::vector<Interceptor const*, std::allocator<Interceptor const*> >::size() const [414]
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&) [940]
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [996]
                0.00    0.00       2/4           void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [712]
                0.00    0.00       2/4           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long) [653]
-----------------------------------------------
                0.00    0.00       2/2           Depot::addInterceptor(Interceptor const&) [828]
[961]    0.0    0.00    0.00       2         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&) [961]
                0.00    0.00       2/2           std::remove_reference<Interceptor const*&>::type&& std::move<Interceptor const*&>(Interceptor const*&) [997]
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&) [959]
-----------------------------------------------
                0.00    0.00       2/2           Depot::Depot(double, double, unsigned int) [829]
[962]    0.0    0.00    0.00       2         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::vector() [962]
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_base() [895]
-----------------------------------------------
                0.00    0.00       2/2           Depot::~Depot() [830]
[963]    0.0    0.00    0.00       2         std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector() [963]
                0.00    0.00       2/6           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() [550]
                0.00    0.00       2/2           std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base() [896]
                0.00    0.00       2/4           void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [712]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[964]    0.0    0.00    0.00       2         std::vector<char const*, std::allocator<char const*> >::end() [964]
                0.00    0.00       2/3           __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&) [727]
-----------------------------------------------
                0.00    0.00       2/2           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[965]    0.0    0.00    0.00       2         void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [965]
                0.00    0.00       2/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       2/2           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::resize(unsigned long) [968]
[966]    0.0    0.00    0.00       2         std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
                0.00    0.00       6/13          std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [346]
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
                0.00    0.00       2/24          std::vector<double, std::allocator<double> >::size() const [271]
                0.00    0.00       2/4           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [655]
                0.00    0.00       2/4           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [709]
                0.00    0.00       2/2           void std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [987]
                0.00    0.00       2/7           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [523]
                0.00    0.00       2/7           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [509]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [965]
[967]    0.0    0.00    0.00       2         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [967]
                0.00    0.00       4/13          std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [346]
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [647]
                0.00    0.00       2/4           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [655]
                0.00    0.00       2/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       2/24          std::vector<double, std::allocator<double> >::size() const [271]
                0.00    0.00       2/2           decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [944]
                0.00    0.00       2/4           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [709]
                0.00    0.00       2/7           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [523]
                0.00    0.00       2/7           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [509]
-----------------------------------------------
                0.00    0.00       2/2           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[968]    0.0    0.00    0.00       2         std::vector<double, std::allocator<double> >::resize(unsigned long) [968]
                0.00    0.00       4/24          std::vector<double, std::allocator<double> >::size() const [271]
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
[969]    0.0    0.00    0.00       2         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
                0.00    0.00       2/2           std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*) [1014]
                0.00    0.00       2/47          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [223]
                0.00    0.00       2/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00       2/2           unsigned int* std::__uninitialized_copy_a<unsigned int const*, unsigned int*, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*, std::allocator<unsigned int>&) [982]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[970]    0.0    0.00    0.00       2         std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&) [970]
                0.00    0.00       2/2           std::initializer_list<unsigned int>::end() const [866]
                0.00    0.00       2/2           std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(std::allocator<unsigned int> const&) [900]
                0.00    0.00       2/4           std::initializer_list<unsigned int>::begin() const [641]
                0.00    0.00       2/2           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
-----------------------------------------------
                0.00    0.00       2/2           void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1302]
[971]    0.0    0.00    0.00       2         void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*) [971]
                0.00    0.00       2/751         operator new(unsigned long, void*) [143]
                0.00    0.00       2/3           std::vector<double, std::allocator<double> >::vector() [784]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*) [1014]
[972]    0.0    0.00    0.00       2         std::iterator_traits<unsigned int const*>::difference_type std::__distance<unsigned int const*>(unsigned int const*, unsigned int const*, std::random_access_iterator_tag) [972]
-----------------------------------------------
                0.00    0.00       2/2           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [998]
[973]    0.0    0.00    0.00       2         __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&) [973]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*) [880]
[974]    0.0    0.00    0.00       2         Interceptor* std::__addressof<Interceptor>(Interceptor&) [974]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*) [881]
[975]    0.0    0.00    0.00       2         Depot* std::__addressof<Depot>(Depot&) [975]
-----------------------------------------------
                0.00    0.00       2/2           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [998]
[976]    0.0    0.00    0.00       2         std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*) [976]
                0.00    0.00       2/2           std::_Iter_base<double*, false>::_S_base(double*) [879]
-----------------------------------------------
                0.00    0.00       2/2           unsigned int* std::__uninitialized_copy_a<unsigned int const*, unsigned int*, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*, std::allocator<unsigned int>&) [982]
[977]    0.0    0.00    0.00       2         unsigned int* std::uninitialized_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [977]
                0.00    0.00       2/2           unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [946]
-----------------------------------------------
                0.00    0.00       2/2           Location* std::__uninitialized_copy_a<std::move_iterator<Location*>, Location*, Location>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*, std::allocator<Location>&) [983]
[978]    0.0    0.00    0.00       2         Location* std::uninitialized_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [978]
                0.00    0.00       2/2           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
-----------------------------------------------
                0.00    0.00       2/2           Solution::InterceptorNode* std::__uninitialized_copy_a<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, Solution::InterceptorNode>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [984]
[979]    0.0    0.00    0.00       2         Solution::InterceptorNode* std::uninitialized_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [979]
                0.00    0.00       2/2           Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
-----------------------------------------------
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_copy_a<std::move_iterator<Interceptor const**>, Interceptor const**, Interceptor const*>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**, std::allocator<Interceptor const*>&) [985]
[980]    0.0    0.00    0.00       2         Interceptor const** std::uninitialized_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [980]
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [949]
-----------------------------------------------
                0.00    0.00       2/2           std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*) [1014]
[981]    0.0    0.00    0.00       2         std::iterator_traits<unsigned int const*>::iterator_category std::__iterator_category<unsigned int const*>(unsigned int const* const&) [981]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
[982]    0.0    0.00    0.00       2         unsigned int* std::__uninitialized_copy_a<unsigned int const*, unsigned int*, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*, std::allocator<unsigned int>&) [982]
                0.00    0.00       2/2           unsigned int* std::uninitialized_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*) [977]
-----------------------------------------------
                0.00    0.00       2/2           Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&) [994]
[983]    0.0    0.00    0.00       2         Location* std::__uninitialized_copy_a<std::move_iterator<Location*>, Location*, Location>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*, std::allocator<Location>&) [983]
                0.00    0.00       2/2           Location* std::uninitialized_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [978]
-----------------------------------------------
                0.00    0.00       2/2           Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [995]
[984]    0.0    0.00    0.00       2         Solution::InterceptorNode* std::__uninitialized_copy_a<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, Solution::InterceptorNode>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [984]
                0.00    0.00       2/2           Solution::InterceptorNode* std::uninitialized_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [979]
-----------------------------------------------
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [996]
[985]    0.0    0.00    0.00       2         Interceptor const** std::__uninitialized_copy_a<std::move_iterator<Interceptor const**>, Interceptor const**, Interceptor const*>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**, std::allocator<Interceptor const*>&) [985]
                0.00    0.00       2/2           Interceptor const** std::uninitialized_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [980]
-----------------------------------------------
                0.00    0.00       2/2           void std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [987]
[986]    0.0    0.00    0.00       2         void std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [986]
                0.00    0.00       2/2           void std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [950]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [966]
[987]    0.0    0.00    0.00       2         void std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [987]
                0.00    0.00       2/2           void std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [986]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
[988]    0.0    0.00    0.00       2         std::move_iterator<Interceptor*> std::__make_move_if_noexcept_iterator<Interceptor*, std::move_iterator<Interceptor*> >(Interceptor*) [988]
                0.00    0.00       2/2           std::move_iterator<Interceptor*>::move_iterator(Interceptor*) [901]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[989]    0.0    0.00    0.00       2         Depot* std::__make_move_if_noexcept_iterator<Depot*, Depot*>(Depot*) [989]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
[990]    0.0    0.00    0.00       2         std::move_iterator<Mobile*> std::__make_move_if_noexcept_iterator<Mobile*, std::move_iterator<Mobile*> >(Mobile*) [990]
                0.00    0.00       2/2           std::move_iterator<Mobile*>::move_iterator(Mobile*) [902]
-----------------------------------------------
                0.00    0.00       2/2           Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&) [1406]
[991]    0.0    0.00    0.00       2         std::move_iterator<Problem**> std::__make_move_if_noexcept_iterator<Problem**, std::move_iterator<Problem**> >(Problem**) [991]
                0.00    0.00       2/2           std::move_iterator<Problem**>::move_iterator(Problem**) [903]
-----------------------------------------------
                0.00    0.00       2/2           Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&) [1407]
[992]    0.0    0.00    0.00       2         std::move_iterator<Solution**> std::__make_move_if_noexcept_iterator<Solution**, std::move_iterator<Solution**> >(Solution**) [992]
                0.00    0.00       2/2           std::move_iterator<Solution**>::move_iterator(Solution**) [904]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1408]
[993]    0.0    0.00    0.00       2         std::move_iterator<std::vector<double, std::allocator<double> >*> std::__make_move_if_noexcept_iterator<std::vector<double, std::allocator<double> >*, std::move_iterator<std::vector<double, std::allocator<double> >*> >(std::vector<double, std::allocator<double> >*) [993]
                0.00    0.00       2/2           std::move_iterator<std::vector<double, std::allocator<double> >*>::move_iterator(std::vector<double, std::allocator<double> >*) [905]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&) [955]
[994]    0.0    0.00    0.00       2         Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&) [994]
                0.00    0.00       4/4           std::move_iterator<Location*> std::__make_move_if_noexcept_iterator<Location*, std::move_iterator<Location*> >(Location*) [704]
                0.00    0.00       2/2           Location* std::__uninitialized_copy_a<std::move_iterator<Location*>, Location*, Location>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*, std::allocator<Location>&) [983]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&) [958]
[995]    0.0    0.00    0.00       2         Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [995]
                0.00    0.00       4/4           std::move_iterator<Solution::InterceptorNode*> std::__make_move_if_noexcept_iterator<Solution::InterceptorNode*, std::move_iterator<Solution::InterceptorNode*> >(Solution::InterceptorNode*) [705]
                0.00    0.00       2/2           Solution::InterceptorNode* std::__uninitialized_copy_a<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, Solution::InterceptorNode>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&) [984]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&) [960]
[996]    0.0    0.00    0.00       2         Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&) [996]
                0.00    0.00       4/4           std::move_iterator<Interceptor const**> std::__make_move_if_noexcept_iterator<Interceptor const**, std::move_iterator<Interceptor const**> >(Interceptor const**) [706]
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_copy_a<std::move_iterator<Interceptor const**>, Interceptor const**, Interceptor const*>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**, std::allocator<Interceptor const*>&) [985]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&) [961]
[997]    0.0    0.00    0.00       2         std::remove_reference<Interceptor const*&>::type&& std::move<Interceptor const*&>(Interceptor const*&) [997]
-----------------------------------------------
                0.00    0.00       2/2           void std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [950]
[998]    0.0    0.00    0.00       2         double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [998]
                0.00    0.00       2/2           std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*) [976]
                0.00    0.00       2/2           __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&) [973]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*) [880]
[999]    0.0    0.00    0.00       2         void std::_Destroy<Interceptor>(Interceptor*) [999]
                0.00    0.00       2/2           Interceptor::~Interceptor() [824]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*) [881]
[1000]   0.0    0.00    0.00       2         void std::_Destroy<Depot>(Depot*) [1000]
                0.00    0.00       2/2           Depot::~Depot() [830]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&) [1002]
[1001]   0.0    0.00    0.00       2         void std::_Destroy<Interceptor*>(Interceptor*, Interceptor*) [1001]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*) [880]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Interceptor, std::allocator<Interceptor> >::~vector() [1306]
                0.00    0.00       1/2           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
[1002]   0.0    0.00    0.00       2         void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&) [1002]
                0.00    0.00       2/2           void std::_Destroy<Interceptor*>(Interceptor*, Interceptor*) [1001]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&) [1004]
[1003]   0.0    0.00    0.00       2         void std::_Destroy<Depot*>(Depot*, Depot*) [1003]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*) [881]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Depot, std::allocator<Depot> >::~vector() [1310]
                0.00    0.00       1/2           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[1004]   0.0    0.00    0.00       2         void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&) [1004]
                0.00    0.00       2/2           void std::_Destroy<Depot*>(Depot*, Depot*) [1003]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&) [1006]
[1005]   0.0    0.00    0.00       2         void std::_Destroy<Mobile*>(Mobile*, Mobile*) [1005]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*) [882]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Mobile, std::allocator<Mobile> >::~vector() [1314]
                0.00    0.00       1/2           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
[1006]   0.0    0.00    0.00       2         void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&) [1006]
                0.00    0.00       2/2           void std::_Destroy<Mobile*>(Mobile*, Mobile*) [1005]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&) [1008]
[1007]   0.0    0.00    0.00       2         void std::_Destroy<Problem**>(Problem**, Problem**) [1007]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<Problem**>(Problem**, Problem**) [884]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Problem*, std::allocator<Problem*> >::~vector() [1325]
                0.00    0.00       1/2           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[1008]   0.0    0.00    0.00       2         void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&) [1008]
                0.00    0.00       2/2           void std::_Destroy<Problem**>(Problem**, Problem**) [1007]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&) [1010]
[1009]   0.0    0.00    0.00       2         void std::_Destroy<Solution**>(Solution**, Solution**) [1009]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<Solution**>(Solution**, Solution**) [885]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<Solution*, std::allocator<Solution*> >::~vector() [1330]
                0.00    0.00       1/2           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[1010]   0.0    0.00    0.00       2         void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&) [1010]
                0.00    0.00       2/2           void std::_Destroy<Solution**>(Solution**, Solution**) [1009]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1012]
[1011]   0.0    0.00    0.00       2         void std::_Destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [1011]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [883]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
                0.00    0.00       1/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~vector() [1736]
[1012]   0.0    0.00    0.00       2         void std::_Destroy<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1012]
                0.00    0.00       2/2           void std::_Destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [1011]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [883]
[1013]   0.0    0.00    0.00       2         void std::_Destroy<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*) [1013]
                0.00    0.00       2/3           std::vector<double, std::allocator<double> >::~vector() [785]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag) [969]
[1014]   0.0    0.00    0.00       2         std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*) [1014]
                0.00    0.00       2/2           std::iterator_traits<unsigned int const*>::iterator_category std::__iterator_category<unsigned int const*>(unsigned int const* const&) [981]
                0.00    0.00       2/2           std::iterator_traits<unsigned int const*>::difference_type std::__distance<unsigned int const*>(unsigned int const*, unsigned int const*, std::random_access_iterator_tag) [972]
-----------------------------------------------
                0.00    0.00       2/2           bool std::operator!=<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1016]
[1015]   0.0    0.00    0.00       2         bool std::operator==<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1015]
                0.00    0.00       4/4           std::move_iterator<Interceptor const**>::base() const [640]
-----------------------------------------------
                0.00    0.00       2/2           Interceptor const** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**) [949]
[1016]   0.0    0.00    0.00       2         bool std::operator!=<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1016]
                0.00    0.00       2/2           bool std::operator==<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&) [1015]
-----------------------------------------------
                0.00    0.00       2/2           std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) [945]
[1017]   0.0    0.00    0.00       2         main::{lambda()#4}::operator()() const [1017]
                0.00    0.00       2/2           MoveMove2Routes<BestAvailablePolicy>::MoveMove2Routes() [825]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1018]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11InterceptorC2Ej [1018]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1037]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1019]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11TikzGrapher7_stylesE [1019]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1043]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1020]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN15AvailablePolicy20_max_acceptable_timeE [1020]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1044]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1021]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN17SimpleCachePolicy6_cacheE [1021]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1034]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1022]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN18Heuristic_sequenceC2ERK7Problem [1022]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1036]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1023]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3VND7max_itrE [1023]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1045]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1024]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5DepotC2Ej [1024]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1033]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1025]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6MobileC2Ej [1025]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1038]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1026]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7ProblemC2Ev [1026]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1039]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1027]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8LocationC2Edd [1027]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1041]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1028]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8Solution10MobileNodeC2ERK6MobiledPK11Interceptor [1028]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1040]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1029]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9HeuristicC2ERK7Problem [1029]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1035]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1030]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9Tikzifyer7_stylesE [1030]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1042]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1839]
[1031]   0.0    0.00    0.00       1         _GLOBAL__sub_I__ZlsRSoRK15BenchmarkResult [1031]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1032]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZlsRSoRK15BenchmarkResult [1031]
[1032]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1032]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5DepotC2Ej [1024]
[1033]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1033]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN17SimpleCachePolicy6_cacheE [1021]
[1034]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1034]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::vector() [1340]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9HeuristicC2ERK7Problem [1029]
[1035]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1035]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN18Heuristic_sequenceC2ERK7Problem [1022]
[1036]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1036]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN11InterceptorC2Ej [1018]
[1037]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1037]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6MobileC2Ej [1025]
[1038]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1038]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7ProblemC2Ev [1026]
[1039]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1039]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN8Solution10MobileNodeC2ERK6MobiledPK11Interceptor [1028]
[1040]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1040]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN8LocationC2Edd [1027]
[1041]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1041]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9Tikzifyer7_stylesE [1030]
[1042]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1042]
                0.00    0.00       1/3           std::allocator<std::string>::allocator() [737]
                0.00    0.00       1/3           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
                0.00    0.00       1/6           std::allocator<std::string>::~allocator() [548]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN11TikzGrapher7_stylesE [1019]
[1043]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1043]
                0.00    0.00       2/3           std::allocator<std::string>::allocator() [737]
                0.00    0.00       2/3           std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&) [783]
                0.00    0.00       2/6           std::allocator<std::string>::~allocator() [548]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN15AvailablePolicy20_max_acceptable_timeE [1020]
[1044]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1044]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN3VND7max_itrE [1023]
[1045]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1045]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1046]   0.0    0.00    0.00       1         Heuristic_fastest<SimpleCachePolicy>::Heuristic_fastest(Problem const&) [1046]
                0.00    0.00       1/1           Heuristic::Heuristic(Problem const&) [1052]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1047]   0.0    0.00    0.00       1         Heuristic_fastest<SimpleCachePolicy>::~Heuristic_fastest() [1047]
                0.00    0.00       1/1           Heuristic::~Heuristic() [1053]
-----------------------------------------------
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[1048]   0.0    0.00    0.00       1         SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
                0.00    0.00       3/3           bool __gnu_cxx::operator!=<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&) [728]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator*() const [855]
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::resize(unsigned long) [968]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator++() [848]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long) [1339]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::begin() [1338]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::end() [1337]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1049]   0.0    0.00    0.00       1         Problem::~Problem() [1049]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::~vector() [1310]
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::~vector() [1314]
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::~vector() [1306]
-----------------------------------------------
                0.00    0.00       1/1           Heuristic::Heuristic(Problem const&) [1052]
[1050]   0.0    0.00    0.00       1         Solution::Solution(Problem const&) [1050]
                0.00    0.00       7/124443      Problem::mobiles() const [85]
                0.00    0.00       6/56976       std::vector<Mobile, std::allocator<Mobile> >::end() const [91]
                0.00    0.00       6/56976       bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [90]
                0.00    0.00       5/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const [97]
                0.00    0.00       5/5           void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&) [612]
                0.00    0.00       5/47480       __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++() [96]
                0.00    0.00       4/581315      Problem::interceptors() const [79]
                0.00    0.00       3/6           std::vector<Interceptor, std::allocator<Interceptor> >::end() const [540]
                0.00    0.00       3/39126       bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [102]
                0.00    0.00       2/62265       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [89]
                0.00    0.00       2/2           void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&) [957]
                0.00    0.00       2/26084       __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [105]
                0.00    0.00       1/1           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector() [1317]
                0.00    0.00       1/1           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector() [1318]
                0.00    0.00       1/9496        std::vector<Mobile, std::allocator<Mobile> >::begin() const [114]
                0.00    0.00       1/2           std::vector<Interceptor, std::allocator<Interceptor> >::begin() const [868]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1051]   0.0    0.00    0.00       1         Heuristic::solution() [1051]
-----------------------------------------------
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::Heuristic_fastest(Problem const&) [1046]
[1052]   0.0    0.00    0.00       1         Heuristic::Heuristic(Problem const&) [1052]
                0.00    0.00       1/1           Solution::Solution(Problem const&) [1050]
-----------------------------------------------
                0.00    0.00       1/1           Heuristic_fastest<SimpleCachePolicy>::~Heuristic_fastest() [1047]
[1053]   0.0    0.00    0.00       1         Heuristic::~Heuristic() [1053]
                0.00    0.00       1/12          Solution::~Solution() [349]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::deallocate(std::allocator<Interceptor>&, Interceptor*, unsigned long) [1268]
[1054]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Interceptor>::deallocate(Interceptor*, unsigned long) [1054]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::allocate(std::allocator<Interceptor>&, unsigned long) [1270]
[1055]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Interceptor>::allocate(unsigned long, void const*) [1055]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Interceptor>::max_size() const [850]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Interceptor>::allocator() [1121]
[1056]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Interceptor>::new_allocator() [1056]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Interceptor>::~allocator() [1122]
[1057]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Interceptor>::~new_allocator() [1057]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::deallocate(std::allocator<Depot>&, Depot*, unsigned long) [1272]
[1058]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Depot>::deallocate(Depot*, unsigned long) [1058]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::allocate(std::allocator<Depot>&, unsigned long) [1274]
[1059]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Depot>::allocate(unsigned long, void const*) [1059]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Depot>::max_size() const [851]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Depot>::allocator() [1123]
[1060]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Depot>::new_allocator() [1060]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Depot>::~allocator() [1124]
[1061]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Depot>::~new_allocator() [1061]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::deallocate(std::allocator<Mobile>&, Mobile*, unsigned long) [1276]
[1062]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Mobile>::deallocate(Mobile*, unsigned long) [1062]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::allocate(std::allocator<Mobile>&, unsigned long) [1278]
[1063]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Mobile>::allocate(unsigned long, void const*) [1063]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Mobile>::max_size() const [852]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Mobile>::allocator() [1125]
[1064]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Mobile>::new_allocator() [1064]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Mobile>::~allocator() [1126]
[1065]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Mobile>::~new_allocator() [1065]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Location>::allocator() [1127]
[1066]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Location>::new_allocator() [1066]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Location>::~allocator() [1128]
[1067]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Location>::~new_allocator() [1067]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Solution::MobileNode>::allocator() [1129]
[1068]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator() [1068]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Solution::InterceptorNode>::allocator() [1130]
[1069]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator() [1069]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Move*>::allocator() [1131]
[1070]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Move*>::new_allocator() [1070]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Problem*> >::deallocate(std::allocator<Problem*>&, Problem**, unsigned long) [1280]
[1071]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Problem*>::deallocate(Problem**, unsigned long) [1071]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Problem*> >::allocate(std::allocator<Problem*>&, unsigned long) [1282]
[1072]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Problem*>::allocate(unsigned long, void const*) [1072]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<Problem*>::max_size() const [729]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [1281]
[1073]   0.0    0.00    0.00       1         _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_ [1073]
                0.00    0.00       1/5           Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Problem*>::allocator() [1132]
[1074]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Problem*>::new_allocator() [1074]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Problem*>::~allocator() [1133]
[1075]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Problem*>::~new_allocator() [1075]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Solution*> >::deallocate(std::allocator<Solution*>&, Solution**, unsigned long) [1284]
[1076]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution*>::deallocate(Solution**, unsigned long) [1076]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Solution*> >::allocate(std::allocator<Solution*>&, unsigned long) [1286]
[1077]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution*>::allocate(unsigned long, void const*) [1077]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<Solution*>::max_size() const [730]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1285]
[1078]   0.0    0.00    0.00       1         _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_ [1078]
                0.00    0.00       1/5           Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Solution*>::allocator() [1134]
[1079]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution*>::new_allocator() [1079]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Solution*>::~allocator() [1135]
[1080]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Solution*>::~new_allocator() [1080]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned long) [1288]
[1081]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char const*>::deallocate(char const**, unsigned long) [1081]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char const*> >::allocate(std::allocator<char const*>&, unsigned long) [1289]
[1082]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*) [1082]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::max_size() const [1096]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<char const*>::allocator(std::allocator<char const*> const&) [1136]
[1083]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char const*>::new_allocator(__gnu_cxx::new_allocator<char const*> const&) [1083]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<char const*>::allocator() [1137]
[1084]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char const*>::new_allocator() [1084]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocator() [1138]
[1085]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::new_allocator() [1085]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~allocator() [1139]
[1086]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~new_allocator() [1086]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::deallocate(std::allocator<std::vector<double, std::allocator<double> > >&, std::vector<double, std::allocator<double> >*, unsigned long) [1290]
[1087]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [1087]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::allocate(std::allocator<std::vector<double, std::allocator<double> > >&, unsigned long) [1291]
[1088]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::allocate(unsigned long, void const*) [1088]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::max_size() const [732]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::vector<double, std::allocator<double> > >::allocator() [1140]
[1089]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::new_allocator() [1089]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::vector<double, std::allocator<double> > >::~allocator() [1141]
[1090]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::~new_allocator() [1090]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<Move* ()> > >::deallocate(std::allocator<std::function<Move* ()> >&, std::function<Move* ()>*, unsigned long) [1292]
[1091]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<Move* ()> >::deallocate(std::function<Move* ()>*, unsigned long) [1091]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<Move* ()> > >::allocate(std::allocator<std::function<Move* ()> >&, unsigned long) [1293]
[1092]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<Move* ()> >::allocate(unsigned long, void const*) [1092]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::max_size() const [1097]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::function<Move* ()> >::allocator(std::allocator<std::function<Move* ()> > const&) [1142]
[1093]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator(__gnu_cxx::new_allocator<std::function<Move* ()> > const&) [1093]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::function<Move* ()> >::allocator() [1143]
[1094]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator() [1094]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1095]   0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator++() [1095]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*) [1082]
[1096]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char const*>::max_size() const [1096]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::allocate(unsigned long, void const*) [1092]
[1097]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<Move* ()> >::max_size() const [1097]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::back() [1323]
[1098]   0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator*() const [1098]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::back() [1323]
[1099]   0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator-(long) const [1099]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::__normal_iterator(Problem** const&) [846]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1100]   0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator*() const [1100]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const [1112]
[1101]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() const [1101]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::max_size() const [1115]
[1102]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() const [1102]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::max_size() const [1117]
[1103]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() const [1103]
-----------------------------------------------
                0.00    0.00       1/1           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
[1104]   0.0    0.00    0.00       1         std::move_iterator<Location*>::operator*() const [1104]
                0.00    0.00       1/1           std::remove_reference<Location&>::type&& std::move<Location&>(Location&) [1410]
-----------------------------------------------
                0.00    0.00       1/1           Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
[1105]   0.0    0.00    0.00       1         std::move_iterator<Solution::InterceptorNode*>::operator*() const [1105]
                0.00    0.00       1/1           std::remove_reference<Solution::InterceptorNode&>::type&& std::move<Solution::InterceptorNode&>(Solution::InterceptorNode&) [1411]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
[1106]   0.0    0.00    0.00       1         std::move_iterator<double*>::operator*() const [1106]
                0.00    0.00       1/1           std::remove_reference<double&>::type&& std::move<double&>(double&) [1412]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
[1107]   0.0    0.00    0.00       1         std::initializer_list<char const*>::end() const [1107]
                0.00    0.00       1/2           std::initializer_list<char const*>::begin() const [864]
                0.00    0.00       1/1           std::initializer_list<char const*>::size() const [1108]
-----------------------------------------------
                0.00    0.00       1/1           std::initializer_list<char const*>::end() const [1107]
[1108]   0.0    0.00    0.00       1         std::initializer_list<char const*>::size() const [1108]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
[1109]   0.0    0.00    0.00       1         std::initializer_list<std::function<Move* ()> >::end() const [1109]
                0.00    0.00       1/2           std::initializer_list<std::function<Move* ()> >::begin() const [865]
                0.00    0.00       1/1           std::initializer_list<std::function<Move* ()> >::size() const [1110]
-----------------------------------------------
                0.00    0.00       1/1           std::initializer_list<std::function<Move* ()> >::end() const [1109]
[1110]   0.0    0.00    0.00       1         std::initializer_list<std::function<Move* ()> >::size() const [1110]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
[1111]   0.0    0.00    0.00       1         std::vector<Interceptor, std::allocator<Interceptor> >::capacity() const [1111]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
[1112]   0.0    0.00    0.00       1         std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const [1112]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::max_size(std::allocator<Interceptor> const&) [1271]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() const [1101]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[1113]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::size() const [1113]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[1114]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::capacity() const [1114]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[1115]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::max_size() const [1115]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::max_size(std::allocator<Depot> const&) [1275]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() const [1102]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
[1116]   0.0    0.00    0.00       1         std::vector<Mobile, std::allocator<Mobile> >::capacity() const [1116]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
[1117]   0.0    0.00    0.00       1         std::vector<Mobile, std::allocator<Mobile> >::max_size() const [1117]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() const [1103]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::max_size(std::allocator<Mobile> const&) [1279]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[1118]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [1118]
                0.00    0.00       4/7           std::vector<Problem*, std::allocator<Problem*> >::size() const [504]
                0.00    0.00       2/2           std::vector<Problem*, std::allocator<Problem*> >::max_size() const [871]
                0.00    0.00       1/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[1119]   0.0    0.00    0.00       1         std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [1119]
                0.00    0.00       4/5           std::vector<Solution*, std::allocator<Solution*> >::size() const [588]
                0.00    0.00       2/2           std::vector<Solution*, std::allocator<Solution*> >::max_size() const [872]
                0.00    0.00       1/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
[1120]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [1120]
                0.00    0.00       4/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [505]
                0.00    0.00       2/2           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const [874]
                0.00    0.00       1/25          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [268]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::_Vector_impl() [1148]
[1121]   0.0    0.00    0.00       1         std::allocator<Interceptor>::allocator() [1121]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Interceptor>::new_allocator() [1056]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::~_Vector_impl() [1149]
[1122]   0.0    0.00    0.00       1         std::allocator<Interceptor>::~allocator() [1122]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Interceptor>::~new_allocator() [1057]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::_Vector_impl() [1153]
[1123]   0.0    0.00    0.00       1         std::allocator<Depot>::allocator() [1123]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Depot>::new_allocator() [1060]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::~_Vector_impl() [1154]
[1124]   0.0    0.00    0.00       1         std::allocator<Depot>::~allocator() [1124]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Depot>::~new_allocator() [1061]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::_Vector_impl() [1158]
[1125]   0.0    0.00    0.00       1         std::allocator<Mobile>::allocator() [1125]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Mobile>::new_allocator() [1064]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::~_Vector_impl() [1159]
[1126]   0.0    0.00    0.00       1         std::allocator<Mobile>::~allocator() [1126]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Mobile>::~new_allocator() [1065]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::_Vector_impl() [1162]
[1127]   0.0    0.00    0.00       1         std::allocator<Location>::allocator() [1127]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Location>::new_allocator() [1066]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::~_Vector_impl() [1163]
[1128]   0.0    0.00    0.00       1         std::allocator<Location>::~allocator() [1128]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Location>::~new_allocator() [1067]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl() [1166]
[1129]   0.0    0.00    0.00       1         std::allocator<Solution::MobileNode>::allocator() [1129]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator() [1068]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl() [1168]
[1130]   0.0    0.00    0.00       1         std::allocator<Solution::InterceptorNode>::allocator() [1130]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator() [1069]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl() [1170]
[1131]   0.0    0.00    0.00       1         std::allocator<Move*>::allocator() [1131]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Move*>::new_allocator() [1070]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::_Vector_impl() [1173]
[1132]   0.0    0.00    0.00       1         std::allocator<Problem*>::allocator() [1132]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Problem*>::new_allocator() [1074]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::~_Vector_impl() [1174]
[1133]   0.0    0.00    0.00       1         std::allocator<Problem*>::~allocator() [1133]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Problem*>::~new_allocator() [1075]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::_Vector_impl() [1178]
[1134]   0.0    0.00    0.00       1         std::allocator<Solution*>::allocator() [1134]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution*>::new_allocator() [1079]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::~_Vector_impl() [1179]
[1135]   0.0    0.00    0.00       1         std::allocator<Solution*>::~allocator() [1135]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution*>::~new_allocator() [1080]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl(std::allocator<char const*> const&) [1183]
[1136]   0.0    0.00    0.00       1         std::allocator<char const*>::allocator(std::allocator<char const*> const&) [1136]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::new_allocator(__gnu_cxx::new_allocator<char const*> const&) [1083]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1137]   0.0    0.00    0.00       1         std::allocator<char const*>::allocator() [1137]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::new_allocator() [1084]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl() [1348]
[1138]   0.0    0.00    0.00       1         std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocator() [1138]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::new_allocator() [1085]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::~_Rb_tree_impl() [1349]
[1139]   0.0    0.00    0.00       1         std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~allocator() [1139]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~new_allocator() [1086]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::_Vector_impl() [1189]
[1140]   0.0    0.00    0.00       1         std::allocator<std::vector<double, std::allocator<double> > >::allocator() [1140]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::new_allocator() [1089]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::~_Vector_impl() [1190]
[1141]   0.0    0.00    0.00       1         std::allocator<std::vector<double, std::allocator<double> > >::~allocator() [1141]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::~new_allocator() [1090]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::_Vector_impl(std::allocator<std::function<Move* ()> > const&) [1194]
[1142]   0.0    0.00    0.00       1         std::allocator<std::function<Move* ()> >::allocator(std::allocator<std::function<Move* ()> > const&) [1142]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator(__gnu_cxx::new_allocator<std::function<Move* ()> > const&) [1093]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1143]   0.0    0.00    0.00       1         std::allocator<std::function<Move* ()> >::allocator() [1143]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator() [1094]
-----------------------------------------------
                0.00    0.00       1/1           std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*) [1383]
[1144]   0.0    0.00    0.00       1         std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*) [1144]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1419]
[1145]   0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1145]
                0.00    0.00      16/16          void std::_Destroy<std::function<Move* ()> >(std::function<Move* ()>*) [325]
                0.00    0.00      16/32          std::function<Move* ()>* std::__addressof<std::function<Move* ()> >(std::function<Move* ()>&) [258]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<char const**>(char const**, char const**) [1417]
[1146]   0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<char const**>(char const**, char const**) [1146]
-----------------------------------------------
                0.00    0.00       1/1           Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>) [1304]
[1147]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_allocate(unsigned long) [1147]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::allocate(std::allocator<Interceptor>&, unsigned long) [1270]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_base() [1150]
[1148]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::_Vector_impl() [1148]
                0.00    0.00       1/1           std::allocator<Interceptor>::allocator() [1121]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base() [1151]
[1149]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::~_Vector_impl() [1149]
                0.00    0.00       1/1           std::allocator<Interceptor>::~allocator() [1122]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::vector() [1305]
[1150]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_base() [1150]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::_Vector_impl() [1148]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::~vector() [1306]
[1151]   0.0    0.00    0.00       1         std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base() [1151]
                0.00    0.00       1/2           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long) [886]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::~_Vector_impl() [1149]
-----------------------------------------------
                0.00    0.00       1/1           Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*) [1307]
[1152]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::_M_allocate(unsigned long) [1152]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::allocate(std::allocator<Depot>&, unsigned long) [1274]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_base() [1155]
[1153]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::_Vector_impl() [1153]
                0.00    0.00       1/1           std::allocator<Depot>::allocator() [1123]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base() [1156]
[1154]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::~_Vector_impl() [1154]
                0.00    0.00       1/1           std::allocator<Depot>::~allocator() [1124]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::vector() [1309]
[1155]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_base() [1155]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::_Vector_impl() [1153]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::~vector() [1310]
[1156]   0.0    0.00    0.00       1         std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base() [1156]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::~_Vector_impl() [1154]
                0.00    0.00       1/2           std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long) [887]
-----------------------------------------------
                0.00    0.00       1/1           Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>) [1311]
[1157]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_allocate(unsigned long) [1157]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::allocate(std::allocator<Mobile>&, unsigned long) [1278]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_base() [1160]
[1158]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::_Vector_impl() [1158]
                0.00    0.00       1/1           std::allocator<Mobile>::allocator() [1125]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base() [1161]
[1159]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::~_Vector_impl() [1159]
                0.00    0.00       1/1           std::allocator<Mobile>::~allocator() [1126]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::vector() [1313]
[1160]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_base() [1160]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::_Vector_impl() [1158]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::~vector() [1314]
[1161]   0.0    0.00    0.00       1         std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base() [1161]
                0.00    0.00       1/2           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long) [888]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::~_Vector_impl() [1159]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_base() [1164]
[1162]   0.0    0.00    0.00       1         std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::_Vector_impl() [1162]
                0.00    0.00       1/1           std::allocator<Location>::allocator() [1127]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base() [1165]
[1163]   0.0    0.00    0.00       1         std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::~_Vector_impl() [1163]
                0.00    0.00       1/1           std::allocator<Location>::~allocator() [1128]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Location, std::allocator<Location> >::vector() [1315]
[1164]   0.0    0.00    0.00       1         std::_Vector_base<Location, std::allocator<Location> >::_Vector_base() [1164]
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::_Vector_impl() [1162]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Location, std::allocator<Location> >::~vector() [1316]
[1165]   0.0    0.00    0.00       1         std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base() [1165]
                0.00    0.00       1/3           std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long) [746]
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::~_Vector_impl() [1163]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base() [1167]
[1166]   0.0    0.00    0.00       1         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl() [1166]
                0.00    0.00       1/1           std::allocator<Solution::MobileNode>::allocator() [1129]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector() [1317]
[1167]   0.0    0.00    0.00       1         std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base() [1167]
                0.00    0.00       1/1           std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl() [1166]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base() [1169]
[1168]   0.0    0.00    0.00       1         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl() [1168]
                0.00    0.00       1/1           std::allocator<Solution::InterceptorNode>::allocator() [1130]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector() [1318]
[1169]   0.0    0.00    0.00       1         std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base() [1169]
                0.00    0.00       1/1           std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl() [1168]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base() [1171]
[1170]   0.0    0.00    0.00       1         std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl() [1170]
                0.00    0.00       1/1           std::allocator<Move*>::allocator() [1131]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Move*, std::allocator<Move*> >::vector() [1319]
[1171]   0.0    0.00    0.00       1         std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base() [1171]
                0.00    0.00       1/1           std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl() [1170]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[1172]   0.0    0.00    0.00       1         std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_allocate(unsigned long) [1172]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Problem*> >::allocate(std::allocator<Problem*>&, unsigned long) [1282]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_base() [1175]
[1173]   0.0    0.00    0.00       1         std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::_Vector_impl() [1173]
                0.00    0.00       1/1           std::allocator<Problem*>::allocator() [1132]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base() [1176]
[1174]   0.0    0.00    0.00       1         std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::~_Vector_impl() [1174]
                0.00    0.00       1/1           std::allocator<Problem*>::~allocator() [1133]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::vector() [1324]
[1175]   0.0    0.00    0.00       1         std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_base() [1175]
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::_Vector_impl() [1173]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::~vector() [1325]
[1176]   0.0    0.00    0.00       1         std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base() [1176]
                0.00    0.00       1/2           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long) [890]
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::~_Vector_impl() [1174]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[1177]   0.0    0.00    0.00       1         std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_allocate(unsigned long) [1177]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Solution*> >::allocate(std::allocator<Solution*>&, unsigned long) [1286]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_base() [1180]
[1178]   0.0    0.00    0.00       1         std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::_Vector_impl() [1178]
                0.00    0.00       1/1           std::allocator<Solution*>::allocator() [1134]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base() [1181]
[1179]   0.0    0.00    0.00       1         std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::~_Vector_impl() [1179]
                0.00    0.00       1/1           std::allocator<Solution*>::~allocator() [1135]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::vector() [1329]
[1180]   0.0    0.00    0.00       1         std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_base() [1180]
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::_Vector_impl() [1178]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::~vector() [1330]
[1181]   0.0    0.00    0.00       1         std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base() [1181]
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::~_Vector_impl() [1179]
                0.00    0.00       1/2           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long) [891]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
[1182]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long) [1182]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char const*> >::allocate(std::allocator<char const*>&, unsigned long) [1289]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base(std::allocator<char const*> const&) [1186]
[1183]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl(std::allocator<char const*> const&) [1183]
                0.00    0.00       1/1           std::allocator<char const*>::allocator(std::allocator<char const*> const&) [1136]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() [1187]
[1184]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl() [1184]
                0.00    0.00       1/2           std::allocator<char const*>::~allocator() [877]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() [1187]
[1185]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long) [1185]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned long) [1288]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
[1186]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base(std::allocator<char const*> const&) [1186]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl(std::allocator<char const*> const&) [1183]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::~vector() [1335]
[1187]   0.0    0.00    0.00       1         std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() [1187]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long) [1185]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl() [1184]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
[1188]   0.0    0.00    0.00       1         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_allocate(unsigned long) [1188]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::allocate(std::allocator<std::vector<double, std::allocator<double> > >&, unsigned long) [1291]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_base() [1191]
[1189]   0.0    0.00    0.00       1         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::_Vector_impl() [1189]
                0.00    0.00       1/1           std::allocator<std::vector<double, std::allocator<double> > >::allocator() [1140]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~_Vector_base() [1192]
[1190]   0.0    0.00    0.00       1         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::~_Vector_impl() [1190]
                0.00    0.00       1/1           std::allocator<std::vector<double, std::allocator<double> > >::~allocator() [1141]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::vector() [1340]
[1191]   0.0    0.00    0.00       1         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_base() [1191]
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::_Vector_impl() [1189]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~vector() [1736]
[1192]   0.0    0.00    0.00       1         std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~_Vector_base() [1192]
                0.00    0.00       1/2           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [898]
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::~_Vector_impl() [1190]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
[1193]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_allocate(unsigned long) [1193]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<Move* ()> > >::allocate(std::allocator<std::function<Move* ()> >&, unsigned long) [1293]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_base(std::allocator<std::function<Move* ()> > const&) [1197]
[1194]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::_Vector_impl(std::allocator<std::function<Move* ()> > const&) [1194]
                0.00    0.00       1/1           std::allocator<std::function<Move* ()> >::allocator(std::allocator<std::function<Move* ()> > const&) [1142]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base() [1198]
[1195]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::~_Vector_impl() [1195]
                0.00    0.00       1/2           std::allocator<std::function<Move* ()> >::~allocator() [878]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base() [1198]
[1196]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_deallocate(std::function<Move* ()>*, unsigned long) [1196]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<Move* ()> > >::deallocate(std::allocator<std::function<Move* ()> >&, std::function<Move* ()>*, unsigned long) [1292]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
[1197]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_base(std::allocator<std::function<Move* ()> > const&) [1197]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::_Vector_impl(std::allocator<std::function<Move* ()> > const&) [1194]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector() [1343]
[1198]   0.0    0.00    0.00       1         std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base() [1198]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_deallocate(std::function<Move* ()>*, unsigned long) [1196]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::~_Vector_impl() [1195]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base() [1200]
[1199]   0.0    0.00    0.00       1         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl() [1199]
                0.00    0.00       1/4           std::allocator<unsigned int>::allocator() [651]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::vector() [1346]
[1200]   0.0    0.00    0.00       1         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base() [1200]
                0.00    0.00       1/1           std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl() [1199]
-----------------------------------------------
                0.00    0.00       1/1           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
[1201]   0.0    0.00    0.00       1         std::move_iterator<Location*>::operator++() [1201]
-----------------------------------------------
                0.00    0.00       1/1           Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
[1202]   0.0    0.00    0.00       1         std::move_iterator<Solution::InterceptorNode*>::operator++() [1202]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
[1203]   0.0    0.00    0.00       1         std::move_iterator<double*>::operator++() [1203]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
[1204]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&) [1204]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [794]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>) [1205]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&) [1204]
[1205]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>) [1205]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [794]
                0.00    0.00       1/4           main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() [679]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
[1206]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<{lambda()#2}>({lambda()#2} const&) [1206]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) [759]
[1207]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>) [1207]
                0.00    0.00       1/6           main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const [542]
                0.00    0.00       1/4           main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() [679]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
[1208]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&) [1208]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&) [795]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>) [1209]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&) [1208]
[1209]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>) [1209]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&) [795]
                0.00    0.00       1/4           main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() [680]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
[1210]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<{lambda()#12}>({lambda()#12} const&) [1210]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) [760]
[1211]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>) [1211]
                0.00    0.00       1/9           main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const [459]
                0.00    0.00       1/4           main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() [680]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
[1212]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&) [1212]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&) [796]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>) [1213]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&) [1212]
[1213]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>) [1213]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&) [796]
                0.00    0.00       1/4           main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() [681]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
[1214]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<{lambda()#13}>({lambda()#13} const&) [1214]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) [761]
[1215]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>) [1215]
                0.00    0.00       1/6           main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const [543]
                0.00    0.00       1/4           main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() [681]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
[1216]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&) [1216]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&) [797]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>) [1217]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&) [1216]
[1217]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>) [1217]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&) [797]
                0.00    0.00       1/4           main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() [682]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
[1218]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<{lambda()#14}>({lambda()#14} const&) [1218]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) [762]
[1219]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>) [1219]
                0.00    0.00       1/5           main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const [590]
                0.00    0.00       1/4           main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() [682]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
[1220]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&) [1220]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&) [798]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>) [1221]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&) [1220]
[1221]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>) [1221]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&) [798]
                0.00    0.00       1/4           main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() [683]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
[1222]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<{lambda()#15}>({lambda()#15} const&) [1222]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) [763]
[1223]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>) [1223]
                0.00    0.00       1/6           main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const [544]
                0.00    0.00       1/4           main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() [683]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
[1224]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&) [1224]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&) [799]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>) [1225]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&) [1224]
[1225]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>) [1225]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&) [799]
                0.00    0.00       1/4           main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() [684]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
[1226]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<{lambda()#16}>({lambda()#16} const&) [1226]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) [764]
[1227]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>) [1227]
                0.00    0.00       1/7           main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const [506]
                0.00    0.00       1/4           main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() [684]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
[1228]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&) [1228]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&) [800]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>) [1229]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&) [1228]
[1229]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>) [1229]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&) [800]
                0.00    0.00       1/4           main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() [685]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
[1230]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<{lambda()#3}>({lambda()#3} const&) [1230]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) [765]
[1231]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>) [1231]
                0.00    0.00       1/8           main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const [472]
                0.00    0.00       1/4           main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() [685]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
[1232]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&) [1232]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [801]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>) [1233]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&) [1232]
[1233]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>) [1233]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [801]
                0.00    0.00       1/4           main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() [686]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
[1234]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<{lambda()#4}>({lambda()#4} const&) [1234]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) [766]
[1235]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>) [1235]
                0.00    0.00       1/3           main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const [735]
                0.00    0.00       1/4           main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() [686]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
[1236]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&) [1236]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [802]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>) [1237]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&) [1236]
[1237]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>) [1237]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [802]
                0.00    0.00       1/4           main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() [687]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
[1238]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<{lambda()#5}>({lambda()#5} const&) [1238]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) [767]
[1239]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>) [1239]
                0.00    0.00       1/6           main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const [545]
                0.00    0.00       1/4           main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() [687]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
[1240]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&) [1240]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&) [803]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>) [1241]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&) [1240]
[1241]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>) [1241]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&) [803]
                0.00    0.00       1/4           main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() [688]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
[1242]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<{lambda()#6}>({lambda()#6} const&) [1242]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) [768]
[1243]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>) [1243]
                0.00    0.00       1/7           main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const [507]
                0.00    0.00       1/4           main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() [688]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
[1244]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&) [1244]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&) [804]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>) [1245]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&) [1244]
[1245]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>) [1245]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&) [804]
                0.00    0.00       1/4           main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() [689]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
[1246]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<{lambda()#7}>({lambda()#7} const&) [1246]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) [769]
[1247]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>) [1247]
                0.00    0.00       1/6           main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const [546]
                0.00    0.00       1/4           main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() [689]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
[1248]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&) [1248]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&) [805]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>) [1249]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&) [1248]
[1249]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>) [1249]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&) [805]
                0.00    0.00       1/4           main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() [690]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
[1250]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<{lambda()#8}>({lambda()#8} const&) [1250]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) [770]
[1251]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>) [1251]
                0.00    0.00       1/5           main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const [591]
                0.00    0.00       1/4           main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() [690]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
[1252]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&) [1252]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&) [806]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>) [1253]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&) [1252]
[1253]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>) [1253]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&) [806]
                0.00    0.00       1/4           main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() [691]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
[1254]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<{lambda()#9}>({lambda()#9} const&) [1254]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) [771]
[1255]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>) [1255]
                0.00    0.00       1/4           main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const [649]
                0.00    0.00       1/4           main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() [691]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
[1256]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&) [1256]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&) [807]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>) [1257]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&) [1256]
[1257]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>) [1257]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&) [807]
                0.00    0.00       1/4           main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() [692]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
[1258]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<{lambda()#10}>({lambda()#10} const&) [1258]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) [773]
[1259]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>) [1259]
                0.00    0.00       1/6           main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const [547]
                0.00    0.00       1/4           main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() [692]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
[1260]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&) [1260]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&) [808]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>) [1261]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&) [1260]
[1261]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>) [1261]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&) [808]
                0.00    0.00       1/4           main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() [693]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
[1262]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<{lambda()#11}>({lambda()#11} const&) [1262]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) [774]
[1263]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>) [1263]
                0.00    0.00       1/4           main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const [650]
                0.00    0.00       1/4           main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() [693]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
[1264]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [1264]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [809]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>) [1265]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [1264]
[1265]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>) [1265]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [809]
                0.00    0.00       1/4           main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [694]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
[1266]   0.0    0.00    0.00       1         bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<{lambda()#1}>({lambda()#1} const&) [1266]
-----------------------------------------------
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) [776]
[1267]   0.0    0.00    0.00       1         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>) [1267]
                0.00    0.00       1/8           main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const [473]
                0.00    0.00       1/4           main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [694]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long) [886]
[1268]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Interceptor> >::deallocate(std::allocator<Interceptor>&, Interceptor*, unsigned long) [1268]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Interceptor>::deallocate(Interceptor*, unsigned long) [1054]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Interceptor> >::max_size(std::allocator<Interceptor> const&) [1271]
[1269]   0.0    0.00    0.00       1         unsigned long std::allocator_traits<std::allocator<Interceptor> >::_S_max_size<std::allocator<Interceptor> const, void>(std::allocator<Interceptor> const&, int) [1269]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Interceptor>::max_size() const [850]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_allocate(unsigned long) [1147]
[1270]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Interceptor> >::allocate(std::allocator<Interceptor>&, unsigned long) [1270]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Interceptor>::allocate(unsigned long, void const*) [1055]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const [1112]
[1271]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Interceptor> >::max_size(std::allocator<Interceptor> const&) [1271]
                0.00    0.00       1/1           unsigned long std::allocator_traits<std::allocator<Interceptor> >::_S_max_size<std::allocator<Interceptor> const, void>(std::allocator<Interceptor> const&, int) [1269]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long) [887]
[1272]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Depot> >::deallocate(std::allocator<Depot>&, Depot*, unsigned long) [1272]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Depot>::deallocate(Depot*, unsigned long) [1058]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Depot> >::max_size(std::allocator<Depot> const&) [1275]
[1273]   0.0    0.00    0.00       1         unsigned long std::allocator_traits<std::allocator<Depot> >::_S_max_size<std::allocator<Depot> const, void>(std::allocator<Depot> const&, int) [1273]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Depot>::max_size() const [851]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_M_allocate(unsigned long) [1152]
[1274]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Depot> >::allocate(std::allocator<Depot>&, unsigned long) [1274]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Depot>::allocate(unsigned long, void const*) [1059]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::max_size() const [1115]
[1275]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Depot> >::max_size(std::allocator<Depot> const&) [1275]
                0.00    0.00       1/1           unsigned long std::allocator_traits<std::allocator<Depot> >::_S_max_size<std::allocator<Depot> const, void>(std::allocator<Depot> const&, int) [1273]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long) [888]
[1276]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Mobile> >::deallocate(std::allocator<Mobile>&, Mobile*, unsigned long) [1276]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Mobile>::deallocate(Mobile*, unsigned long) [1062]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<Mobile> >::max_size(std::allocator<Mobile> const&) [1279]
[1277]   0.0    0.00    0.00       1         unsigned long std::allocator_traits<std::allocator<Mobile> >::_S_max_size<std::allocator<Mobile> const, void>(std::allocator<Mobile> const&, int) [1277]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<Mobile>::max_size() const [852]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_allocate(unsigned long) [1157]
[1278]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Mobile> >::allocate(std::allocator<Mobile>&, unsigned long) [1278]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Mobile>::allocate(unsigned long, void const*) [1063]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::max_size() const [1117]
[1279]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Mobile> >::max_size(std::allocator<Mobile> const&) [1279]
                0.00    0.00       1/1           unsigned long std::allocator_traits<std::allocator<Mobile> >::_S_max_size<std::allocator<Mobile> const, void>(std::allocator<Mobile> const&, int) [1277]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long) [890]
[1280]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Problem*> >::deallocate(std::allocator<Problem*>&, Problem**, unsigned long) [1280]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Problem*>::deallocate(Problem**, unsigned long) [1071]
-----------------------------------------------
                0.00    0.00       1/1           decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&) [1283]
[1281]   0.0    0.00    0.00       1         _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [1281]
                0.00    0.00       1/5           Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
                0.00    0.00       1/1           _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_ [1073]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_allocate(unsigned long) [1172]
[1282]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Problem*> >::allocate(std::allocator<Problem*>&, unsigned long) [1282]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Problem*>::allocate(unsigned long, void const*) [1072]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[1283]   0.0    0.00    0.00       1         decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&) [1283]
                0.00    0.00       1/5           Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
                0.00    0.00       1/1           _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [1281]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long) [891]
[1284]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Solution*> >::deallocate(std::allocator<Solution*>&, Solution**, unsigned long) [1284]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution*>::deallocate(Solution**, unsigned long) [1076]
-----------------------------------------------
                0.00    0.00       1/1           decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1287]
[1285]   0.0    0.00    0.00       1         std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1285]
                0.00    0.00       1/5           Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
                0.00    0.00       1/1           _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_ [1078]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_allocate(unsigned long) [1177]
[1286]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<Solution*> >::allocate(std::allocator<Solution*>&, unsigned long) [1286]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Solution*>::allocate(unsigned long, void const*) [1077]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[1287]   0.0    0.00    0.00       1         decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1287]
                0.00    0.00       1/5           Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
                0.00    0.00       1/1           std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1285]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long) [1185]
[1288]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned long) [1288]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::deallocate(char const**, unsigned long) [1081]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long) [1182]
[1289]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<char const*> >::allocate(std::allocator<char const*>&, unsigned long) [1289]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*) [1082]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [898]
[1290]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::deallocate(std::allocator<std::vector<double, std::allocator<double> > >&, std::vector<double, std::allocator<double> >*, unsigned long) [1290]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [1087]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_allocate(unsigned long) [1188]
[1291]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::allocate(std::allocator<std::vector<double, std::allocator<double> > >&, unsigned long) [1291]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::allocate(unsigned long, void const*) [1088]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_deallocate(std::function<Move* ()>*, unsigned long) [1196]
[1292]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<Move* ()> > >::deallocate(std::allocator<std::function<Move* ()> >&, std::function<Move* ()>*, unsigned long) [1292]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::deallocate(std::function<Move* ()>*, unsigned long) [1091]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_allocate(unsigned long) [1193]
[1293]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<Move* ()> > >::allocate(std::allocator<std::function<Move* ()> >&, unsigned long) [1293]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<Move* ()> >::allocate(unsigned long, void const*) [1092]
-----------------------------------------------
                0.00    0.00       1/1           Depot* std::uninitialized_copy<Depot*, Depot*>(Depot*, Depot*, Depot*) [1384]
[1294]   0.0    0.00    0.00       1         Depot* std::__uninitialized_copy<false>::__uninit_copy<Depot*, Depot*>(Depot*, Depot*, Depot*) [1294]
-----------------------------------------------
                0.00    0.00       1/1           char const** std::uninitialized_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1385]
[1295]   0.0    0.00    0.00       1         char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1295]
                0.00    0.00       1/1           char const** std::__addressof<char const*>(char const*&) [1381]
                0.00    0.00       1/1           void std::_Construct<char const*, char const* const&>(char const**, char const* const&) [1375]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>* std::uninitialized_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1386]
[1296]   0.0    0.00    0.00       1         std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1296]
                0.00    0.00      16/32          std::function<Move* ()>* std::__addressof<std::function<Move* ()> >(std::function<Move* ()>&) [258]
                0.00    0.00      16/16          void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&) [321]
-----------------------------------------------
                0.00    0.00       1/1           Interceptor* std::uninitialized_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1387]
[1297]   0.0    0.00    0.00       1         Interceptor* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1297]
                0.00    0.00       1/1           bool std::operator!=<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1428]
-----------------------------------------------
                0.00    0.00       1/1           Mobile* std::uninitialized_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1388]
[1298]   0.0    0.00    0.00       1         Mobile* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1298]
                0.00    0.00       1/1           bool std::operator!=<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1429]
-----------------------------------------------
                0.00    0.00       1/1           Problem** std::uninitialized_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1389]
[1299]   0.0    0.00    0.00       1         Problem** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1299]
                0.00    0.00       1/1           bool std::operator!=<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1430]
-----------------------------------------------
                0.00    0.00       1/1           Solution** std::uninitialized_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1390]
[1300]   0.0    0.00    0.00       1         Solution** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1300]
                0.00    0.00       1/1           bool std::operator!=<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1431]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::uninitialized_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1391]
[1301]   0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1301]
                0.00    0.00       1/1           bool std::operator!=<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1432]
-----------------------------------------------
                0.00    0.00       1/1           void std::__uninitialized_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1402]
[1302]   0.0    0.00    0.00       1         void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1302]
                0.00    0.00       2/2           void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*) [971]
                0.00    0.00       2/4           std::vector<double, std::allocator<double> >* std::__addressof<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >&) [695]
-----------------------------------------------
                0.00    0.00       1/1           void std::__uninitialized_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1403]
[1303]   0.0    0.00    0.00       1         void std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1303]
                0.00    0.00       1/1           unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1413]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long) [62]
[1304]   0.0    0.00    0.00       1         Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>) [1304]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_allocate(unsigned long) [1147]
                0.00    0.00       1/3           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() [743]
                0.00    0.00       1/1           Interceptor* std::__uninitialized_copy_a<std::move_iterator<Interceptor*>, Interceptor*, Interceptor>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*, std::allocator<Interceptor>&) [1397]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[1305]   0.0    0.00    0.00       1         std::vector<Interceptor, std::allocator<Interceptor> >::vector() [1305]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_base() [1150]
-----------------------------------------------
                0.00    0.00       1/1           Problem::~Problem() [1049]
[1306]   0.0    0.00    0.00       1         std::vector<Interceptor, std::allocator<Interceptor> >::~vector() [1306]
                0.00    0.00       1/3           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() [743]
                0.00    0.00       1/2           void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&) [1002]
                0.00    0.00       1/1           std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base() [1151]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
[1307]   0.0    0.00    0.00       1         Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*) [1307]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_M_allocate(unsigned long) [1152]
                0.00    0.00       1/3           std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() [744]
                0.00    0.00       1/1           Depot* std::__uninitialized_copy_a<Depot*, Depot*, Depot>(Depot*, Depot*, Depot*, std::allocator<Depot>&) [1394]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[1308]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long) [1308]
                0.00    0.00       2/2           Depot* std::__make_move_if_noexcept_iterator<Depot*, Depot*>(Depot*) [989]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::max_size() const [1115]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::capacity() const [1114]
                0.00    0.00       1/1           std::vector<Depot, std::allocator<Depot> >::size() const [1113]
                0.00    0.00       1/1           Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*) [1307]
                0.00    0.00       1/3           std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() [744]
                0.00    0.00       1/2           void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&) [1004]
                0.00    0.00       1/2           std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long) [887]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[1309]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::vector() [1309]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_base() [1155]
-----------------------------------------------
                0.00    0.00       1/1           Problem::~Problem() [1049]
[1310]   0.0    0.00    0.00       1         std::vector<Depot, std::allocator<Depot> >::~vector() [1310]
                0.00    0.00       1/3           std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() [744]
                0.00    0.00       1/2           void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&) [1004]
                0.00    0.00       1/1           std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base() [1156]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
[1311]   0.0    0.00    0.00       1         Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>) [1311]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_allocate(unsigned long) [1157]
                0.00    0.00       1/3           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() [745]
                0.00    0.00       1/1           Mobile* std::__uninitialized_copy_a<std::move_iterator<Mobile*>, Mobile*, Mobile>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*, std::allocator<Mobile>&) [1398]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[1312]   0.0    0.00    0.00       1         std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long) [1312]
                0.00    0.00       2/2           std::move_iterator<Mobile*> std::__make_move_if_noexcept_iterator<Mobile*, std::move_iterator<Mobile*> >(Mobile*) [990]
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::max_size() const [1117]
                0.00    0.00       1/1           std::vector<Mobile, std::allocator<Mobile> >::capacity() const [1116]
                0.00    0.00       1/23          std::vector<Mobile, std::allocator<Mobile> >::size() const [276]
                0.00    0.00       1/1           Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>) [1311]
                0.00    0.00       1/3           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() [745]
                0.00    0.00       1/2           void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&) [1006]
                0.00    0.00       1/2           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long) [888]
-----------------------------------------------
                0.00    0.00       1/1           Problem::Problem(char const*) [61]
[1313]   0.0    0.00    0.00       1         std::vector<Mobile, std::allocator<Mobile> >::vector() [1313]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_base() [1160]
-----------------------------------------------
                0.00    0.00       1/1           Problem::~Problem() [1049]
[1314]   0.0    0.00    0.00       1         std::vector<Mobile, std::allocator<Mobile> >::~vector() [1314]
                0.00    0.00       1/3           std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() [745]
                0.00    0.00       1/1           std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base() [1161]
                0.00    0.00       1/2           void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&) [1006]
-----------------------------------------------
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[1315]   0.0    0.00    0.00       1         std::vector<Location, std::allocator<Location> >::vector() [1315]
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::_Vector_base() [1164]
-----------------------------------------------
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[1316]   0.0    0.00    0.00       1         std::vector<Location, std::allocator<Location> >::~vector() [1316]
                0.00    0.00       1/5           std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() [592]
                0.00    0.00       1/3           void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&) [812]
                0.00    0.00       1/1           std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base() [1165]
-----------------------------------------------
                0.00    0.00       1/1           Solution::Solution(Problem const&) [1050]
[1317]   0.0    0.00    0.00       1         std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector() [1317]
                0.00    0.00       1/1           std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base() [1167]
-----------------------------------------------
                0.00    0.00       1/1           Solution::Solution(Problem const&) [1050]
[1318]   0.0    0.00    0.00       1         std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector() [1318]
                0.00    0.00       1/1           std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base() [1169]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1319]   0.0    0.00    0.00       1         std::vector<Move*, std::allocator<Move*> >::vector() [1319]
                0.00    0.00       1/1           std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base() [1171]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1320]   0.0    0.00    0.00       1         void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&) [1320]
                0.00    0.00       1/5           Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&) [1320]
[1321]   0.0    0.00    0.00       1         void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
                0.00    0.00       2/3           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() [747]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [1118]
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_allocate(unsigned long) [1172]
                0.00    0.00       1/5           Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&) [616]
                0.00    0.00       1/7           std::vector<Problem*, std::allocator<Problem*> >::size() const [504]
                0.00    0.00       1/1           decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&) [1283]
                0.00    0.00       1/1           Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&) [1406]
                0.00    0.00       1/2           void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&) [1008]
                0.00    0.00       1/2           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long) [890]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::back() [1323]
[1322]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::end() [1322]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::__normal_iterator(Problem** const&) [846]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1323]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::back() [1323]
                0.00    0.00       1/1           std::vector<Problem*, std::allocator<Problem*> >::end() [1322]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator-(long) const [1099]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator*() const [1098]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1324]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::vector() [1324]
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_base() [1175]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1325]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::~vector() [1325]
                0.00    0.00       1/3           std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() [747]
                0.00    0.00       1/2           void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&) [1008]
                0.00    0.00       1/1           std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base() [1176]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1326]   0.0    0.00    0.00       1         std::vector<Problem*, std::allocator<Problem*> >::operator[](unsigned long) [1326]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1327]   0.0    0.00    0.00       1         void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&) [1327]
                0.00    0.00       1/5           Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&) [1327]
[1328]   0.0    0.00    0.00       1         void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
                0.00    0.00       2/3           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() [748]
                0.00    0.00       1/1           std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [1119]
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_allocate(unsigned long) [1177]
                0.00    0.00       1/5           Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&) [617]
                0.00    0.00       1/5           std::vector<Solution*, std::allocator<Solution*> >::size() const [588]
                0.00    0.00       1/1           decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1287]
                0.00    0.00       1/1           Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&) [1407]
                0.00    0.00       1/2           void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&) [1010]
                0.00    0.00       1/2           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long) [891]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1329]   0.0    0.00    0.00       1         std::vector<Solution*, std::allocator<Solution*> >::vector() [1329]
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_base() [1180]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1330]   0.0    0.00    0.00       1         std::vector<Solution*, std::allocator<Solution*> >::~vector() [1330]
                0.00    0.00       1/3           std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() [748]
                0.00    0.00       1/1           std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base() [1181]
                0.00    0.00       1/2           void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&) [1010]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1331]   0.0    0.00    0.00       1         std::vector<Solution*, std::allocator<Solution*> >::operator[](unsigned long) [1331]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
[1332]   0.0    0.00    0.00       1         void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
                0.00    0.00       1/1           std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*) [1421]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long) [1182]
                0.00    0.00       1/2           std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator() [897]
                0.00    0.00       1/1           char const** std::__uninitialized_copy_a<char const* const*, char const**, char const*>(char const* const*, char const* const*, char const**, std::allocator<char const*>&) [1395]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1333]   0.0    0.00    0.00       1         std::vector<char const*, std::allocator<char const*> >::begin() [1333]
                0.00    0.00       1/3           __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&) [727]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1334]   0.0    0.00    0.00       1         std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&) [1334]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base(std::allocator<char const*> const&) [1186]
                0.00    0.00       1/1           std::initializer_list<char const*>::end() const [1107]
                0.00    0.00       1/2           std::initializer_list<char const*>::begin() const [864]
                0.00    0.00       1/1           void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1335]   0.0    0.00    0.00       1         std::vector<char const*, std::allocator<char const*> >::~vector() [1335]
                0.00    0.00       1/2           std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator() [897]
                0.00    0.00       1/1           std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() [1187]
                0.00    0.00       1/1           void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&) [1418]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long) [1339]
[1336]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
                0.00    0.00       3/4           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() [654]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [1120]
                0.00    0.00       1/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [505]
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_allocate(unsigned long) [1188]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1408]
                0.00    0.00       1/1           void std::__uninitialized_default_n_a<std::vector<double, std::allocator<double> >*, unsigned long, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, unsigned long, std::allocator<std::vector<double, std::allocator<double> > >&) [1404]
                0.00    0.00       1/2           void std::_Destroy<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1012]
                0.00    0.00       1/2           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [898]
-----------------------------------------------
                0.00    0.00       1/1           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[1337]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::end() [1337]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::__normal_iterator(std::vector<double, std::allocator<double> >* const&) [847]
-----------------------------------------------
                0.00    0.00       1/1           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[1338]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::begin() [1338]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::__normal_iterator(std::vector<double, std::allocator<double> >* const&) [847]
-----------------------------------------------
                0.00    0.00       1/1           SimpleCachePolicy::init(unsigned int, unsigned int) [1048]
[1339]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long) [1339]
                0.00    0.00       2/7           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [505]
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [1034]
[1340]   0.0    0.00    0.00       1         std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::vector() [1340]
                0.00    0.00       1/1           std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_base() [1191]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
[1341]   0.0    0.00    0.00       1         void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
                0.00    0.00       1/1           std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*) [1422]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_allocate(unsigned long) [1193]
                0.00    0.00       1/2           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_get_Tp_allocator() [899]
                0.00    0.00       1/1           std::function<Move* ()>* std::__uninitialized_copy_a<std::function<Move* ()> const*, std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1396]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1342]   0.0    0.00    0.00       1         std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&) [1342]
                0.00    0.00       1/1           std::initializer_list<std::function<Move* ()> >::end() const [1109]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_base(std::allocator<std::function<Move* ()> > const&) [1197]
                0.00    0.00       1/2           std::initializer_list<std::function<Move* ()> >::begin() const [865]
                0.00    0.00       1/1           void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1343]   0.0    0.00    0.00       1         std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector() [1343]
                0.00    0.00       1/2           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_get_Tp_allocator() [899]
                0.00    0.00       1/1           void std::_Destroy<std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()>*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1420]
                0.00    0.00       1/1           std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base() [1198]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&) [1345]
[1344]   0.0    0.00    0.00       1         std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long) [1344]
                0.00    0.00       1/105         std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [168]
                0.00    0.00       1/1           void std::__uninitialized_default_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, std::allocator<unsigned int>&) [1405]
-----------------------------------------------
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[1345]   0.0    0.00    0.00       1         std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&) [1345]
                0.00    0.00       1/41          std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [232]
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long) [1344]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1346]   0.0    0.00    0.00       1         std::vector<unsigned int, std::allocator<unsigned int> >::vector() [1346]
                0.00    0.00       1/1           std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base() [1200]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl() [1348]
[1347]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_M_initialize() [1347]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree() [1352]
[1348]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl() [1348]
                0.00    0.00       1/1           std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocator() [1138]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_M_initialize() [1347]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree() [1353]
[1349]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::~_Rb_tree_impl() [1349]
                0.00    0.00       1/1           std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~allocator() [1139]
-----------------------------------------------
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1370]
[1350]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1350]
                0.00    0.00       1/22          std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [294]
-----------------------------------------------
                                  10             std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree() [1353]
[1351]   0.0    0.00    0.00       1+10      std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
                0.00    0.00      10/37          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_right(std::_Rb_tree_node_base*) [246]
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_left(std::_Rb_tree_node_base*) [450]
                0.00    0.00      10/10          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [447]
                                  10             std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
-----------------------------------------------
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::multimap() [1371]
[1352]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree() [1352]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl() [1348]
-----------------------------------------------
                0.00    0.00       1/1           std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~multimap() [1372]
[1353]   0.0    0.00    0.00       1         std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree() [1353]
                0.00    0.00       1/11          std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_begin() [383]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*) [1351]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::~_Rb_tree_impl() [1349]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1354]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) [1354]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<{lambda()#2}>({lambda()#2} const&) [1206]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [794]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&) [1204]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1355]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) [1355]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<{lambda()#12}>({lambda()#12} const&) [1210]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&) [795]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&) [1208]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1356]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) [1356]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<{lambda()#13}>({lambda()#13} const&) [1214]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&) [796]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&) [1212]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1357]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) [1357]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<{lambda()#14}>({lambda()#14} const&) [1218]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&) [797]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&) [1216]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1358]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) [1358]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<{lambda()#15}>({lambda()#15} const&) [1222]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&) [798]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&) [1220]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1359]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) [1359]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<{lambda()#16}>({lambda()#16} const&) [1226]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&) [799]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&) [1224]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1360]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) [1360]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<{lambda()#3}>({lambda()#3} const&) [1230]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&) [800]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&) [1228]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1361]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) [1361]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<{lambda()#4}>({lambda()#4} const&) [1234]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [801]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&) [1232]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1362]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) [1362]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<{lambda()#5}>({lambda()#5} const&) [1238]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [802]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&) [1236]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1363]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) [1363]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<{lambda()#6}>({lambda()#6} const&) [1242]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&) [803]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&) [1240]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1364]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) [1364]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<{lambda()#7}>({lambda()#7} const&) [1246]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&) [804]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&) [1244]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1365]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) [1365]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<{lambda()#8}>({lambda()#8} const&) [1250]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&) [805]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&) [1248]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1366]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) [1366]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<{lambda()#9}>({lambda()#9} const&) [1254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&) [806]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&) [1252]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1367]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) [1367]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<{lambda()#10}>({lambda()#10} const&) [1258]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&) [807]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&) [1256]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1368]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) [1368]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<{lambda()#11}>({lambda()#11} const&) [1262]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&) [808]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&) [1260]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1369]   0.0    0.00    0.00       1         std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) [1369]
                0.00    0.00       1/32          std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function() [256]
                0.00    0.00       1/32          std::_Function_base::_Function_base() [254]
                0.00    0.00       1/1           bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<{lambda()#1}>({lambda()#1} const&) [1266]
                0.00    0.00       1/3           std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [809]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [1264]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1370]   0.0    0.00    0.00       1         std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1370]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin() [1350]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1371]   0.0    0.00    0.00       1         std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::multimap() [1371]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree() [1352]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1372]   0.0    0.00    0.00       1         std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~multimap() [1372]
                0.00    0.00       1/1           std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree() [1353]
-----------------------------------------------
                0.00    0.00       1/1           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
[1373]   0.0    0.00    0.00       1         _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_ [1373]
                0.00    0.00       1/1           Location&& std::forward<Location>(std::remove_reference<Location>::type&) [1414]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*) [948]
[1374]   0.0    0.00    0.00       1         void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&) [1374]
                0.00    0.00       1/1           Solution::InterceptorNode&& std::forward<Solution::InterceptorNode>(std::remove_reference<Solution::InterceptorNode>::type&) [1415]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1295]
[1375]   0.0    0.00    0.00       1         void std::_Construct<char const*, char const* const&>(char const**, char const* const&) [1375]
                0.00    0.00       1/1           char const* const& std::forward<char const* const&>(std::remove_reference<char const* const&>::type&) [1416]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
[1376]   0.0    0.00    0.00       1         void std::_Construct<double, double>(double*, double&&) [1376]
                0.00    0.00       1/11          double&& std::forward<double>(std::remove_reference<double>::type&) [389]
                0.00    0.00       1/751         operator new(unsigned long, void*) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*) [1421]
[1377]   0.0    0.00    0.00       1         std::iterator_traits<char const* const*>::difference_type std::__distance<char const* const*>(char const* const*, char const* const*, std::random_access_iterator_tag) [1377]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*) [1422]
[1378]   0.0    0.00    0.00       1         std::iterator_traits<std::function<Move* ()> const*>::difference_type std::__distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::random_access_iterator_tag) [1378]
-----------------------------------------------
                0.00    0.00       1/1           unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1413]
[1379]   0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1379]
-----------------------------------------------
                0.00    0.00       1/1           Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*) [947]
[1380]   0.0    0.00    0.00       1         Location* std::__addressof<Location>(Location&) [1380]
-----------------------------------------------
                0.00    0.00       1/1           char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1295]
[1381]   0.0    0.00    0.00       1         char const** std::__addressof<char const*>(char const*&) [1381]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [673]
[1382]   0.0    0.00    0.00       1         double* std::__addressof<double>(double&) [1382]
-----------------------------------------------
                0.00    0.00       1/1           unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1413]
[1383]   0.0    0.00    0.00       1         std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*) [1383]
                0.00    0.00       1/1           std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*) [1144]
-----------------------------------------------
                0.00    0.00       1/1           Depot* std::__uninitialized_copy_a<Depot*, Depot*, Depot>(Depot*, Depot*, Depot*, std::allocator<Depot>&) [1394]
[1384]   0.0    0.00    0.00       1         Depot* std::uninitialized_copy<Depot*, Depot*>(Depot*, Depot*, Depot*) [1384]
                0.00    0.00       1/1           Depot* std::__uninitialized_copy<false>::__uninit_copy<Depot*, Depot*>(Depot*, Depot*, Depot*) [1294]
-----------------------------------------------
                0.00    0.00       1/1           char const** std::__uninitialized_copy_a<char const* const*, char const**, char const*>(char const* const*, char const* const*, char const**, std::allocator<char const*>&) [1395]
[1385]   0.0    0.00    0.00       1         char const** std::uninitialized_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1385]
                0.00    0.00       1/1           char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1295]
-----------------------------------------------
                0.00    0.00       1/1           std::function<Move* ()>* std::__uninitialized_copy_a<std::function<Move* ()> const*, std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1396]
[1386]   0.0    0.00    0.00       1         std::function<Move* ()>* std::uninitialized_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1386]
                0.00    0.00       1/1           std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1296]
-----------------------------------------------
                0.00    0.00       1/1           Interceptor* std::__uninitialized_copy_a<std::move_iterator<Interceptor*>, Interceptor*, Interceptor>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*, std::allocator<Interceptor>&) [1397]
[1387]   0.0    0.00    0.00       1         Interceptor* std::uninitialized_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1387]
                0.00    0.00       1/1           Interceptor* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1297]
-----------------------------------------------
                0.00    0.00       1/1           Mobile* std::__uninitialized_copy_a<std::move_iterator<Mobile*>, Mobile*, Mobile>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*, std::allocator<Mobile>&) [1398]
[1388]   0.0    0.00    0.00       1         Mobile* std::uninitialized_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1388]
                0.00    0.00       1/1           Mobile* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1298]
-----------------------------------------------
                0.00    0.00       1/1           Problem** std::__uninitialized_copy_a<std::move_iterator<Problem**>, Problem**, Problem*>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**, std::allocator<Problem*>&) [1399]
[1389]   0.0    0.00    0.00       1         Problem** std::uninitialized_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1389]
                0.00    0.00       1/1           Problem** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1299]
-----------------------------------------------
                0.00    0.00       1/1           Solution** std::__uninitialized_copy_a<std::move_iterator<Solution**>, Solution**, Solution*>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**, std::allocator<Solution*>&) [1400]
[1390]   0.0    0.00    0.00       1         Solution** std::uninitialized_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1390]
                0.00    0.00       1/1           Solution** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1300]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1401]
[1391]   0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >* std::uninitialized_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1391]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1301]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*) [1421]
[1392]   0.0    0.00    0.00       1         std::iterator_traits<char const* const*>::iterator_category std::__iterator_category<char const* const*>(char const* const* const&) [1392]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*) [1422]
[1393]   0.0    0.00    0.00       1         std::iterator_traits<std::function<Move* ()> const*>::iterator_category std::__iterator_category<std::function<Move* ()> const*>(std::function<Move* ()> const* const&) [1393]
-----------------------------------------------
                0.00    0.00       1/1           Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*) [1307]
[1394]   0.0    0.00    0.00       1         Depot* std::__uninitialized_copy_a<Depot*, Depot*, Depot>(Depot*, Depot*, Depot*, std::allocator<Depot>&) [1394]
                0.00    0.00       1/1           Depot* std::uninitialized_copy<Depot*, Depot*>(Depot*, Depot*, Depot*) [1384]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
[1395]   0.0    0.00    0.00       1         char const** std::__uninitialized_copy_a<char const* const*, char const**, char const*>(char const* const*, char const* const*, char const**, std::allocator<char const*>&) [1395]
                0.00    0.00       1/1           char const** std::uninitialized_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**) [1385]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
[1396]   0.0    0.00    0.00       1         std::function<Move* ()>* std::__uninitialized_copy_a<std::function<Move* ()> const*, std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1396]
                0.00    0.00       1/1           std::function<Move* ()>* std::uninitialized_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*) [1386]
-----------------------------------------------
                0.00    0.00       1/1           Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>) [1304]
[1397]   0.0    0.00    0.00       1         Interceptor* std::__uninitialized_copy_a<std::move_iterator<Interceptor*>, Interceptor*, Interceptor>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*, std::allocator<Interceptor>&) [1397]
                0.00    0.00       1/1           Interceptor* std::uninitialized_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1387]
-----------------------------------------------
                0.00    0.00       1/1           Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>) [1311]
[1398]   0.0    0.00    0.00       1         Mobile* std::__uninitialized_copy_a<std::move_iterator<Mobile*>, Mobile*, Mobile>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*, std::allocator<Mobile>&) [1398]
                0.00    0.00       1/1           Mobile* std::uninitialized_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1388]
-----------------------------------------------
                0.00    0.00       1/1           Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&) [1406]
[1399]   0.0    0.00    0.00       1         Problem** std::__uninitialized_copy_a<std::move_iterator<Problem**>, Problem**, Problem*>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**, std::allocator<Problem*>&) [1399]
                0.00    0.00       1/1           Problem** std::uninitialized_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1389]
-----------------------------------------------
                0.00    0.00       1/1           Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&) [1407]
[1400]   0.0    0.00    0.00       1         Solution** std::__uninitialized_copy_a<std::move_iterator<Solution**>, Solution**, Solution*>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**, std::allocator<Solution*>&) [1400]
                0.00    0.00       1/1           Solution** std::uninitialized_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1390]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1408]
[1401]   0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1401]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::uninitialized_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1391]
-----------------------------------------------
                0.00    0.00       1/1           void std::__uninitialized_default_n_a<std::vector<double, std::allocator<double> >*, unsigned long, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, unsigned long, std::allocator<std::vector<double, std::allocator<double> > >&) [1404]
[1402]   0.0    0.00    0.00       1         void std::__uninitialized_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1402]
                0.00    0.00       1/1           void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1302]
-----------------------------------------------
                0.00    0.00       1/1           void std::__uninitialized_default_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, std::allocator<unsigned int>&) [1405]
[1403]   0.0    0.00    0.00       1         void std::__uninitialized_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1403]
                0.00    0.00       1/1           void std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1303]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
[1404]   0.0    0.00    0.00       1         void std::__uninitialized_default_n_a<std::vector<double, std::allocator<double> >*, unsigned long, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, unsigned long, std::allocator<std::vector<double, std::allocator<double> > >&) [1404]
                0.00    0.00       1/1           void std::__uninitialized_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long) [1402]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long) [1344]
[1405]   0.0    0.00    0.00       1         void std::__uninitialized_default_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, std::allocator<unsigned int>&) [1405]
                0.00    0.00       1/1           void std::__uninitialized_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1403]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&) [1321]
[1406]   0.0    0.00    0.00       1         Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&) [1406]
                0.00    0.00       2/2           std::move_iterator<Problem**> std::__make_move_if_noexcept_iterator<Problem**, std::move_iterator<Problem**> >(Problem**) [991]
                0.00    0.00       1/1           Problem** std::__uninitialized_copy_a<std::move_iterator<Problem**>, Problem**, Problem*>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**, std::allocator<Problem*>&) [1399]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&) [1328]
[1407]   0.0    0.00    0.00       1         Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&) [1407]
                0.00    0.00       2/2           std::move_iterator<Solution**> std::__make_move_if_noexcept_iterator<Solution**, std::move_iterator<Solution**> >(Solution**) [992]
                0.00    0.00       1/1           Solution** std::__uninitialized_copy_a<std::move_iterator<Solution**>, Solution**, Solution*>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**, std::allocator<Solution*>&) [1400]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long) [1336]
[1408]   0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1408]
                0.00    0.00       2/2           std::move_iterator<std::vector<double, std::allocator<double> >*> std::__make_move_if_noexcept_iterator<std::vector<double, std::allocator<double> >*, std::move_iterator<std::vector<double, std::allocator<double> >*> >(std::vector<double, std::allocator<double> >*) [993]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&) [1401]
-----------------------------------------------
                0.00    0.00       1/1           void Heuristic_fastest<SimpleCachePolicy>::run<true>() [59]
[1409]   0.0    0.00    0.00       1         void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int) [1409]
                0.00    0.00       6/616         bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [146]
                0.00    0.00       5/726         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [144]
                0.00    0.00       5/330         __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [156]
-----------------------------------------------
                0.00    0.00       1/1           std::move_iterator<Location*>::operator*() const [1104]
[1410]   0.0    0.00    0.00       1         std::remove_reference<Location&>::type&& std::move<Location&>(Location&) [1410]
-----------------------------------------------
                0.00    0.00       1/1           std::move_iterator<Solution::InterceptorNode*>::operator*() const [1105]
[1411]   0.0    0.00    0.00       1         std::remove_reference<Solution::InterceptorNode&>::type&& std::move<Solution::InterceptorNode&>(Solution::InterceptorNode&) [1411]
-----------------------------------------------
                0.00    0.00       1/1           std::move_iterator<double*>::operator*() const [1106]
[1412]   0.0    0.00    0.00       1         std::remove_reference<double&>::type&& std::move<double&>(double&) [1412]
-----------------------------------------------
                0.00    0.00       1/1           void std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long) [1303]
[1413]   0.0    0.00    0.00       1         unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1413]
                0.00    0.00       1/1           std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*) [1383]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&) [1379]
-----------------------------------------------
                0.00    0.00       1/1           _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_ [1373]
[1414]   0.0    0.00    0.00       1         Location&& std::forward<Location>(std::remove_reference<Location>::type&) [1414]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&) [1374]
[1415]   0.0    0.00    0.00       1         Solution::InterceptorNode&& std::forward<Solution::InterceptorNode>(std::remove_reference<Solution::InterceptorNode>::type&) [1415]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Construct<char const*, char const* const&>(char const**, char const* const&) [1375]
[1416]   0.0    0.00    0.00       1         char const* const& std::forward<char const* const&>(std::remove_reference<char const* const&>::type&) [1416]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&) [1418]
[1417]   0.0    0.00    0.00       1         void std::_Destroy<char const**>(char const**, char const**) [1417]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<char const**>(char const**, char const**) [1146]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<char const*, std::allocator<char const*> >::~vector() [1335]
[1418]   0.0    0.00    0.00       1         void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&) [1418]
                0.00    0.00       1/1           void std::_Destroy<char const**>(char const**, char const**) [1417]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()>*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1420]
[1419]   0.0    0.00    0.00       1         void std::_Destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1419]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1145]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector() [1343]
[1420]   0.0    0.00    0.00       1         void std::_Destroy<std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()>*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&) [1420]
                0.00    0.00       1/1           void std::_Destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1419]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [1332]
[1421]   0.0    0.00    0.00       1         std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*) [1421]
                0.00    0.00       1/1           std::iterator_traits<char const* const*>::iterator_category std::__iterator_category<char const* const*>(char const* const* const&) [1392]
                0.00    0.00       1/1           std::iterator_traits<char const* const*>::difference_type std::__distance<char const* const*>(char const* const*, char const* const*, std::random_access_iterator_tag) [1377]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag) [1341]
[1422]   0.0    0.00    0.00       1         std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*) [1422]
                0.00    0.00       1/1           std::iterator_traits<std::function<Move* ()> const*>::iterator_category std::__iterator_category<std::function<Move* ()> const*>(std::function<Move* ()> const* const&) [1393]
                0.00    0.00       1/1           std::iterator_traits<std::function<Move* ()> const*>::difference_type std::__distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::random_access_iterator_tag) [1378]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1428]
[1423]   0.0    0.00    0.00       1         bool std::operator==<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1423]
                0.00    0.00       2/2           std::move_iterator<Interceptor*>::base() const [859]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1429]
[1424]   0.0    0.00    0.00       1         bool std::operator==<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1424]
                0.00    0.00       2/2           std::move_iterator<Mobile*>::base() const [860]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1430]
[1425]   0.0    0.00    0.00       1         bool std::operator==<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1425]
                0.00    0.00       2/2           std::move_iterator<Problem**>::base() const [861]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1431]
[1426]   0.0    0.00    0.00       1         bool std::operator==<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1426]
                0.00    0.00       2/2           std::move_iterator<Solution**>::base() const [862]
-----------------------------------------------
                0.00    0.00       1/1           bool std::operator!=<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1432]
[1427]   0.0    0.00    0.00       1         bool std::operator==<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1427]
                0.00    0.00       2/2           std::move_iterator<std::vector<double, std::allocator<double> >*>::base() const [863]
-----------------------------------------------
                0.00    0.00       1/1           Interceptor* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*) [1297]
[1428]   0.0    0.00    0.00       1         bool std::operator!=<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1428]
                0.00    0.00       1/1           bool std::operator==<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&) [1423]
-----------------------------------------------
                0.00    0.00       1/1           Mobile* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*) [1298]
[1429]   0.0    0.00    0.00       1         bool std::operator!=<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1429]
                0.00    0.00       1/1           bool std::operator==<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&) [1424]
-----------------------------------------------
                0.00    0.00       1/1           Problem** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**) [1299]
[1430]   0.0    0.00    0.00       1         bool std::operator!=<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1430]
                0.00    0.00       1/1           bool std::operator==<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&) [1425]
-----------------------------------------------
                0.00    0.00       1/1           Solution** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**) [1300]
[1431]   0.0    0.00    0.00       1         bool std::operator!=<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1431]
                0.00    0.00       1/1           bool std::operator==<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&) [1426]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*) [1301]
[1432]   0.0    0.00    0.00       1         bool std::operator!=<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1432]
                0.00    0.00       1/1           bool std::operator==<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&) [1427]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [1018] _GLOBAL__sub_I__ZN11InterceptorC2Ej (interceptor.cpp) [1119] std::vector<Solution*, std::allocator<Solution*> >::_M_check_len(unsigned long, char const*) const [555] std::_Function_handler<Move* (), main::{lambda()#6}>::_M_invoke(std::_Any_data const&) (functional)
 [1019] _GLOBAL__sub_I__ZN11TikzGrapher7_stylesE (tikzgrapher.cpp) [588] std::vector<Solution*, std::allocator<Solution*> >::size() const [609] std::_Function_handler<Move* (), main::{lambda()#7}>::_M_invoke(std::_Any_data const&) (functional)
 [1020] _GLOBAL__sub_I__ZN15AvailablePolicy20_max_acceptable_timeE (move_policies.cpp) [872] std::vector<Solution*, std::allocator<Solution*> >::max_size() const [670] std::_Function_handler<Move* (), main::{lambda()#8}>::_M_invoke(std::_Any_data const&) (functional)
 [1021] _GLOBAL__sub_I__ZN17SimpleCachePolicy6_cacheE (cache_policy.cpp) [873] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_check_len(unsigned long, char const*) const [779] std::_Function_handler<Move* (), main::{lambda()#9}>::_M_invoke(std::_Any_data const&) (functional)
 [1022] _GLOBAL__sub_I__ZN18Heuristic_sequenceC2ERK7Problem (heuristic_sequence.cpp) [414] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::size() const [610] std::_Function_handler<Move* (), main::{lambda()#10}>::_M_invoke(std::_Any_data const&) (functional)
 [1023] _GLOBAL__sub_I__ZN3VND7max_itrE (vnd.cpp) [646] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::max_size() const [780] std::_Function_handler<Move* (), main::{lambda()#11}>::_M_invoke(std::_Any_data const&) (functional)
 [1024] _GLOBAL__sub_I__ZN5DepotC2Ej (depot.cpp) [1120] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_check_len(unsigned long, char const*) const [516] std::_Function_handler<Move* (), main::{lambda()#1}>::_M_invoke(std::_Any_data const&) (functional)
 [1025] _GLOBAL__sub_I__ZN6MobileC2Ej (mobile.cpp) [505] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [294] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
 [1026] _GLOBAL__sub_I__ZN7ProblemC2Ev (problem.cpp) [874] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::max_size() const [426] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator++()
 [1027] _GLOBAL__sub_I__ZN8LocationC2Edd (units.cpp) [647] std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [377] Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*)
 [1028] _GLOBAL__sub_I__ZN8Solution10MobileNodeC2ERK6MobiledPK11Interceptor (solution.cpp) [271] std::vector<double, std::allocator<double> >::size() const [378] Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*)
 [1029] _GLOBAL__sub_I__ZN9HeuristicC2ERK7Problem (heuristic.cpp) [470] std::vector<double, std::allocator<double> >::max_size() const [427] Move** std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**)
 [1030] _GLOBAL__sub_I__ZN9Tikzifyer7_stylesE (tikzifyer.cpp) [648] std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const [240] unsigned int* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*)
 [1031] _GLOBAL__sub_I__ZlsRSoRK15BenchmarkResult (VNDBenchmark.cpp) [211] std::vector<unsigned int, std::allocator<unsigned int> >::end() const [1294] Depot* std::__uninitialized_copy<false>::__uninit_copy<Depot*, Depot*>(Depot*, Depot*, Depot*)
 [1032] __static_initialization_and_destruction_0(int, int) (VNDBenchmark.cpp) [207] std::vector<unsigned int, std::allocator<unsigned int> >::size() const [1295] char const** std::__uninitialized_copy<false>::__uninit_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**)
 [1033] __static_initialization_and_destruction_0(int, int) (depot.cpp) [212] std::vector<unsigned int, std::allocator<unsigned int> >::begin() const [781] std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*)
 [1034] __static_initialization_and_destruction_0(int, int) (cache_policy.cpp) [541] std::vector<unsigned int, std::allocator<unsigned int> >::empty() const [1296] std::function<Move* ()>* std::__uninitialized_copy<false>::__uninit_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*)
 [1035] __static_initialization_and_destruction_0(int, int) (heuristic.cpp) [589] std::vector<unsigned int, std::allocator<unsigned int> >::cbegin() const [946] unsigned int* std::__uninitialized_copy<false>::__uninit_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*)
 [1036] __static_initialization_and_destruction_0(int, int) (heuristic_sequence.cpp) [471] std::vector<unsigned int, std::allocator<unsigned int> >::max_size() const [1297] Interceptor* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*)
 [1037] __static_initialization_and_destruction_0(int, int) (interceptor.cpp) [189] std::function<Move* ()>::operator()() const [1298] Mobile* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*)
 [1038] __static_initialization_and_destruction_0(int, int) (mobile.cpp) [317] std::function<Move* ()>::operator bool() const [947] Location* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*)
 [1039] __static_initialization_and_destruction_0(int, int) (problem.cpp) [171] std::_Any_data::_M_access() const [671] Solution::MobileNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*)
 [1040] __static_initialization_and_destruction_0(int, int) (solution.cpp) [542] main::{lambda()#2}* const& std::_Any_data::_M_access<main::{lambda()#2}*>() const (functional) [948] Solution::InterceptorNode* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*)
 [1041] __static_initialization_and_destruction_0(int, int) (units.cpp) [459] main::{lambda()#12}* const& std::_Any_data::_M_access<main::{lambda()#12}*>() const (functional) [672] Move** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
 [1042] __static_initialization_and_destruction_0(int, int) (tikzifyer.cpp) [543] main::{lambda()#13}* const& std::_Any_data::_M_access<main::{lambda()#13}*>() const (functional) [1299] Problem** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**)
 [1043] __static_initialization_and_destruction_0(int, int) (tikzgrapher.cpp) [590] main::{lambda()#14}* const& std::_Any_data::_M_access<main::{lambda()#14}*>() const (functional) [1300] Solution** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**)
 [1044] __static_initialization_and_destruction_0(int, int) (move_policies.cpp) [544] main::{lambda()#15}* const& std::_Any_data::_M_access<main::{lambda()#15}*>() const (functional) [949] Interceptor const** std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**)
 [1045] __static_initialization_and_destruction_0(int, int) (vnd.cpp) [506] main::{lambda()#16}* const& std::_Any_data::_M_access<main::{lambda()#16}*>() const (functional) [1301] std::vector<double, std::allocator<double> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*)
  [48] MoveInsert<BestAvailablePolicy>::scan(Solution const&) [472] main::{lambda()#3}* const& std::_Any_data::_M_access<main::{lambda()#3}*>() const (functional) [673] double* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
 [495] MoveInsert<BestAvailablePolicy>::MoveInsert() [735] main::{lambda()#4}* const& std::_Any_data::_M_access<main::{lambda()#4}*>() const (functional) [674] unsigned int* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*)
 [496] MoveInsert<BestAvailablePolicy>::~MoveInsert() [545] main::{lambda()#5}* const& std::_Any_data::_M_access<main::{lambda()#5}*>() const (functional) [1302] void std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long)
 [497] MoveInsert<BestAvailablePolicy>::~MoveInsert() [507] main::{lambda()#6}* const& std::_Any_data::_M_access<main::{lambda()#6}*>() const (functional) [950] void std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long)
  [57] MoveInsert<FirstAvailablePolicy>::scan(Solution const&) [546] main::{lambda()#7}* const& std::_Any_data::_M_access<main::{lambda()#7}*>() const (functional) [1303] void std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long)
 [715] MoveInsert<FirstAvailablePolicy>::MoveInsert() [591] main::{lambda()#8}* const& std::_Any_data::_M_access<main::{lambda()#8}*>() const (functional) [256] std::_Maybe_unary_or_binary_function<Move*>::_Maybe_unary_or_binary_function()
 [716] MoveInsert<FirstAvailablePolicy>::~MoveInsert() [649] main::{lambda()#9}* const& std::_Any_data::_M_access<main::{lambda()#9}*>() const (functional) [428] std::pair<char const* const, BenchmarkResult>::pair<char const*, BenchmarkResult, void>(std::pair<char const*, BenchmarkResult>&&)
 [717] MoveInsert<FirstAvailablePolicy>::~MoveInsert() [547] main::{lambda()#10}* const& std::_Any_data::_M_access<main::{lambda()#10}*>() const (functional) [429] std::pair<char const* const, BenchmarkResult>::~pair()
   [8] Interceptor::computeAlpha(double, double, double) [650] main::{lambda()#11}* const& std::_Any_data::_M_access<main::{lambda()#11}*>() const (functional) [430] std::pair<char const*, BenchmarkResult>::pair<char const*&, BenchmarkResult, void>(char const*&, BenchmarkResult&&)
 [823] Interceptor::Interceptor(Depot const&, double, unsigned int, double) [473] main::{lambda()#1}* const& std::_Any_data::_M_access<main::{lambda()#1}*>() const (functional) [431] std::pair<char const*, BenchmarkResult>::~pair()
 [824] Interceptor::~Interceptor() [1121] std::allocator<Interceptor>::allocator() [432] std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, void>(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&)
  [32] MoveExtract<BestAvailablePolicy>::scan(Solution const&) [1122] std::allocator<Interceptor>::~allocator() [951] void std::vector<Interceptor, std::allocator<Interceptor> >::emplace_back<Depot&, double&, unsigned int&, double&>(Depot&, double&, unsigned int&, double&)
 [560] MoveExtract<BestAvailablePolicy>::MoveExtract() [1123] std::allocator<Depot>::allocator() [1304] Interceptor* std::vector<Interceptor, std::allocator<Interceptor> >::_M_allocate_and_copy<std::move_iterator<Interceptor*> >(unsigned long, std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>)
 [561] MoveExtract<BestAvailablePolicy>::~MoveExtract() [1124] std::allocator<Depot>::~allocator() [952] std::vector<Interceptor, std::allocator<Interceptor> >::end()
 [562] MoveExtract<BestAvailablePolicy>::~MoveExtract() [1125] std::allocator<Mobile>::allocator() [953] std::vector<Interceptor, std::allocator<Interceptor> >::back()
  [42] MoveExtract<FirstAvailablePolicy>::scan(Solution const&) [1126] std::allocator<Mobile>::~allocator() [62] std::vector<Interceptor, std::allocator<Interceptor> >::reserve(unsigned long)
 [563] MoveExtract<FirstAvailablePolicy>::MoveExtract() [1127] std::allocator<Location>::allocator() [1305] std::vector<Interceptor, std::allocator<Interceptor> >::vector()
 [564] MoveExtract<FirstAvailablePolicy>::~MoveExtract() [1128] std::allocator<Location>::~allocator() [1306] std::vector<Interceptor, std::allocator<Interceptor> >::~vector()
 [565] MoveExtract<FirstAvailablePolicy>::~MoveExtract() [1129] std::allocator<Solution::MobileNode>::allocator() [954] void std::vector<Depot, std::allocator<Depot> >::emplace_back<double&, double&, unsigned int&>(double&, double&, unsigned int&)
  [52] MoveReplace<BestAvailablePolicy>::scan(Solution const&) [292] std::allocator<Solution::MobileNode>::allocator(std::allocator<Solution::MobileNode> const&) [1307] Depot* std::vector<Depot, std::allocator<Depot> >::_M_allocate_and_copy<Depot*>(unsigned long, Depot*, Depot*)
 [566] MoveReplace<BestAvailablePolicy>::MoveReplace() [277] std::allocator<Solution::MobileNode>::~allocator() [1308] std::vector<Depot, std::allocator<Depot> >::reserve(unsigned long)
 [567] MoveReplace<BestAvailablePolicy>::~MoveReplace() [1130] std::allocator<Solution::InterceptorNode>::allocator() [1309] std::vector<Depot, std::allocator<Depot> >::vector()
 [568] MoveReplace<BestAvailablePolicy>::~MoveReplace() [293] std::allocator<Solution::InterceptorNode>::allocator(std::allocator<Solution::InterceptorNode> const&) [1310] std::vector<Depot, std::allocator<Depot> >::~vector()
  [50] MoveReplace<FirstAvailablePolicy>::scan(Solution const&) [278] std::allocator<Solution::InterceptorNode>::~allocator() [675] std::vector<Depot, std::allocator<Depot> >::operator[](unsigned long)
 [569] MoveReplace<FirstAvailablePolicy>::MoveReplace() [1131] std::allocator<Move*>::allocator() [611] void std::vector<Mobile, std::allocator<Mobile> >::emplace_back<double&, double&, double&, double&, unsigned int&>(double&, double&, double&, double&, unsigned int&)
 [570] MoveReplace<FirstAvailablePolicy>::~MoveReplace() [307] std::allocator<Move*>::allocator(std::allocator<Move*> const&) [1311] Mobile* std::vector<Mobile, std::allocator<Mobile> >::_M_allocate_and_copy<std::move_iterator<Mobile*> >(unsigned long, std::move_iterator<Mobile*>, std::move_iterator<Mobile*>)
 [571] MoveReplace<FirstAvailablePolicy>::~MoveReplace() [299] std::allocator<Move*>::~allocator() [1312] std::vector<Mobile, std::allocator<Mobile> >::reserve(unsigned long)
   [6] MoveMove1Route<BestAvailablePolicy>::scan(Solution const&) [1132] std::allocator<Problem*>::allocator() [1313] std::vector<Mobile, std::allocator<Mobile> >::vector()
  [34] MoveMove1Route<BestAvailablePolicy>::commit(Solution&) [1133] std::allocator<Problem*>::~allocator() [1314] std::vector<Mobile, std::allocator<Mobile> >::~vector()
 [498] MoveMove1Route<BestAvailablePolicy>::MoveMove1Route() [1134] std::allocator<Solution*>::allocator() [955] void std::vector<Location, std::allocator<Location> >::_M_emplace_back_aux<Location const&>(Location const&)
 [499] MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [1135] std::allocator<Solution*>::~allocator() [433] std::vector<Location, std::allocator<Location> >::end()
 [500] MoveMove1Route<BestAvailablePolicy>::~MoveMove1Route() [875] std::allocator<Interceptor const*>::allocator() [434] std::vector<Location, std::allocator<Location> >::back()
  [12] MoveMove1Route<FirstAvailablePolicy>::scan(Solution const&) [876] std::allocator<Interceptor const*>::~allocator() [956] std::vector<Location, std::allocator<Location> >::push_back(Location const&)
  [35] MoveMove1Route<FirstAvailablePolicy>::commit(Solution&) [118] std::allocator<Mobile const*>::allocator() [1315] std::vector<Location, std::allocator<Location> >::vector()
 [718] MoveMove1Route<FirstAvailablePolicy>::MoveMove1Route() [119] std::allocator<Mobile const*>::~allocator() [1316] std::vector<Location, std::allocator<Location> >::~vector()
 [719] MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [1136] std::allocator<char const*>::allocator(std::allocator<char const*> const&) [333] std::vector<Location, std::allocator<Location> >::operator[](unsigned long)
 [720] MoveMove1Route<FirstAvailablePolicy>::~MoveMove1Route() [1137] std::allocator<char const*>::allocator() [612] void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::emplace_back<Mobile const&>(Mobile const&)
  [11] MoveSwap1Route<BestAvailablePolicy>::scan(Solution const&) [877] std::allocator<char const*>::~allocator() [676] void std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_emplace_back_aux<Mobile const&>(Mobile const&)
  [37] MoveSwap1Route<BestAvailablePolicy>::commit(Solution&) [736] std::allocator<std::string>::allocator(std::allocator<std::string> const&) [379] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector(std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > const&)
 [572] MoveSwap1Route<BestAvailablePolicy>::MoveSwap1Route() [737] std::allocator<std::string>::allocator() [1317] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::vector()
 [573] MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [548] std::allocator<std::string>::~allocator() [355] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~vector()
 [574] MoveSwap1Route<BestAvailablePolicy>::~MoveSwap1Route() [1138] std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocator() [81] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long)
  [14] MoveSwap1Route<FirstAvailablePolicy>::scan(Solution const&) [1139] std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~allocator() [957] void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::emplace_back<Interceptor const&>(Interceptor const&)
  [36] MoveSwap1Route<FirstAvailablePolicy>::commit(Solution&) [1140] std::allocator<std::vector<double, std::allocator<double> > >::allocator() [958] void std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_emplace_back_aux<Interceptor const&>(Interceptor const&)
 [575] MoveSwap1Route<FirstAvailablePolicy>::MoveSwap1Route() [1141] std::allocator<std::vector<double, std::allocator<double> > >::~allocator() [380] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector(std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > const&)
 [576] MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [1142] std::allocator<std::function<Move* ()> >::allocator(std::allocator<std::function<Move* ()> > const&) [1318] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::vector()
 [577] MoveSwap1Route<FirstAvailablePolicy>::~MoveSwap1Route() [1143] std::allocator<std::function<Move* ()> >::allocator() [356] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~vector()
 [104] AvailablePolicy::maxAcceptableTime() [878] std::allocator<std::function<Move* ()> >::~allocator() [110] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long)
 [136] AvailablePolicy::minAcceptableCount() [738] std::allocator<double>::allocator() [194] void std::vector<Move*, std::allocator<Move*> >::emplace_back<Move*>(Move*&&)
 [300] BenchmarkResult::BenchmarkResult(BenchmarkResult const&) [739] std::allocator<double>::~allocator() [435] std::vector<Move*, std::allocator<Move*> >::_M_erase_at_end(Move**)
 [396] BenchmarkResult::BenchmarkResult(double, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >) [180] std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&) [677] void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move*>(Move*&&)
 [261] BenchmarkResult::~BenchmarkResult() [651] std::allocator<unsigned int>::allocator() [174] std::vector<Move*, std::allocator<Move*> >::end()
  [15] MoveMove2Routes<BestAvailablePolicy>::scan(Solution const&) [176] std::allocator<unsigned int>::~allocator() [436] std::vector<Move*, std::allocator<Move*> >::begin()
 [825] MoveMove2Routes<BestAvailablePolicy>::MoveMove2Routes() [549] std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [437] std::vector<Move*, std::allocator<Move*> >::clear()
 [826] MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [460] std::_Iter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >) [195] std::vector<Move*, std::allocator<Move*> >::push_back(Move*&&)
 [827] MoveMove2Routes<BestAvailablePolicy>::~MoveMove2Routes() [879] std::_Iter_base<double*, false>::_S_base(double*) [1319] std::vector<Move*, std::allocator<Move*> >::vector()
   [7] MoveMove2Routes<FirstAvailablePolicy>::scan(Solution const&) [1144] std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*) [438] std::vector<Move*, std::allocator<Move*> >::vector(std::vector<Move*, std::allocator<Move*> > const&)
 [464] MoveMove2Routes<FirstAvailablePolicy>::MoveMove2Routes() [740] unsigned int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned int>(unsigned int const*, unsigned int const*, unsigned int*) [381] std::vector<Move*, std::allocator<Move*> >::~vector()
 [465] MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [880] void std::_Destroy_aux<false>::__destroy<Interceptor*>(Interceptor*, Interceptor*) [92] std::vector<Move*, std::allocator<Move*> >::operator[](unsigned long)
 [466] MoveMove2Routes<FirstAvailablePolicy>::~MoveMove2Routes() [881] void std::_Destroy_aux<false>::__destroy<Depot*>(Depot*, Depot*) [1320] void std::vector<Problem*, std::allocator<Problem*> >::emplace_back<Problem*>(Problem*&&)
  [41] MoveSwap2Routes<BestAvailablePolicy>::scan(Solution const&) [882] void std::_Destroy_aux<false>::__destroy<Mobile*>(Mobile*, Mobile*) [1321] void std::vector<Problem*, std::allocator<Problem*> >::_M_emplace_back_aux<Problem*>(Problem*&&)
 [526] MoveSwap2Routes<BestAvailablePolicy>::MoveSwap2Routes() [741] void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*) [1322] std::vector<Problem*, std::allocator<Problem*> >::end()
 [527] MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [883] void std::_Destroy_aux<false>::__destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*) [1323] std::vector<Problem*, std::allocator<Problem*> >::back()
 [528] MoveSwap2Routes<BestAvailablePolicy>::~MoveSwap2Routes() [1145] void std::_Destroy_aux<false>::__destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*) [1324] std::vector<Problem*, std::allocator<Problem*> >::vector()
  [45] MoveSwap2Routes<FirstAvailablePolicy>::scan(Solution const&) [742] void std::_Destroy_aux<true>::__destroy<Location*>(Location*, Location*) [1325] std::vector<Problem*, std::allocator<Problem*> >::~vector()
 [627] MoveSwap2Routes<FirstAvailablePolicy>::MoveSwap2Routes() [318] void std::_Destroy_aux<true>::__destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*) [1326] std::vector<Problem*, std::allocator<Problem*> >::operator[](unsigned long)
 [628] MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [336] void std::_Destroy_aux<true>::__destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*) [1327] void std::vector<Solution*, std::allocator<Solution*> >::emplace_back<Solution*>(Solution*&&)
 [629] MoveSwap2Routes<FirstAvailablePolicy>::~MoveSwap2Routes() [267] void std::_Destroy_aux<true>::__destroy<Move**>(Move**, Move**) [1328] void std::vector<Solution*, std::allocator<Solution*> >::_M_emplace_back_aux<Solution*>(Solution*&&)
  [58] Heuristic_fastest<SimpleCachePolicy>::run() [884] void std::_Destroy_aux<true>::__destroy<Problem**>(Problem**, Problem**) [308] std::vector<Solution*, std::allocator<Solution*> >::end()
  [59] void Heuristic_fastest<SimpleCachePolicy>::run<true>() [885] void std::_Destroy_aux<true>::__destroy<Solution**>(Solution**, Solution**) [439] std::vector<Solution*, std::allocator<Solution*> >::begin()
 [1046] Heuristic_fastest<SimpleCachePolicy>::Heuristic_fastest(Problem const&) [652] void std::_Destroy_aux<true>::__destroy<Interceptor const**>(Interceptor const**, Interceptor const**) [1329] std::vector<Solution*, std::allocator<Solution*> >::vector()
 [1047] Heuristic_fastest<SimpleCachePolicy>::~Heuristic_fastest() [120] void std::_Destroy_aux<true>::__destroy<Mobile const**>(Mobile const**, Mobile const**) [1330] std::vector<Solution*, std::allocator<Solution*> >::~vector()
 [262] SimpleCachePolicy::get(unsigned int, unsigned int) [1146] void std::_Destroy_aux<true>::__destroy<char const**>(char const**, char const**) [1331] std::vector<Solution*, std::allocator<Solution*> >::operator[](unsigned long)
 [301] SimpleCachePolicy::set(unsigned int, unsigned int, double) [508] void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [959] void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::emplace_back<Interceptor const*>(Interceptor const*&&)
 [1048] SimpleCachePolicy::init(unsigned int, unsigned int) [208] void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*) [960] void std::vector<Interceptor const*, std::allocator<Interceptor const*> >::_M_emplace_back_aux<Interceptor const*>(Interceptor const*&&)
 [106] BestAvailablePolicy::reset() [1147] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_allocate(unsigned long) [961] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::push_back(Interceptor const*&&)
  [82] BestAvailablePolicy::keepOn() [1148] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::_Vector_impl() [962] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::vector()
 [134] BestAvailablePolicy::update(double, double&) [1149] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_impl::~_Vector_impl() [963] std::vector<Interceptor const*, std::allocator<Interceptor const*> >::~vector()
 [133] BestAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [886] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_deallocate(Interceptor*, unsigned long) [127] std::vector<Mobile const*, std::allocator<Mobile const*> >::end()
 [107] FirstAvailablePolicy::reset() [743] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() [128] std::vector<Mobile const*, std::allocator<Mobile const*> >::begin()
  [80] FirstAvailablePolicy::keepOn() [1150] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_Vector_base() [129] std::vector<Mobile const*, std::allocator<Mobile const*> >::vector()
 [135] FirstAvailablePolicy::update(double, double&) [1151] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::~_Vector_base() [130] std::vector<Mobile const*, std::allocator<Mobile const*> >::~vector()
 [141] FirstAvailablePolicy::update(double, double&, unsigned int, unsigned int&) [1152] std::_Vector_base<Depot, std::allocator<Depot> >::_M_allocate(unsigned long) [1332] void std::vector<char const*, std::allocator<char const*> >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag)
   [2] VND::run(Solution&)  [1153] std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::_Vector_impl() [964] std::vector<char const*, std::allocator<char const*> >::end()
 [397] VND::VND(std::vector<Move*, std::allocator<Move*> >&) [1154] std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_impl::~_Vector_impl() [1333] std::vector<char const*, std::allocator<char const*> >::begin()
 [398] VND::~VND()           [887] std::_Vector_base<Depot, std::allocator<Depot> >::_M_deallocate(Depot*, unsigned long) [1334] std::vector<char const*, std::allocator<char const*> >::vector(std::initializer_list<char const*>, std::allocator<char const*> const&)
 [181] Move::Move()          [744] std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() [1335] std::vector<char const*, std::allocator<char const*> >::~vector()
  [27] Move::~Move()        [1155] std::_Vector_base<Depot, std::allocator<Depot> >::_Vector_base() [440] std::vector<char const*, std::allocator<char const*> >::operator[](unsigned long)
 [182] Move::~Move()        [1156] std::_Vector_base<Depot, std::allocator<Depot> >::~_Vector_base() [1336] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_default_append(unsigned long)
 [828] Depot::addInterceptor(Interceptor const&) [1157] std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_allocate(unsigned long) [1337] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::end()
 [829] Depot::Depot(double, double, unsigned int) [1158] std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::_Vector_impl() [1338] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::begin()
 [830] Depot::~Depot()      [1159] std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_impl::~_Vector_impl() [1339] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::resize(unsigned long)
 [578] Mobile::Mobile(double, double, double, double, unsigned int) [888] std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_deallocate(Mobile*, unsigned long) [1340] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::vector()
 [579] Mobile::~Mobile()     [745] std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() [218] std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long)
  [61] Problem::Problem(char const*) [1160] std::_Vector_base<Mobile, std::allocator<Mobile> >::_Vector_base() [782] void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<std::string const*>(std::string const*, std::string const*, std::forward_iterator_tag)
 [1049] Problem::~Problem() [1161] std::_Vector_base<Mobile, std::allocator<Mobile> >::~_Vector_base() [783] std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&)
  [70] Location::Location(double, double) [889] std::_Vector_base<Location, std::allocator<Location> >::_M_allocate(unsigned long) [1341] void std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_range_initialize<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::forward_iterator_tag)
  [10] Move2Opt<BestAvailablePolicy>::scan(Solution const&) [1162] std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::_Vector_impl() [1342] std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::vector(std::initializer_list<std::function<Move* ()> >, std::allocator<std::function<Move* ()> > const&)
 [630] Move2Opt<BestAvailablePolicy>::Move2Opt() [1163] std::_Vector_base<Location, std::allocator<Location> >::_Vector_impl::~_Vector_impl() [1343] std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~vector()
 [631] Move2Opt<BestAvailablePolicy>::~Move2Opt() [746] std::_Vector_base<Location, std::allocator<Location> >::_M_deallocate(Location*, unsigned long) [196] std::vector<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::operator[](unsigned long)
 [632] Move2Opt<BestAvailablePolicy>::~Move2Opt() [592] std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() [965] void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)
   [5] Move2Opt<FirstAvailablePolicy>::scan(Solution const&) [1164] std::_Vector_base<Location, std::allocator<Location> >::_Vector_base() [966] std::vector<double, std::allocator<double> >::_M_default_append(unsigned long)
 [529] Move2Opt<FirstAvailablePolicy>::Move2Opt() [1165] std::_Vector_base<Location, std::allocator<Location> >::~_Vector_base() [967] void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
 [530] Move2Opt<FirstAvailablePolicy>::~Move2Opt() [329] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_allocate(unsigned long) [968] std::vector<double, std::allocator<double> >::resize(unsigned long)
 [531] Move2Opt<FirstAvailablePolicy>::~Move2Opt() [1166] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl() [784] std::vector<double, std::allocator<double> >::vector()
 [580] Solution::MobileNode::MobileNode(Mobile const&) [365] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::MobileNode> const&) [785] std::vector<double, std::allocator<double> >::~vector()
  [56] Solution::insertAfter(Mobile const&, Interceptor const&, Mobile const&, double const&) [351] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_impl::~_Vector_impl() [201] std::vector<double, std::allocator<double> >::operator[](unsigned long)
 [111] Solution::insertAfter(unsigned int, unsigned int, unsigned int, double const&) [319] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_deallocate(Solution::MobileNode*, unsigned long) [197] void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&)
  [31] Solution::recomputeFrom(Mobile const&) [366] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_create_storage(unsigned long) [441] std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase_at_end(unsigned int*)
  [20] Solution::recomputeFrom(unsigned int) [260] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() [678] void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&)
  [72] Solution::const_iterator::const_iterator(Solution::MobileNode const*) [367] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base(unsigned long, std::allocator<Solution::MobileNode> const&) [969] void std::vector<unsigned int, std::allocator<unsigned int> >::_M_range_initialize<unsigned int const*>(unsigned int const*, unsigned int const*, std::forward_iterator_tag)
  [23] Solution::const_iterator::~const_iterator() [1167] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_Vector_base() [1344] std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned long)
  [25] Solution::const_iterator::operator!=(Solution::const_iterator) [352] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::~_Vector_base() [164] std::vector<unsigned int, std::allocator<unsigned int> >::end()
  [16] Solution::const_iterator::operator++() [345] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_allocate(unsigned long) [226] std::vector<unsigned int, std::allocator<unsigned int> >::begin()
 [831] Solution::InterceptorNode::InterceptorNode(Interceptor const&) [368] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl(std::allocator<Solution::InterceptorNode> const&) [442] std::vector<unsigned int, std::allocator<unsigned int> >::clear()
 [100] Solution::end(Interceptor const&) [1168] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::_Vector_impl() [613] std::vector<unsigned int, std::allocator<unsigned int> >::erase(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >)
  [63] Solution::append(Interceptor const&, Mobile const&, double const&) [353] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_impl::~_Vector_impl() [614] std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [581] Solution::append(unsigned int, unsigned int, double const&) [337] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_deallocate(Solution::InterceptorNode*, unsigned long) [198] std::vector<unsigned int, std::allocator<unsigned int> >::push_back(unsigned int&&)
 [138] Solution::mobile(unsigned int) [369] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_create_storage(unsigned long) [241] std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::vector<unsigned int, std::allocator<unsigned int> > const&)
  [53] Solution::remove(Mobile const&) [264] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() [1345] std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned long, std::allocator<unsigned int> const&)
 [112] Solution::remove(unsigned int) [370] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base(unsigned long, std::allocator<Solution::InterceptorNode> const&) [1346] std::vector<unsigned int, std::allocator<unsigned int> >::vector()
  [94] Solution::iterator::iterator(Solution::MobileNode*) [1169] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_Vector_base() [970] std::vector<unsigned int, std::allocator<unsigned int> >::vector(std::initializer_list<unsigned int>, std::allocator<unsigned int> const&)
  [95] Solution::iterator::~iterator() [354] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::~_Vector_base() [229] std::vector<unsigned int, std::allocator<unsigned int> >::~vector()
 [101] Solution::iterator::operator!=(Solution::iterator) [338] std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long) [163] std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned long)
  [49] Solution::iterator::operator++() [415] std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl(std::allocator<Move*> const&) [443] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_<std::pair<char const*, BenchmarkResult> >(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, BenchmarkResult>&&)
  [84] Solution::iterator::operator->() [1170] std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl() [444] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_node()
 [1050] Solution::Solution(Problem const&) [371] std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::~_Vector_impl() [445] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_put_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
 [357] Solution::Solution(Solution const&) [330] std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long) [1347] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_M_initialize()
 [349] Solution::~Solution() [416] std::_Vector_base<Move*, std::allocator<Move*> >::_M_create_storage(unsigned long) [1348] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::_Rb_tree_impl()
 [139] Solution::operator[](unsigned int) [245] std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() [1349] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree_impl<std::less<char const*>, true>::~_Rb_tree_impl()
 [582] Direction::Direction(double, double) [417] std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base(unsigned long, std::allocator<Move*> const&) [446] std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >* std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_create_node<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&)
 [1051] Heuristic::solution() [1171] std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base() [447] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
 [1052] Heuristic::Heuristic(Problem const&) [372] std::_Vector_base<Move*, std::allocator<Move*> >::~_Vector_base() [448] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_insert_equal<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&&)
 [1053] Heuristic::~Heuristic() [1172] std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_allocate(unsigned long) [242] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_Node_allocator()
 [1054] __gnu_cxx::new_allocator<Interceptor>::deallocate(Interceptor*, unsigned long) [1173] std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::_Vector_impl() [449] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_get_insert_equal_pos(char const* const&)
 [1055] __gnu_cxx::new_allocator<Interceptor>::allocate(unsigned long, void const*) [1174] std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_impl::~_Vector_impl() [382] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end()
 [832] void __gnu_cxx::new_allocator<Interceptor>::construct<Interceptor, Depot&, double&, unsigned int&, double&>(Interceptor*, Depot&, double&, unsigned int&, double&) [890] std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_deallocate(Problem**, unsigned long) [1350] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin()
 [1056] __gnu_cxx::new_allocator<Interceptor>::new_allocator() [747] std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() [309] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_end()
 [1057] __gnu_cxx::new_allocator<Interceptor>::~new_allocator() [1175] std::_Vector_base<Problem*, std::allocator<Problem*> >::_Vector_base() [265] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*)
 [1058] __gnu_cxx::new_allocator<Depot>::deallocate(Depot*, unsigned long) [1176] std::_Vector_base<Problem*, std::allocator<Problem*> >::~_Vector_base() [461] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_key(std::_Rb_tree_node_base const*)
 [1059] __gnu_cxx::new_allocator<Depot>::allocate(unsigned long, void const*) [1177] std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_allocate(unsigned long) [450] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_left(std::_Rb_tree_node_base*)
 [833] _ZN9__gnu_cxx13new_allocatorI5DepotE9constructIS1_IRdS4_RjEEEvPT_DpOT0_ [1178] std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::_Vector_impl() [383] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_begin()
 [1060] __gnu_cxx::new_allocator<Depot>::new_allocator() [1179] std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_impl::~_Vector_impl() [1351] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*)
 [1061] __gnu_cxx::new_allocator<Depot>::~new_allocator() [891] std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_deallocate(Solution**, unsigned long) [246] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_right(std::_Rb_tree_node_base*)
 [1062] __gnu_cxx::new_allocator<Mobile>::deallocate(Mobile*, unsigned long) [748] std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() [266] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > const*)
 [1063] __gnu_cxx::new_allocator<Mobile>::allocate(unsigned long, void const*) [1180] std::_Vector_base<Solution*, std::allocator<Solution*> >::_Vector_base() [462] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_S_value(std::_Rb_tree_node_base const*)
 [583] _ZN9__gnu_cxx13new_allocatorI6MobileE9constructIS1_IRdS4_S4_S4_RjEEEvPT_DpOT0_ [1181] std::_Vector_base<Solution*, std::allocator<Solution*> >::~_Vector_base() [1352] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::_Rb_tree()
 [1064] __gnu_cxx::new_allocator<Mobile>::new_allocator() [892] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_allocate(unsigned long) [1353] std::_Rb_tree<char const*, std::pair<char const* const, BenchmarkResult>, std::_Select1st<std::pair<char const* const, BenchmarkResult> >, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~_Rb_tree()
 [1065] __gnu_cxx::new_allocator<Mobile>::~new_allocator() [893] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::_Vector_impl() [320] std::function<Move* ()>::function(std::function<Move* ()> const&)
 [834] __gnu_cxx::new_allocator<Location>::deallocate(Location*, unsigned long) [894] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_impl::~_Vector_impl() [1354] std::function<Move* ()>::function<main::{lambda()#2}, void>(main::{lambda()#2}) (functional)
 [835] __gnu_cxx::new_allocator<Location>::allocate(unsigned long, void const*) [653] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_deallocate(Interceptor const**, unsigned long) [1355] std::function<Move* ()>::function<main::{lambda()#12}, void>(main::{lambda()#12}) (functional)
 [836] _ZN9__gnu_cxx13new_allocatorI8LocationE9constructIS1_IRKS1_EEEvPT_DpOT0_ [550] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() [1356] std::function<Move* ()>::function<main::{lambda()#13}, void>(main::{lambda()#13}) (functional)
 [1066] __gnu_cxx::new_allocator<Location>::new_allocator() [895] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_Vector_base() [1357] std::function<Move* ()>::function<main::{lambda()#14}, void>(main::{lambda()#14}) (functional)
 [1067] __gnu_cxx::new_allocator<Location>::~new_allocator() [896] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::~_Vector_base() [1358] std::function<Move* ()>::function<main::{lambda()#15}, void>(main::{lambda()#15}) (functional)
 [326] __gnu_cxx::new_allocator<Solution::MobileNode>::deallocate(Solution::MobileNode*, unsigned long) [121] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::_Vector_impl() [1359] std::function<Move* ()>::function<main::{lambda()#16}, void>(main::{lambda()#16}) (functional)
 [327] __gnu_cxx::new_allocator<Solution::MobileNode>::allocate(unsigned long, void const*) [122] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_impl::~_Vector_impl() [1360] std::function<Move* ()>::function<main::{lambda()#3}, void>(main::{lambda()#3}) (functional)
 [584] _ZN9__gnu_cxx13new_allocatorIN8Solution10MobileNodeEE9constructIS2_IRK6MobileEEEvPT_DpOT0_ [123] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_deallocate(Mobile const**, unsigned long) [1361] std::function<Move* ()>::function<main::{lambda()#4}, void>(main::{lambda()#4}) (functional)
 [280] __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator(__gnu_cxx::new_allocator<Solution::MobileNode> const&) [124] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_M_get_Tp_allocator() [1362] std::function<Move* ()>::function<main::{lambda()#5}, void>(main::{lambda()#5}) (functional)
 [1068] __gnu_cxx::new_allocator<Solution::MobileNode>::new_allocator() [125] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::_Vector_base() [1363] std::function<Move* ()>::function<main::{lambda()#6}, void>(main::{lambda()#6}) (functional)
 [273] __gnu_cxx::new_allocator<Solution::MobileNode>::~new_allocator() [126] std::_Vector_base<Mobile const*, std::allocator<Mobile const*> >::~_Vector_base() [1364] std::function<Move* ()>::function<main::{lambda()#7}, void>(main::{lambda()#7}) (functional)
 [343] __gnu_cxx::new_allocator<Solution::InterceptorNode>::deallocate(Solution::InterceptorNode*, unsigned long) [1182] std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long) [1365] std::function<Move* ()>::function<main::{lambda()#8}, void>(main::{lambda()#8}) (functional)
 [344] __gnu_cxx::new_allocator<Solution::InterceptorNode>::allocate(unsigned long, void const*) [1183] std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl(std::allocator<char const*> const&) [1366] std::function<Move* ()>::function<main::{lambda()#9}, void>(main::{lambda()#9}) (functional)
 [837] void __gnu_cxx::new_allocator<Solution::InterceptorNode>::construct<Solution::InterceptorNode, Interceptor const&>(Solution::InterceptorNode*, Interceptor const&) [1184] std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl() [1367] std::function<Move* ()>::function<main::{lambda()#10}, void>(main::{lambda()#10}) (functional)
 [1069] __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator() [1185] std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long) [1368] std::function<Move* ()>::function<main::{lambda()#11}, void>(main::{lambda()#11}) (functional)
 [281] __gnu_cxx::new_allocator<Solution::InterceptorNode>::new_allocator(__gnu_cxx::new_allocator<Solution::InterceptorNode> const&) [897] std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator() [1369] std::function<Move* ()>::function<main::{lambda()#1}, void>(main::{lambda()#1}) (functional)
 [274] __gnu_cxx::new_allocator<Solution::InterceptorNode>::~new_allocator() [1186] std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base(std::allocator<char const*> const&) [257] std::function<Move* ()>::~function()
 [334] __gnu_cxx::new_allocator<Move*>::deallocate(Move**, unsigned long) [1187] std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base() [384] std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::end()
 [335] __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*) [749] std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long) [1370] std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::begin()
 [183] void __gnu_cxx::new_allocator<Move*>::construct<Move*, Move*>(Move**, Move*&&) [750] std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl(std::allocator<std::string> const&) [451] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::insert<std::pair<char const*, BenchmarkResult>, void>(std::pair<char const*, BenchmarkResult>&&)
 [1070] __gnu_cxx::new_allocator<Move*>::new_allocator() [751] std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl() [1371] std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::multimap()
 [302] __gnu_cxx::new_allocator<Move*>::new_allocator(__gnu_cxx::new_allocator<Move*> const&) [752] std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long) [1372] std::multimap<char const*, BenchmarkResult, std::less<char const*>, std::allocator<std::pair<char const* const, BenchmarkResult> > >::~multimap()
 [297] __gnu_cxx::new_allocator<Move*>::~new_allocator() [551] std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator() [205] std::_Any_data::_M_access()
 [1071] __gnu_cxx::new_allocator<Problem*>::deallocate(Problem**, unsigned long) [753] std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base(std::allocator<std::string> const&) [679] main::{lambda()#2}*& std::_Any_data::_M_access<main::{lambda()#2}*>() (functional)
 [1072] __gnu_cxx::new_allocator<Problem*>::allocate(unsigned long, void const*) [754] std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base() [680] main::{lambda()#12}*& std::_Any_data::_M_access<main::{lambda()#12}*>() (functional)
 [1073] _ZN9__gnu_cxx13new_allocatorIP7ProblemE9constructIS2_IS2_EEEvPT_DpOT0_ [1188] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_allocate(unsigned long) [681] main::{lambda()#13}*& std::_Any_data::_M_access<main::{lambda()#13}*>() (functional)
 [1074] __gnu_cxx::new_allocator<Problem*>::new_allocator() [1189] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::_Vector_impl() [682] main::{lambda()#14}*& std::_Any_data::_M_access<main::{lambda()#14}*>() (functional)
 [1075] __gnu_cxx::new_allocator<Problem*>::~new_allocator() [1190] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_impl::~_Vector_impl() [683] main::{lambda()#15}*& std::_Any_data::_M_access<main::{lambda()#15}*>() (functional)
 [1076] __gnu_cxx::new_allocator<Solution*>::deallocate(Solution**, unsigned long) [898] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [684] main::{lambda()#16}*& std::_Any_data::_M_access<main::{lambda()#16}*>() (functional)
 [1077] __gnu_cxx::new_allocator<Solution*>::allocate(unsigned long, void const*) [654] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() [685] main::{lambda()#3}*& std::_Any_data::_M_access<main::{lambda()#3}*>() (functional)
 [1078] _ZN9__gnu_cxx13new_allocatorIP8SolutionE9constructIS2_IS2_EEEvPT_DpOT0_ [1191] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_Vector_base() [686] main::{lambda()#4}*& std::_Any_data::_M_access<main::{lambda()#4}*>() (functional)
 [1079] __gnu_cxx::new_allocator<Solution*>::new_allocator() [1192] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::~_Vector_base() [687] main::{lambda()#5}*& std::_Any_data::_M_access<main::{lambda()#5}*>() (functional)
 [1080] __gnu_cxx::new_allocator<Solution*>::~new_allocator() [1193] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_allocate(unsigned long) [688] main::{lambda()#6}*& std::_Any_data::_M_access<main::{lambda()#6}*>() (functional)
 [838] __gnu_cxx::new_allocator<Interceptor const*>::deallocate(Interceptor const**, unsigned long) [1194] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::_Vector_impl(std::allocator<std::function<Move* ()> > const&) [689] main::{lambda()#7}*& std::_Any_data::_M_access<main::{lambda()#7}*>() (functional)
 [839] __gnu_cxx::new_allocator<Interceptor const*>::allocate(unsigned long, void const*) [1195] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_impl::~_Vector_impl() [690] main::{lambda()#8}*& std::_Any_data::_M_access<main::{lambda()#8}*>() (functional)
 [840] void __gnu_cxx::new_allocator<Interceptor const*>::construct<Interceptor const*, Interceptor const*>(Interceptor const**, Interceptor const*&&) [1196] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_deallocate(std::function<Move* ()>*, unsigned long) [691] main::{lambda()#9}*& std::_Any_data::_M_access<main::{lambda()#9}*>() (functional)
 [841] __gnu_cxx::new_allocator<Interceptor const*>::new_allocator() [899] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_M_get_Tp_allocator() [692] main::{lambda()#10}*& std::_Any_data::_M_access<main::{lambda()#10}*>() (functional)
 [842] __gnu_cxx::new_allocator<Interceptor const*>::~new_allocator() [1197] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::_Vector_base(std::allocator<std::function<Move* ()> > const&) [693] main::{lambda()#11}*& std::_Any_data::_M_access<main::{lambda()#11}*>() (functional)
 [115] __gnu_cxx::new_allocator<Mobile const*>::new_allocator() [1198] std::_Vector_base<std::function<Move* ()>, std::allocator<std::function<Move* ()> > >::~_Vector_base() [694] main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() (functional)
 [116] __gnu_cxx::new_allocator<Mobile const*>::~new_allocator() [655] std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [1373] _ZSt10_ConstructI8LocationIS0_EEvPT_DpOT0_
 [1081] __gnu_cxx::new_allocator<char const*>::deallocate(char const**, unsigned long) [755] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [216] void std::_Construct<Solution::MobileNode, Solution::MobileNode const&>(Solution::MobileNode*, Solution::MobileNode const&)
 [1082] __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*) [756] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [517] void std::_Construct<Solution::MobileNode, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode&&)
 [1083] __gnu_cxx::new_allocator<char const*>::new_allocator(__gnu_cxx::new_allocator<char const*> const&) [509] std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [295] void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode const&>(Solution::InterceptorNode*, Solution::InterceptorNode const&)
 [1084] __gnu_cxx::new_allocator<char const*>::new_allocator() [346] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [1374] void std::_Construct<Solution::InterceptorNode, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode&&)
 [843] __gnu_cxx::new_allocator<char const*>::~new_allocator() [757] std::_Vector_base<double, std::allocator<double> >::_Vector_base() [518] _ZSt10_ConstructIP4MoveIS1_EEvPT_DpOT0_
 [721] __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long) [758] std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [199] void std::_Construct<Move*, Move* const&>(Move**, Move* const&)
 [722] __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*) [223] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned long) [1375] void std::_Construct<char const*, char const* const&>(char const**, char const* const&)
 [723] __gnu_cxx::new_allocator<std::string>::new_allocator(__gnu_cxx::new_allocator<std::string> const&) [1199] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl() [786] _ZSt10_ConstructISsIRKSsEEvPT_DpOT0_
 [724] __gnu_cxx::new_allocator<std::string>::new_allocator() [230] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&) [971] void std::_Construct<std::vector<double, std::allocator<double> >>(std::vector<double, std::allocator<double> >*)
 [532] __gnu_cxx::new_allocator<std::string>::~new_allocator() [227] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl() [321] void std::_Construct<std::function<Move* ()>, std::function<Move* ()> const&>(std::function<Move* ()>*, std::function<Move* ()> const&)
 [399] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::deallocate(std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [220] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned long) [1376] void std::_Construct<double, double>(double*, double&&)
 [400] void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*) [231] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned long) [152] void std::_Construct<unsigned int, unsigned int const&>(unsigned int*, unsigned int const&)
 [401] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::allocate(unsigned long, void const*) [168] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() [519] void std::_Construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&)
 [402] void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [1200] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base() [1377] std::iterator_traits<char const* const*>::difference_type std::__distance<char const* const*>(char const* const*, char const* const*, std::random_access_iterator_tag)
 [1085] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::new_allocator() [900] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(std::allocator<unsigned int> const&) [787] std::iterator_traits<std::string const*>::difference_type std::__distance<std::string const*>(std::string const*, std::string const*, std::random_access_iterator_tag)
 [1086] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::~new_allocator() [232] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned long, std::allocator<unsigned int> const&) [1378] std::iterator_traits<std::function<Move* ()> const*>::difference_type std::__distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::random_access_iterator_tag)
 [1087] __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::deallocate(std::vector<double, std::allocator<double> >*, unsigned long) [228] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base() [972] std::iterator_traits<unsigned int const*>::difference_type std::__distance<unsigned int const*>(unsigned int const*, unsigned int const*, std::random_access_iterator_tag)
 [1088] __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::allocate(unsigned long, void const*) [237] std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() [973] __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&)
 [1089] __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::new_allocator() [901] std::move_iterator<Interceptor*>::move_iterator(Interceptor*) [1379] __gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&)
 [1090] __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::~new_allocator() [902] std::move_iterator<Mobile*>::move_iterator(Mobile*) [974] Interceptor* std::__addressof<Interceptor>(Interceptor&)
 [1091] __gnu_cxx::new_allocator<std::function<Move* ()> >::deallocate(std::function<Move* ()>*, unsigned long) [656] std::move_iterator<Location*>::move_iterator(Location*) [975] Depot* std::__addressof<Depot>(Depot&)
 [1092] __gnu_cxx::new_allocator<std::function<Move* ()> >::allocate(unsigned long, void const*) [1201] std::move_iterator<Location*>::operator++() [615] Mobile* std::__addressof<Mobile>(Mobile&)
 [1093] __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator(__gnu_cxx::new_allocator<std::function<Move* ()> > const&) [474] std::move_iterator<Solution::MobileNode*>::move_iterator(Solution::MobileNode*) [1380] Location* std::__addressof<Location>(Location&)
 [1094] __gnu_cxx::new_allocator<std::function<Move* ()> >::new_allocator() [510] std::move_iterator<Solution::MobileNode*>::operator++() [206] Solution::MobileNode* std::__addressof<Solution::MobileNode>(Solution::MobileNode&)
 [844] __gnu_cxx::new_allocator<std::function<Move* ()> >::~new_allocator() [657] std::move_iterator<Solution::InterceptorNode*>::move_iterator(Solution::InterceptorNode*) [279] Solution::InterceptorNode* std::__addressof<Solution::InterceptorNode>(Solution::InterceptorNode&)
 [633] __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [1202] std::move_iterator<Solution::InterceptorNode*>::operator++() [177] Move** std::__addressof<Move*>(Move*&)
 [634] __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [475] std::move_iterator<Move**>::move_iterator(Move**) [1381] char const** std::__addressof<char const*>(char const*&)
 [845] void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [511] std::move_iterator<Move**>::operator++() [556] std::string* std::__addressof<std::string>(std::string&)
 [725] __gnu_cxx::new_allocator<double>::new_allocator() [903] std::move_iterator<Problem**>::move_iterator(Problem**) [695] std::vector<double, std::allocator<double> >* std::__addressof<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >&)
 [726] __gnu_cxx::new_allocator<double>::~new_allocator() [904] std::move_iterator<Solution**>::move_iterator(Solution**) [258] std::function<Move* ()>* std::__addressof<std::function<Move* ()> >(std::function<Move* ()>&)
 [221] __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long) [658] std::move_iterator<Interceptor const**>::move_iterator(Interceptor const**) [1382] double* std::__addressof<double>(double&)
 [585] void __gnu_cxx::new_allocator<unsigned int>::destroy<unsigned int>(unsigned int*) [905] std::move_iterator<std::vector<double, std::allocator<double> >*>::move_iterator(std::vector<double, std::allocator<double> >*) [151] unsigned int* std::__addressof<unsigned int>(unsigned int&)
 [222] __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*) [476] std::move_iterator<double*>::move_iterator(double*) [557] std::_Miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [184] void __gnu_cxx::new_allocator<unsigned int>::construct<unsigned int, unsigned int>(unsigned int*, unsigned int&&) [1203] std::move_iterator<double*>::operator++() [463] std::_Niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [179] __gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&) [477] std::move_iterator<unsigned int*>::move_iterator(unsigned int*) [976] std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)
 [635] __gnu_cxx::new_allocator<unsigned int>::new_allocator() [512] std::move_iterator<unsigned int*>::operator++() [1383] std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)
 [175] __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [906] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [788] unsigned int* std::__copy_move_a<true, unsigned int*, unsigned int*>(unsigned int*, unsigned int*, unsigned int*)
 [358] __gnu_cxx::__alloc_traits<std::allocator<Solution::MobileNode> >::_S_select_on_copy(std::allocator<Solution::MobileNode> const&) [759] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::_Manager_operation) (functional) [789] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [359] __gnu_cxx::__alloc_traits<std::allocator<Solution::InterceptorNode> >::_S_select_on_copy(std::allocator<Solution::InterceptorNode> const&) [593] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_get_pointer(std::_Any_data const&) (functional) [310] void std::random_shuffle<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [403] __gnu_cxx::__alloc_traits<std::allocator<Move*> >::_S_select_on_copy(std::allocator<Move*> const&) [1204] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&) (functional) [385] Solution::MobileNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*)
 [233] __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_S_select_on_copy(std::allocator<unsigned int> const&) [1205] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_init_functor(std::_Any_data&, {lambda()#2}&&, std::integral_constant<bool, false>) (functional) [386] Solution::InterceptorNode* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*)
 [234] __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() [1206] bool std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_not_empty_function<{lambda()#2}>({lambda()#2} const&) (functional) [452] Move** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**)
 [235] __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() [1207] std::_Function_base::_Base_manager<main::{lambda()#2}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#2}> const&, std::integral_constant<bool, false>) (functional) [243] unsigned int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*)
 [636] __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor* const&) [907] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [1384] Depot* std::uninitialized_copy<Depot*, Depot*>(Depot*, Depot*, Depot*)
 [303] __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::__normal_iterator(Location* const&) [760] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::_Manager_operation) (functional) [1385] char const** std::uninitialized_copy<char const* const*, char const**>(char const* const*, char const* const*, char const**)
  [93] __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::__normal_iterator(Interceptor const* const&) [478] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_get_pointer(std::_Any_data const&) (functional) [790] std::string* std::uninitialized_copy<std::string const*, std::string*>(std::string const*, std::string const*, std::string*)
 [105] __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator++() [1208] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&) (functional) [1386] std::function<Move* ()>* std::uninitialized_copy<std::function<Move* ()> const*, std::function<Move* ()>*>(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*)
  [88] __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::__normal_iterator(Mobile const* const&) [1209] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_init_functor(std::_Any_data&, {lambda()#12}&&, std::integral_constant<bool, false>) (functional) [977] unsigned int* std::uninitialized_copy<unsigned int const*, unsigned int*>(unsigned int const*, unsigned int const*, unsigned int*)
  [96] __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator++() [1210] bool std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_not_empty_function<{lambda()#12}>({lambda()#12} const&) (functional) [1387] Interceptor* std::uninitialized_copy<std::move_iterator<Interceptor*>, Interceptor*>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*)
 [282] __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::__normal_iterator(Solution::MobileNode const* const&) [1211] std::_Function_base::_Base_manager<main::{lambda()#12}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#12}> const&, std::integral_constant<bool, false>) (functional) [1388] Mobile* std::uninitialized_copy<std::move_iterator<Mobile*>, Mobile*>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*)
 [213] __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator++() [908] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [978] Location* std::uninitialized_copy<std::move_iterator<Location*>, Location*>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*)
 [283] __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::__normal_iterator(Solution::InterceptorNode const* const&) [761] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::_Manager_operation) (functional) [696] Solution::MobileNode* std::uninitialized_copy<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*)
 [284] __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator++() [594] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_get_pointer(std::_Any_data const&) (functional) [979] Solution::InterceptorNode* std::uninitialized_copy<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*)
 [304] __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move* const* const&) [1212] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&) (functional) [697] Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
 [185] __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator++() [1213] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_init_functor(std::_Any_data&, {lambda()#13}&&, std::integral_constant<bool, false>) (functional) [1389] Problem** std::uninitialized_copy<std::move_iterator<Problem**>, Problem**>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**)
 [586] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator<unsigned int*>(__gnu_cxx::__normal_iterator<unsigned int*, __gnu_cxx::__enable_if<std::__are_same<unsigned int*, unsigned int*>::__value, std::vector<unsigned int, std::allocator<unsigned int> > >::__type> const&) [1214] bool std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_not_empty_function<{lambda()#13}>({lambda()#13} const&) (functional) [1390] Solution** std::uninitialized_copy<std::move_iterator<Solution**>, Solution**>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**)
 [166] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int const* const&) [1215] std::_Function_base::_Base_manager<main::{lambda()#13}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#13}> const&, std::integral_constant<bool, false>) (functional) [980] Interceptor const** std::uninitialized_copy<std::move_iterator<Interceptor const**>, Interceptor const**>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**)
 [149] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [909] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [1391] std::vector<double, std::allocator<double> >* std::uninitialized_copy<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*)
 [169] __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::__normal_iterator(Move** const&) [762] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::_Manager_operation) (functional) [698] double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
 [186] __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator++() [659] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_get_pointer(std::_Any_data const&) (functional) [699] unsigned int* std::uninitialized_copy<std::move_iterator<unsigned int*>, unsigned int*>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*)
 [846] __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::__normal_iterator(Problem** const&) [1216] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&) (functional) [1392] std::iterator_traits<char const* const*>::iterator_category std::__iterator_category<char const* const*>(char const* const* const&)
 [263] __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::__normal_iterator(Solution** const&) [1217] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_init_functor(std::_Any_data&, {lambda()#14}&&, std::integral_constant<bool, false>) (functional) [791] std::iterator_traits<std::string const*>::iterator_category std::__iterator_category<std::string const*>(std::string const* const&)
 [404] __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator++() [1218] bool std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_not_empty_function<{lambda()#14}>({lambda()#14} const&) (functional) [1393] std::iterator_traits<std::function<Move* ()> const*>::iterator_category std::__iterator_category<std::function<Move* ()> const*>(std::function<Move* ()> const* const&)
 [108] __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::__normal_iterator(Mobile const** const&) [1219] std::_Function_base::_Base_manager<main::{lambda()#14}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#14}> const&, std::integral_constant<bool, false>) (functional) [981] std::iterator_traits<unsigned int const*>::iterator_category std::__iterator_category<unsigned int const*>(unsigned int const* const&)
 [727] __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&) [910] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [387] Solution::MobileNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, Solution::MobileNode>(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
 [1095] __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator++() [763] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::_Manager_operation) (functional) [388] Solution::InterceptorNode* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, Solution::InterceptorNode>(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
 [847] __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::__normal_iterator(std::vector<double, std::allocator<double> >* const&) [595] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_get_pointer(std::_Any_data const&) (functional) [453] Move** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, Move*>(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >, Move**, std::allocator<Move*>&)
 [848] __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator++() [1220] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&) (functional) [244] unsigned int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, unsigned int>(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int*, std::allocator<unsigned int>&)
 [147] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::__normal_iterator(unsigned int* const&) [1221] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_init_functor(std::_Any_data&, {lambda()#15}&&, std::integral_constant<bool, false>) (functional) [1394] Depot* std::__uninitialized_copy_a<Depot*, Depot*, Depot>(Depot*, Depot*, Depot*, std::allocator<Depot>&)
 [156] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator++() [1222] bool std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_not_empty_function<{lambda()#15}>({lambda()#15} const&) (functional) [1395] char const** std::__uninitialized_copy_a<char const* const*, char const**, char const*>(char const* const*, char const* const*, char const**, std::allocator<char const*>&)
 [533] bool __gnu_cxx::operator==<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [1223] std::_Function_base::_Base_manager<main::{lambda()#15}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#15}> const&, std::integral_constant<bool, false>) (functional) [792] std::string* std::__uninitialized_copy_a<std::string const*, std::string*, std::string>(std::string const*, std::string const*, std::string*, std::allocator<std::string>&)
 [587] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [911] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [1396] std::function<Move* ()>* std::__uninitialized_copy_a<std::function<Move* ()> const*, std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()> const*, std::function<Move* ()> const*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&)
 [158] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::difference_type __gnu_cxx::operator-<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [764] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::_Manager_operation) (functional) [982] unsigned int* std::__uninitialized_copy_a<unsigned int const*, unsigned int*, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*, std::allocator<unsigned int>&)
 [102] bool __gnu_cxx::operator!=<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >(__gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&, __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > > const&) [552] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_get_pointer(std::_Any_data const&) (functional) [1397] Interceptor* std::__uninitialized_copy_a<std::move_iterator<Interceptor*>, Interceptor*, Interceptor>(std::move_iterator<Interceptor*>, std::move_iterator<Interceptor*>, Interceptor*, std::allocator<Interceptor>&)
  [90] bool __gnu_cxx::operator!=<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >(__gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&, __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > > const&) [1224] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&) (functional) [1398] Mobile* std::__uninitialized_copy_a<std::move_iterator<Mobile*>, Mobile*, Mobile>(std::move_iterator<Mobile*>, std::move_iterator<Mobile*>, Mobile*, std::allocator<Mobile>&)
 [203] bool __gnu_cxx::operator!=<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >(__gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&, __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > > const&) [1225] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_init_functor(std::_Any_data&, {lambda()#16}&&, std::integral_constant<bool, false>) (functional) [983] Location* std::__uninitialized_copy_a<std::move_iterator<Location*>, Location*, Location>(std::move_iterator<Location*>, std::move_iterator<Location*>, Location*, std::allocator<Location>&)
 [253] bool __gnu_cxx::operator!=<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >(__gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&, __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > > const&) [1226] bool std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_not_empty_function<{lambda()#16}>({lambda()#16} const&) (functional) [700] Solution::MobileNode* std::__uninitialized_copy_a<std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, Solution::MobileNode>(std::move_iterator<Solution::MobileNode*>, std::move_iterator<Solution::MobileNode*>, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
 [172] bool __gnu_cxx::operator!=<Move* const*, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > > const&) [1227] std::_Function_base::_Base_manager<main::{lambda()#16}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#16}> const&, std::integral_constant<bool, false>) (functional) [984] Solution::InterceptorNode* std::__uninitialized_copy_a<std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, Solution::InterceptorNode>(std::move_iterator<Solution::InterceptorNode*>, std::move_iterator<Solution::InterceptorNode*>, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
 [148] bool __gnu_cxx::operator!=<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [912] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [701] Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&)
 [173] bool __gnu_cxx::operator!=<Move**, std::vector<Move*, std::allocator<Move*> > >(__gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&, __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > > const&) [765] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::_Manager_operation) (functional) [1399] Problem** std::__uninitialized_copy_a<std::move_iterator<Problem**>, Problem**, Problem*>(std::move_iterator<Problem**>, std::move_iterator<Problem**>, Problem**, std::allocator<Problem*>&)
 [305] bool __gnu_cxx::operator!=<Solution**, std::vector<Solution*, std::allocator<Solution*> > >(__gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&, __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > > const&) [513] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_get_pointer(std::_Any_data const&) (functional) [1400] Solution** std::__uninitialized_copy_a<std::move_iterator<Solution**>, Solution**, Solution*>(std::move_iterator<Solution**>, std::move_iterator<Solution**>, Solution**, std::allocator<Solution*>&)
 [117] bool __gnu_cxx::operator!=<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >(__gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&, __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > > const&) [1228] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&) (functional) [985] Interceptor const** std::__uninitialized_copy_a<std::move_iterator<Interceptor const**>, Interceptor const**, Interceptor const*>(std::move_iterator<Interceptor const**>, std::move_iterator<Interceptor const**>, Interceptor const**, std::allocator<Interceptor const*>&)
 [849] bool __gnu_cxx::operator!=<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&) [1229] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_init_functor(std::_Any_data&, {lambda()#3}&&, std::integral_constant<bool, false>) (functional) [1401] std::vector<double, std::allocator<double> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::move_iterator<std::vector<double, std::allocator<double> >*>, std::move_iterator<std::vector<double, std::allocator<double> >*>, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
 [728] bool __gnu_cxx::operator!=<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >(__gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&, __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > > const&) [1230] bool std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_not_empty_function<{lambda()#3}>({lambda()#3} const&) (functional) [702] double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
 [146] bool __gnu_cxx::operator!=<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > const&) [1231] std::_Function_base::_Base_manager<main::{lambda()#3}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#3}> const&, std::integral_constant<bool, false>) (functional) [703] unsigned int* std::__uninitialized_copy_a<std::move_iterator<unsigned int*>, unsigned int*, unsigned int>(std::move_iterator<unsigned int*>, std::move_iterator<unsigned int*>, unsigned int*, std::allocator<unsigned int>&)
  [77] Interceptor::timeFromTo(Location const&, Location const&) const [913] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [1402] void std::__uninitialized_default_n<std::vector<double, std::allocator<double> >*, unsigned long>(std::vector<double, std::allocator<double> >*, unsigned long)
  [29] Interceptor::computePosition(double, Location&, double) const [766] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::_Manager_operation) (functional) [986] void std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
   [4] Interceptor::computeInterception(Location, Mobile const&, double) const [914] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_get_pointer(std::_Any_data const&) (functional) [1403] void std::__uninitialized_default_n<unsigned int*, unsigned long>(unsigned int*, unsigned long)
  [74] Interceptor::id() const [1232] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&) (functional) [1404] void std::__uninitialized_default_n_a<std::vector<double, std::allocator<double> >*, unsigned long, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, unsigned long, std::allocator<std::vector<double, std::allocator<double> > >&)
  [83] Interceptor::position() const [1233] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_init_functor(std::_Any_data&, {lambda()#4}&&, std::integral_constant<bool, false>) (functional) [987] void std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
  [76] Depot::position() const [1234] bool std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_not_empty_function<{lambda()#4}>({lambda()#4} const&) (functional) [1405] void std::__uninitialized_default_n_a<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, std::allocator<unsigned int>&)
  [24] Mobile::id() const   [1235] std::_Function_base::_Base_manager<main::{lambda()#4}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#4}> const&, std::integral_constant<bool, false>) (functional) [988] std::move_iterator<Interceptor*> std::__make_move_if_noexcept_iterator<Interceptor*, std::move_iterator<Interceptor*> >(Interceptor*)
  [17] Mobile::position(double) const [915] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [989] Depot* std::__make_move_if_noexcept_iterator<Depot*, Depot*>(Depot*)
  [78] Mobile::direction() const [767] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::_Manager_operation) (functional) [990] std::move_iterator<Mobile*> std::__make_move_if_noexcept_iterator<Mobile*, std::move_iterator<Mobile*> >(Mobile*)
  [79] Problem::interceptors() const [596] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_get_pointer(std::_Any_data const&) (functional) [704] std::move_iterator<Location*> std::__make_move_if_noexcept_iterator<Location*, std::move_iterator<Location*> >(Location*)
  [30] Problem::nbInterceptors() const [1236] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&) (functional) [488] std::move_iterator<Solution::MobileNode*> std::__make_move_if_noexcept_iterator<Solution::MobileNode*, std::move_iterator<Solution::MobileNode*> >(Solution::MobileNode*)
  [85] Problem::mobiles() const [1237] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_init_functor(std::_Any_data&, {lambda()#5}&&, std::integral_constant<bool, false>) (functional) [705] std::move_iterator<Solution::InterceptorNode*> std::__make_move_if_noexcept_iterator<Solution::InterceptorNode*, std::move_iterator<Solution::InterceptorNode*> >(Solution::InterceptorNode*)
  [28] Problem::nbDepots() const [1238] bool std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_not_empty_function<{lambda()#5}>({lambda()#5} const&) (functional) [489] std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**)
 [285] Problem::nbMobiles() const [1239] std::_Function_base::_Base_manager<main::{lambda()#5}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#5}> const&, std::integral_constant<bool, false>) (functional) [991] std::move_iterator<Problem**> std::__make_move_if_noexcept_iterator<Problem**, std::move_iterator<Problem**> >(Problem**)
   [9] Location::equals(Location const&, double) const [916] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [992] std::move_iterator<Solution**> std::__make_move_if_noexcept_iterator<Solution**, std::move_iterator<Solution**> >(Solution**)
  [55] Solution::worstRoute() const [768] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::_Manager_operation) (functional) [706] std::move_iterator<Interceptor const**> std::__make_move_if_noexcept_iterator<Interceptor const**, std::move_iterator<Interceptor const**> >(Interceptor const**)
  [39] Solution::lastOfRoute(Interceptor const&) const [553] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_get_pointer(std::_Any_data const&) (functional) [993] std::move_iterator<std::vector<double, std::allocator<double> >*> std::__make_move_if_noexcept_iterator<std::vector<double, std::allocator<double> >*, std::move_iterator<std::vector<double, std::allocator<double> >*> >(std::vector<double, std::allocator<double> >*)
  [51] Solution::firstOfRoute(Interceptor const&) const [1240] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&) (functional) [490] std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double*, std::move_iterator<double*> >(double*)
  [71] Solution::const_iterator::operator->() const [1241] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_init_functor(std::_Any_data&, {lambda()#6}&&, std::integral_constant<bool, false>) (functional) [491] std::move_iterator<unsigned int*> std::__make_move_if_noexcept_iterator<unsigned int*, std::move_iterator<unsigned int*> >(unsigned int*)
  [47] Solution::uncaughtMobiles() const [1242] bool std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_not_empty_function<{lambda()#6}>({lambda()#6} const&) (functional) [994] Location* std::__uninitialized_move_if_noexcept_a<Location*, Location*, std::allocator<Location> >(Location*, Location*, Location*, std::allocator<Location>&)
  [40] Solution::lastInterceptionTime(Interceptor const&) const [1243] std::_Function_base::_Base_manager<main::{lambda()#6}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#6}> const&, std::integral_constant<bool, false>) (functional) [707] Solution::MobileNode* std::__uninitialized_move_if_noexcept_a<Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode> >(Solution::MobileNode*, Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
  [43] Solution::lastInterceptionTime(int) const [917] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [995] Solution::InterceptorNode* std::__uninitialized_move_if_noexcept_a<Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode> >(Solution::InterceptorNode*, Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
  [60] Solution::bestInterceptionCount() const [769] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::_Manager_operation) (functional) [708] Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&)
  [54] Solution::worstInterceptionTime() const [597] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_get_pointer(std::_Any_data const&) (functional) [1406] Problem** std::__uninitialized_move_if_noexcept_a<Problem**, Problem**, std::allocator<Problem*> >(Problem**, Problem**, Problem**, std::allocator<Problem*>&)
  [38] Solution::totalInterceptionCount() const [1244] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&) (functional) [1407] Solution** std::__uninitialized_move_if_noexcept_a<Solution**, Solution**, std::allocator<Solution*> >(Solution**, Solution**, Solution**, std::allocator<Solution*>&)
  [19] Solution::end(Interceptor const&) const [1245] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_init_functor(std::_Any_data&, {lambda()#7}&&, std::integral_constant<bool, false>) (functional) [996] Interceptor const** std::__uninitialized_move_if_noexcept_a<Interceptor const**, Interceptor const**, std::allocator<Interceptor const*> >(Interceptor const**, Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&)
  [44] Solution::begin(Interceptor const&) const [1246] bool std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_not_empty_function<{lambda()#7}>({lambda()#7} const&) (functional) [1408] std::vector<double, std::allocator<double> >* std::__uninitialized_move_if_noexcept_a<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
 [137] Solution::first() const [1247] std::_Function_base::_Base_manager<main::{lambda()#7}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#7}> const&, std::integral_constant<bool, false>) (functional) [709] double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  [21] Solution::mobile(unsigned int) const [918] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [710] unsigned int* std::__uninitialized_move_if_noexcept_a<unsigned int*, unsigned int*, std::allocator<unsigned int> >(unsigned int*, unsigned int*, unsigned int*, std::allocator<unsigned int>&)
  [99] Solution::problem() const [770] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::_Manager_operation) (functional) [268] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
   [3] Solution::evaluate(Location const&, double, Interceptor const&, Mobile const&, Mobile const&) const [660] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_get_pointer(std::_Any_data const&) (functional) [1409] void std::iota<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, int)
  [46] Solution::isCaught(Mobile const&) const [1248] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&) (functional) [793] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > std::move<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [850] __gnu_cxx::new_allocator<Interceptor>::max_size() const [1249] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_init_functor(std::_Any_data&, {lambda()#8}&&, std::integral_constant<bool, false>) (functional) [1410] std::remove_reference<Location&>::type&& std::move<Location&>(Location&)
 [851] __gnu_cxx::new_allocator<Depot>::max_size() const [1250] bool std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_not_empty_function<{lambda()#8}>({lambda()#8} const&) (functional) [520] std::remove_reference<Solution::MobileNode&>::type&& std::move<Solution::MobileNode&>(Solution::MobileNode&)
 [852] __gnu_cxx::new_allocator<Mobile>::max_size() const [1251] std::_Function_base::_Base_manager<main::{lambda()#8}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#8}> const&, std::integral_constant<bool, false>) (functional) [1411] std::remove_reference<Solution::InterceptorNode&>::type&& std::move<Solution::InterceptorNode&>(Solution::InterceptorNode&)
 [534] __gnu_cxx::new_allocator<Location>::max_size() const [919] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [178] std::remove_reference<Move*&>::type&& std::move<Move*&>(Move*&)
 [275] __gnu_cxx::new_allocator<Solution::MobileNode>::max_size() const [771] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::_Manager_operation) (functional) [997] std::remove_reference<Interceptor const*&>::type&& std::move<Interceptor const*&>(Interceptor const*&)
 [316] __gnu_cxx::new_allocator<Solution::InterceptorNode>::max_size() const [772] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_get_pointer(std::_Any_data const&) (functional) [794] std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) (move.h)
 [286] __gnu_cxx::new_allocator<Move*>::max_size() const [1252] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&) (functional) [795] std::remove_reference<main::{lambda()#12}&>::type&& std::move<main::{lambda()#12}&>(std::remove_reference&&) (move.h)
 [729] __gnu_cxx::new_allocator<Problem*>::max_size() const [1253] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_init_functor(std::_Any_data&, {lambda()#9}&&, std::integral_constant<bool, false>) (functional) [796] std::remove_reference<main::{lambda()#13}&>::type&& std::move<main::{lambda()#13}&>(std::remove_reference&&) (move.h)
 [730] __gnu_cxx::new_allocator<Solution*>::max_size() const [1254] bool std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_not_empty_function<{lambda()#9}>({lambda()#9} const&) (functional) [797] std::remove_reference<main::{lambda()#14}&>::type&& std::move<main::{lambda()#14}&>(std::remove_reference&&) (move.h)
 [535] __gnu_cxx::new_allocator<Interceptor const*>::max_size() const [1255] std::_Function_base::_Base_manager<main::{lambda()#9}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#9}> const&, std::integral_constant<bool, false>) (functional) [798] std::remove_reference<main::{lambda()#15}&>::type&& std::move<main::{lambda()#15}&>(std::remove_reference&&) (move.h)
 [1096] __gnu_cxx::new_allocator<char const*>::max_size() const [920] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [799] std::remove_reference<main::{lambda()#16}&>::type&& std::move<main::{lambda()#16}&>(std::remove_reference&&) (move.h)
 [731] __gnu_cxx::new_allocator<std::string>::max_size() const [773] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::_Manager_operation) (functional) [800] std::remove_reference<main::{lambda()#3}&>::type&& std::move<main::{lambda()#3}&>(std::remove_reference&&) (move.h)
 [405] __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >::max_size() const [598] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_get_pointer(std::_Any_data const&) (functional) [801] std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) (move.h)
 [732] __gnu_cxx::new_allocator<std::vector<double, std::allocator<double> > >::max_size() const [1256] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&) (functional) [802] std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) (move.h)
 [1097] __gnu_cxx::new_allocator<std::function<Move* ()> >::max_size() const [1257] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_init_functor(std::_Any_data&, {lambda()#10}&&, std::integral_constant<bool, false>) (functional) [803] std::remove_reference<main::{lambda()#6}&>::type&& std::move<main::{lambda()#6}&>(std::remove_reference&&) (move.h)
 [350] __gnu_cxx::new_allocator<double>::max_size() const [1258] bool std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_not_empty_function<{lambda()#10}>({lambda()#10} const&) (functional) [804] std::remove_reference<main::{lambda()#7}&>::type&& std::move<main::{lambda()#7}&>(std::remove_reference&&) (move.h)
 [214] __gnu_cxx::new_allocator<unsigned int>::max_size() const [1259] std::_Function_base::_Base_manager<main::{lambda()#10}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#10}> const&, std::integral_constant<bool, false>) (functional) [805] std::remove_reference<main::{lambda()#8}&>::type&& std::move<main::{lambda()#8}&>(std::remove_reference&&) (move.h)
 [247] __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_ptr() const [921] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [806] std::remove_reference<main::{lambda()#9}&>::type&& std::move<main::{lambda()#9}&>(std::remove_reference&&) (move.h)
 [248] __gnu_cxx::__aligned_buffer<std::pair<char const* const, BenchmarkResult> >::_M_addr() const [774] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::_Manager_operation) (functional) [807] std::remove_reference<main::{lambda()#10}&>::type&& std::move<main::{lambda()#10}&>(std::remove_reference&&) (move.h)
 [853] __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [775] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_get_pointer(std::_Any_data const&) (functional) [808] std::remove_reference<main::{lambda()#11}&>::type&& std::move<main::{lambda()#11}&>(std::remove_reference&&) (move.h)
 [854] __gnu_cxx::__normal_iterator<Interceptor*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator-(long) const [1260] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&) (functional) [809] std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) (move.h)
 [406] __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator*() const [1261] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_init_functor(std::_Any_data&, {lambda()#11}&&, std::integral_constant<bool, false>) (functional) [1412] std::remove_reference<double&>::type&& std::move<double&>(double&)
 [407] __gnu_cxx::__normal_iterator<Location*, std::vector<Location, std::allocator<Location> > >::operator-(long) const [1262] bool std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_not_empty_function<{lambda()#11}>({lambda()#11} const&) (functional) [145] std::remove_reference<unsigned int&>::type&& std::move<unsigned int&>(unsigned int&)
  [87] __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::base() const [1263] std::_Function_base::_Base_manager<main::{lambda()#11}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#11}> const&, std::integral_constant<bool, false>) (functional) [159] void std::swap<unsigned int>(unsigned int&, unsigned int&)
  [89] __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator*() const [922] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) (functional) [998] double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
 [287] __gnu_cxx::__normal_iterator<Interceptor const*, std::vector<Interceptor, std::allocator<Interceptor> > >::operator->() const [776] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::_Manager_operation) (functional) [1413] unsigned int* std::fill_n<unsigned int*, unsigned long, unsigned int>(unsigned int*, unsigned long, unsigned int const&)
  [86] __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::base() const [514] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) (functional) [311] BenchmarkResult&& std::forward<BenchmarkResult>(std::remove_reference<BenchmarkResult>::type&)
  [97] __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator*() const [1264] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&) (functional) [1414] Location&& std::forward<Location>(std::remove_reference<Location>::type&)
 [408] __gnu_cxx::__normal_iterator<Mobile const*, std::vector<Mobile, std::allocator<Mobile> > >::operator->() const [1265] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, false>) (functional) [521] Solution::MobileNode&& std::forward<Solution::MobileNode>(std::remove_reference<Solution::MobileNode>::type&)
 [165] __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::base() const [1266] bool std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_not_empty_function<{lambda()#1}>({lambda()#1} const&) (functional) [1415] Solution::InterceptorNode&& std::forward<Solution::InterceptorNode>(std::remove_reference<Solution::InterceptorNode>::type&)
 [215] __gnu_cxx::__normal_iterator<Solution::MobileNode const*, std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> > >::operator*() const [1267] std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<main::{lambda()#1}> const&, std::integral_constant<bool, false>) (functional) [154] Move*&& std::forward<Move*>(std::remove_reference<Move*>::type&)
 [204] __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::base() const [254] std::_Function_base::_Function_base() [616] Problem*&& std::forward<Problem*>(std::remove_reference<Problem*>::type&)
 [288] __gnu_cxx::__normal_iterator<Solution::InterceptorNode const*, std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> > >::operator*() const [255] std::_Function_base::~_Function_base() [617] Solution*&& std::forward<Solution*>(std::remove_reference<Solution*>::type&)
 [161] __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::base() const [75] std::numeric_limits<double>::infinity() [454] Interceptor const*&& std::forward<Interceptor const*>(std::remove_reference<Interceptor const*>::type&)
 [187] __gnu_cxx::__normal_iterator<Move* const*, std::vector<Move*, std::allocator<Move*> > >::operator*() const [1268] std::allocator_traits<std::allocator<Interceptor> >::deallocate(std::allocator<Interceptor>&, Interceptor*, unsigned long) [455] char const*&& std::forward<char const*>(std::remove_reference<char const*>::type&)
 [142] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [1269] unsigned long std::allocator_traits<std::allocator<Interceptor> >::_S_max_size<std::allocator<Interceptor> const, void>(std::allocator<Interceptor> const&, int) [492] Depot& std::forward<Depot&>(std::remove_reference<Depot&>::type&)
 [150] __gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [923] std::enable_if<std::__and_<std::allocator_traits<std::allocator<Interceptor> >::__construct_helper<Interceptor, Depot&, double&, unsigned int&, double&>::type>::value, void>::type std::allocator_traits<std::allocator<Interceptor> >::_S_construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [456] Interceptor const& std::forward<Interceptor const&>(std::remove_reference<Interceptor const&>::type&)
 [162] __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::base() const [1270] std::allocator_traits<std::allocator<Interceptor> >::allocate(std::allocator<Interceptor>&, unsigned long) [272] Mobile const& std::forward<Mobile const&>(std::remove_reference<Mobile const&>::type&)
 [188] __gnu_cxx::__normal_iterator<Move**, std::vector<Move*, std::allocator<Move*> > >::operator*() const [1271] std::allocator_traits<std::allocator<Interceptor> >::max_size(std::allocator<Interceptor> const&) [493] Location const& std::forward<Location const&>(std::remove_reference<Location const&>::type&)
 [1098] __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator*() const [924] decltype (_S_construct({parm#1}, {parm#2}, (forward<Depot&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}), (forward<double&>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor> >::construct<Interceptor, Depot&, double&, unsigned int&, double&>(std::allocator<Interceptor>&, Interceptor*, Depot&, double&, unsigned int&, double&) [217] Solution::MobileNode const& std::forward<Solution::MobileNode const&>(std::remove_reference<Solution::MobileNode const&>::type&)
 [1099] __gnu_cxx::__normal_iterator<Problem**, std::vector<Problem*, std::allocator<Problem*> > >::operator-(long) const [1272] std::allocator_traits<std::allocator<Depot> >::deallocate(std::allocator<Depot>&, Depot*, unsigned long) [296] Solution::InterceptorNode const& std::forward<Solution::InterceptorNode const&>(std::remove_reference<Solution::InterceptorNode const&>::type&)
 [236] __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::base() const [1273] unsigned long std::allocator_traits<std::allocator<Depot> >::_S_max_size<std::allocator<Depot> const, void>(std::allocator<Depot> const&, int) [200] Move* const& std::forward<Move* const&>(std::remove_reference<Move* const&>::type&)
 [409] __gnu_cxx::__normal_iterator<Solution**, std::vector<Solution*, std::allocator<Solution*> > >::operator*() const [925] std::enable_if<std::__and_<std::allocator_traits<std::allocator<Depot> >::__construct_helper<Depot, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Depot> >::_S_construct<Depot, double&, double&, unsigned int&>(std::allocator<Depot>&, Depot*, double&, double&, unsigned int&) [1416] char const* const& std::forward<char const* const&>(std::remove_reference<char const* const&>::type&)
 [109] __gnu_cxx::__normal_iterator<Mobile const**, std::vector<Mobile const*, std::allocator<Mobile const*> > >::base() const [1274] std::allocator_traits<std::allocator<Depot> >::allocate(std::allocator<Depot>&, unsigned long) [810] std::string const& std::forward<std::string const&>(std::remove_reference<std::string const&>::type&)
 [637] __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::base() const [1275] std::allocator_traits<std::allocator<Depot> >::max_size(std::allocator<Depot> const&) [322] std::function<Move* ()> const& std::forward<std::function<Move* ()> const&>(std::remove_reference<std::function<Move* ()> const&>::type&)
 [1100] __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator*() const [926] _ZNSt16allocator_traitsISaI5DepotEE9constructIS0_IRdS4_RjEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [153] unsigned int const& std::forward<unsigned int const&>(std::remove_reference<unsigned int const&>::type&)
 [536] __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::base() const [1276] std::allocator_traits<std::allocator<Mobile> >::deallocate(std::allocator<Mobile>&, Mobile*, unsigned long) [457] char const*& std::forward<char const*&>(std::remove_reference<char const*&>::type&)
 [855] __gnu_cxx::__normal_iterator<std::vector<double, std::allocator<double> >*, std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > >::operator*() const [1277] unsigned long std::allocator_traits<std::allocator<Mobile> >::_S_max_size<std::allocator<Mobile> const, void>(std::allocator<Mobile> const&, int) [312] std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*& std::forward<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*&>::type&)
 [140] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::base() const [599] std::enable_if<std::__and_<std::allocator_traits<std::allocator<Mobile> >::__construct_helper<Mobile, double&, double&, double&, double&, unsigned int&>::type>::value, void>::type std::allocator_traits<std::allocator<Mobile> >::_S_construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [167] double& std::forward<double&>(std::remove_reference<double&>::type&)
 [144] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator*() const [1278] std::allocator_traits<std::allocator<Mobile> >::allocate(std::allocator<Mobile>&, unsigned long) [252] unsigned int& std::forward<unsigned int&>(std::remove_reference<unsigned int&>::type&)
 [157] __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >::operator+(long) const [1279] std::allocator_traits<std::allocator<Mobile> >::max_size(std::allocator<Mobile> const&) [202] std::pair<char const*, BenchmarkResult>&& std::forward<std::pair<char const*, BenchmarkResult> >(std::remove_reference<std::pair<char const*, BenchmarkResult> >::type&)
 [249] std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()(std::pair<char const* const, BenchmarkResult> const&) const [600] decltype (_S_construct({parm#1}, {parm#2}, (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<double&>)({parm#3}), (forward<unsigned int&>)({parm#3}))) std::allocator_traits<std::allocator<Mobile> >::construct<Mobile, double&, double&, double&, double&, unsigned int&>(std::allocator<Mobile>&, Mobile*, double&, double&, double&, double&, unsigned int&) [389] double&& std::forward<double>(std::remove_reference<double>::type&)
 [313] std::pair<char const*, BenchmarkResult>::first_type& std::_Select1st<std::pair<char const* const, BenchmarkResult> >::operator()<std::pair<char const*, BenchmarkResult> >(std::pair<char const*, BenchmarkResult>&) const [927] std::allocator_traits<std::allocator<Location> >::deallocate(std::allocator<Location>&, Location*, unsigned long) [155] unsigned int&& std::forward<unsigned int>(std::remove_reference<unsigned int>::type&)
 [1101] std::_Vector_base<Interceptor, std::allocator<Interceptor> >::_M_get_Tp_allocator() const [661] unsigned long std::allocator_traits<std::allocator<Location> >::_S_max_size<std::allocator<Location> const, void>(std::allocator<Location> const&, int) [999] void std::_Destroy<Interceptor>(Interceptor*)
 [1102] std::_Vector_base<Depot, std::allocator<Depot> >::_M_get_Tp_allocator() const [928] std::enable_if<std::__and_<std::allocator_traits<std::allocator<Location> >::__construct_helper<Location, Location const&>::type>::value, void>::type std::allocator_traits<std::allocator<Location> >::_S_construct<Location, Location const&>(std::allocator<Location>&, Location*, Location const&) [1000] void std::_Destroy<Depot>(Depot*)
 [1103] std::_Vector_base<Mobile, std::allocator<Mobile> >::_M_get_Tp_allocator() const [929] std::allocator_traits<std::allocator<Location> >::allocate(std::allocator<Location>&, unsigned long) [618] void std::_Destroy<Mobile>(Mobile*)
 [638] std::_Vector_base<Location, std::allocator<Location> >::_M_get_Tp_allocator() const [662] std::allocator_traits<std::allocator<Location> >::max_size(std::allocator<Location> const&) [1001] void std::_Destroy<Interceptor*>(Interceptor*, Interceptor*)
 [314] std::_Vector_base<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_get_Tp_allocator() const [930] _ZNSt16allocator_traitsISaI8LocationEE9constructIS0_IRKS0_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS1_PT_DpOS6_ [1002] void std::_Destroy<Interceptor*, Interceptor>(Interceptor*, Interceptor*, std::allocator<Interceptor>&)
 [328] std::_Vector_base<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_get_Tp_allocator() const [331] std::allocator_traits<std::allocator<Solution::MobileNode> >::deallocate(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, unsigned long) [1003] void std::_Destroy<Depot*>(Depot*, Depot*)
 [315] std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const [479] unsigned long std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_max_size<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, int) [1004] void std::_Destroy<Depot*, Depot>(Depot*, Depot*, std::allocator<Depot>&)
 [856] std::_Vector_base<Problem*, std::allocator<Problem*> >::_M_get_Tp_allocator() const [601] _ZNSt16allocator_traitsISaIN8Solution10MobileNodeEEE12_S_constructIS1_IRK6MobileEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [1005] void std::_Destroy<Mobile*>(Mobile*, Mobile*)
 [857] std::_Vector_base<Solution*, std::allocator<Solution*> >::_M_get_Tp_allocator() const [373] std::allocator_traits<std::allocator<Solution::MobileNode> >::select_on_container_copy_construction(std::allocator<Solution::MobileNode> const&) [1006] void std::_Destroy<Mobile*, Mobile>(Mobile*, Mobile*, std::allocator<Mobile>&)
 [639] std::_Vector_base<Interceptor const*, std::allocator<Interceptor const*> >::_M_get_Tp_allocator() const [332] std::allocator_traits<std::allocator<Solution::MobileNode> >::allocate(std::allocator<Solution::MobileNode>&, unsigned long) [811] void std::_Destroy<Location*>(Location*, Location*)
 [858] std::_Vector_base<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_get_Tp_allocator() const [480] std::allocator_traits<std::allocator<Solution::MobileNode> >::max_size(std::allocator<Solution::MobileNode> const&) [812] void std::_Destroy<Location*, Location>(Location*, Location*, std::allocator<Location>&)
 [467] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [374] std::allocator<Solution::MobileNode> const std::allocator_traits<std::allocator<Solution::MobileNode> >::_S_select<std::allocator<Solution::MobileNode> const, void>(std::allocator<Solution::MobileNode> const&, ...) [323] void std::_Destroy<Solution::MobileNode*>(Solution::MobileNode*, Solution::MobileNode*)
 [219] std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator() const [602] decltype (_S_construct({parm#1}, {parm#2}, (forward<Mobile const&>)({parm#3}))) std::allocator_traits<std::allocator<Solution::MobileNode> >::construct<Solution::MobileNode, Mobile const&>(std::allocator<Solution::MobileNode>&, Solution::MobileNode*, Mobile const&) [324] void std::_Destroy<Solution::MobileNode*, Solution::MobileNode>(Solution::MobileNode*, Solution::MobileNode*, std::allocator<Solution::MobileNode>&)
 [250] std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >::_M_valptr() const [347] std::allocator_traits<std::allocator<Solution::InterceptorNode> >::deallocate(std::allocator<Solution::InterceptorNode>&, Solution::InterceptorNode*, unsigned long) [341] void std::_Destroy<Solution::InterceptorNode*>(Solution::InterceptorNode*, Solution::InterceptorNode*)
 [859] std::move_iterator<Interceptor*>::base() const [663] unsigned long std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_max_size<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, int) [342] void std::_Destroy<Solution::InterceptorNode*, Solution::InterceptorNode>(Solution::InterceptorNode*, Solution::InterceptorNode*, std::allocator<Solution::InterceptorNode>&)
 [860] std::move_iterator<Mobile*>::base() const [931] _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE12_S_constructIS1_IRK11InterceptorEEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PSB_DpOSC_ [269] void std::_Destroy<Move**>(Move**, Move**)
 [537] std::move_iterator<Location*>::base() const [375] std::allocator_traits<std::allocator<Solution::InterceptorNode> >::select_on_container_copy_construction(std::allocator<Solution::InterceptorNode> const&) [270] void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&)
 [1104] std::move_iterator<Location*>::operator*() const [348] std::allocator_traits<std::allocator<Solution::InterceptorNode> >::allocate(std::allocator<Solution::InterceptorNode>&, unsigned long) [1007] void std::_Destroy<Problem**>(Problem**, Problem**)
 [289] std::move_iterator<Solution::MobileNode*>::base() const [664] std::allocator_traits<std::allocator<Solution::InterceptorNode> >::max_size(std::allocator<Solution::InterceptorNode> const&) [1008] void std::_Destroy<Problem**, Problem*>(Problem**, Problem**, std::allocator<Problem*>&)
 [501] std::move_iterator<Solution::MobileNode*>::operator*() const [376] std::allocator<Solution::InterceptorNode> const std::allocator_traits<std::allocator<Solution::InterceptorNode> >::_S_select<std::allocator<Solution::InterceptorNode> const, void>(std::allocator<Solution::InterceptorNode> const&, ...) [1009] void std::_Destroy<Solution**>(Solution**, Solution**)
 [538] std::move_iterator<Solution::InterceptorNode*>::base() const [932] _ZNSt16allocator_traitsISaIN8Solution15InterceptorNodeEEE9constructIS1_IRK11InterceptorEEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS8_ [1010] void std::_Destroy<Solution**, Solution*>(Solution**, Solution**, std::allocator<Solution*>&)
 [1105] std::move_iterator<Solution::InterceptorNode*>::operator*() const [339] std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long) [711] void std::_Destroy<Interceptor const**>(Interceptor const**, Interceptor const**)
 [290] std::move_iterator<Move**>::base() const [481] unsigned long std::allocator_traits<std::allocator<Move*> >::_S_max_size<std::allocator<Move*> const, void>(std::allocator<Move*> const&, int) [712] void std::_Destroy<Interceptor const**, Interceptor const*>(Interceptor const**, Interceptor const**, std::allocator<Interceptor const*>&)
 [502] std::move_iterator<Move**>::operator*() const [190] _ZNSt16allocator_traitsISaIP4MoveEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [131] void std::_Destroy<Mobile const**>(Mobile const**, Mobile const**)
 [861] std::move_iterator<Problem**>::base() const [418] std::allocator_traits<std::allocator<Move*> >::select_on_container_copy_construction(std::allocator<Move*> const&) [132] void std::_Destroy<Mobile const**, Mobile const*>(Mobile const**, Mobile const**, std::allocator<Mobile const*>&)
 [862] std::move_iterator<Solution**>::base() const [340] std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long) [1417] void std::_Destroy<char const**>(char const**, char const**)
 [640] std::move_iterator<Interceptor const**>::base() const [482] std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&) [1418] void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&)
 [863] std::move_iterator<std::vector<double, std::allocator<double> >*>::base() const [419] std::allocator<Move*> const std::allocator_traits<std::allocator<Move*> >::_S_select<std::allocator<Move*> const, void>(std::allocator<Move*> const&, ...) [813] void std::_Destroy<std::string*>(std::string*, std::string*)
 [410] std::move_iterator<double*>::base() const [191] _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [814] void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>&)
 [1106] std::move_iterator<double*>::operator*() const [1280] std::allocator_traits<std::allocator<Problem*> >::deallocate(std::allocator<Problem*>&, Problem**, unsigned long) [1011] void std::_Destroy<std::vector<double, std::allocator<double> >*>(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*)
 [291] std::move_iterator<unsigned int*>::base() const [933] unsigned long std::allocator_traits<std::allocator<Problem*> >::_S_max_size<std::allocator<Problem*> const, void>(std::allocator<Problem*> const&, int) [1012] void std::_Destroy<std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*, std::vector<double, std::allocator<double> >*, std::allocator<std::vector<double, std::allocator<double> > >&)
 [503] std::move_iterator<unsigned int*>::operator*() const [1281] _ZNSt16allocator_traitsISaIP7ProblemEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrSt6__and_IINS3_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS2_PS8_DpOS9_ [1419] void std::_Destroy<std::function<Move* ()>*>(std::function<Move* ()>*, std::function<Move* ()>*)
 [170] std::_Function_base::_M_empty() const [1282] std::allocator_traits<std::allocator<Problem*> >::allocate(std::allocator<Problem*>&, unsigned long) [1420] void std::_Destroy<std::function<Move* ()>*, std::function<Move* ()> >(std::function<Move* ()>*, std::function<Move* ()>*, std::allocator<std::function<Move* ()> >&)
 [1107] std::initializer_list<char const*>::end() const [934] std::allocator_traits<std::allocator<Problem*> >::max_size(std::allocator<Problem*> const&) [522] void std::_Destroy<double*>(double*, double*)
 [1108] std::initializer_list<char const*>::size() const [1283] decltype (_S_construct({parm#1}, {parm#2}, (forward<Problem*>)({parm#3}))) std::allocator_traits<std::allocator<Problem*> >::construct<Problem*, Problem*>(std::allocator<Problem*>&, Problem**, Problem*&&) [523] void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
 [864] std::initializer_list<char const*>::begin() const [1284] std::allocator_traits<std::allocator<Solution*> >::deallocate(std::allocator<Solution*>&, Solution**, unsigned long) [209] void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)
 [733] std::initializer_list<std::string>::end() const [935] unsigned long std::allocator_traits<std::allocator<Solution*> >::_S_max_size<std::allocator<Solution*> const, void>(std::allocator<Solution*> const&, int) [210] void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)
 [734] std::initializer_list<std::string>::size() const [1285] std::enable_if<std::__and_<std::allocator_traits<std::allocator<Solution*> >::__construct_helper<Solution*, Solution*>::type>::value, void>::type std::allocator_traits<std::allocator<Solution*> >::_S_construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [815] void std::_Destroy<std::string>(std::string*)
 [539] std::initializer_list<std::string>::begin() const [1286] std::allocator_traits<std::allocator<Solution*> >::allocate(std::allocator<Solution*>&, unsigned long) [1013] void std::_Destroy<std::vector<double, std::allocator<double> > >(std::vector<double, std::allocator<double> >*)
 [1109] std::initializer_list<std::function<Move* ()> >::end() const [936] std::allocator_traits<std::allocator<Solution*> >::max_size(std::allocator<Solution*> const&) [325] void std::_Destroy<std::function<Move* ()> >(std::function<Move* ()>*)
 [1110] std::initializer_list<std::function<Move* ()> >::size() const [1287] decltype (_S_construct({parm#1}, {parm#2}, (forward<Solution*>)({parm#3}))) std::allocator_traits<std::allocator<Solution*> >::construct<Solution*, Solution*>(std::allocator<Solution*>&, Solution**, Solution*&&) [1421] std::iterator_traits<char const* const*>::difference_type std::distance<char const* const*>(char const* const*, char const* const*)
 [865] std::initializer_list<std::function<Move* ()> >::begin() const [937] std::allocator_traits<std::allocator<Interceptor const*> >::deallocate(std::allocator<Interceptor const*>&, Interceptor const**, unsigned long) [816] std::iterator_traits<std::string const*>::difference_type std::distance<std::string const*>(std::string const*, std::string const*)
 [866] std::initializer_list<unsigned int>::end() const [665] unsigned long std::allocator_traits<std::allocator<Interceptor const*> >::_S_max_size<std::allocator<Interceptor const*> const, void>(std::allocator<Interceptor const*> const&, int) [1422] std::iterator_traits<std::function<Move* ()> const*>::difference_type std::distance<std::function<Move* ()> const*>(std::function<Move* ()> const*, std::function<Move* ()> const*)
 [867] std::initializer_list<unsigned int>::size() const [938] _ZNSt16allocator_traitsISaIPK11InterceptorEE12_S_constructIS2_IS2_EEENSt9enable_ifIXsrSt6__and_IINS4_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS3_PS9_DpOSA_ [1014] std::iterator_traits<unsigned int const*>::difference_type std::distance<unsigned int const*>(unsigned int const*, unsigned int const*)
 [641] std::initializer_list<unsigned int>::begin() const [939] std::allocator_traits<std::allocator<Interceptor const*> >::allocate(std::allocator<Interceptor const*>&, unsigned long) [13] std::isfinite(double)
 [360] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator!=(std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> > const&) const [666] std::allocator_traits<std::allocator<Interceptor const*> >::max_size(std::allocator<Interceptor const*> const&) [160] void std::iter_swap<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > > >(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
 [306] std::_Rb_tree_iterator<std::pair<char const* const, BenchmarkResult> >::operator->() const [940] decltype (_S_construct({parm#1}, {parm#2}, (forward<Interceptor const*>)({parm#3}))) std::allocator_traits<std::allocator<Interceptor const*> >::construct<Interceptor const*, Interceptor const*>(std::allocator<Interceptor const*>&, Interceptor const**, Interceptor const*&&) [1423] bool std::operator==<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&)
 [251] std::less<char const*>::operator()(char const* const&, char const* const&) const [1288] std::allocator_traits<std::allocator<char const*> >::deallocate(std::allocator<char const*>&, char const**, unsigned long) [1424] bool std::operator==<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&)
 [540] std::vector<Interceptor, std::allocator<Interceptor> >::end() const [1289] std::allocator_traits<std::allocator<char const*> >::allocate(std::allocator<char const*>&, unsigned long) [817] bool std::operator==<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&)
 [103] std::vector<Interceptor, std::allocator<Interceptor> >::cend() const [777] std::allocator_traits<std::allocator<std::string> >::deallocate(std::allocator<std::string>&, std::string*, unsigned long) [390] bool std::operator==<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&)
  [26] std::vector<Interceptor, std::allocator<Interceptor> >::size() const [778] std::allocator_traits<std::allocator<std::string> >::allocate(std::allocator<std::string>&, unsigned long) [818] bool std::operator==<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&)
 [868] std::vector<Interceptor, std::allocator<Interceptor> >::begin() const [420] std::enable_if<std::__and_<std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::__destroy_helper<std::pair<char const* const, BenchmarkResult> >::type>::value, void>::type std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::_S_destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [391] bool std::operator==<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&)
 [113] std::vector<Interceptor, std::allocator<Interceptor> >::cbegin() const [421] std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::deallocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> >*, unsigned long) [1425] bool std::operator==<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&)
 [1111] std::vector<Interceptor, std::allocator<Interceptor> >::capacity() const [422] _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKPKc15BenchmarkResultEEEE12_S_constructIS6_IS1_IS3_S5_EEEENSt9enable_ifIXsrSt6__and_IINS9_18__construct_helperIT_IDpT0_EE4typeEEE5valueEvE4typeERS8_PSF_DpOSG_ [1426] bool std::operator==<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&)
 [1112] std::vector<Interceptor, std::allocator<Interceptor> >::max_size() const [423] void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::destroy<std::pair<char const* const, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*) [1015] bool std::operator==<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&)
  [18] std::vector<Interceptor, std::allocator<Interceptor> >::operator[](unsigned long) const [424] std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, unsigned long) [1427] bool std::operator==<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&)
 [1113] std::vector<Depot, std::allocator<Depot> >::size() const [425] decltype (_S_construct({parm#1}, {parm#2}, (forward<std::pair<char const*, BenchmarkResult> >)({parm#3}))) std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > > >::construct<std::pair<char const* const, BenchmarkResult>, std::pair<char const*, BenchmarkResult> >(std::allocator<std::_Rb_tree_node<std::pair<char const* const, BenchmarkResult> > >&, std::pair<char const* const, BenchmarkResult>*, std::pair<char const*, BenchmarkResult>&&) [619] bool std::operator==<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&)
 [1114] std::vector<Depot, std::allocator<Depot> >::capacity() const [1290] std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::deallocate(std::allocator<std::vector<double, std::allocator<double> > >&, std::vector<double, std::allocator<double> >*, unsigned long) [392] bool std::operator==<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&)
 [1115] std::vector<Depot, std::allocator<Depot> >::max_size() const [941] unsigned long std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::_S_max_size<std::allocator<std::vector<double, std::allocator<double> > > const, void>(std::allocator<std::vector<double, std::allocator<double> > > const&, int) [1428] bool std::operator!=<Interceptor*>(std::move_iterator<Interceptor*> const&, std::move_iterator<Interceptor*> const&)
  [91] std::vector<Mobile, std::allocator<Mobile> >::end() const [1291] std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::allocate(std::allocator<std::vector<double, std::allocator<double> > >&, unsigned long) [1429] bool std::operator!=<Mobile*>(std::move_iterator<Mobile*> const&, std::move_iterator<Mobile*> const&)
 [276] std::vector<Mobile, std::allocator<Mobile> >::size() const [942] std::allocator_traits<std::allocator<std::vector<double, std::allocator<double> > > >::max_size(std::allocator<std::vector<double, std::allocator<double> > > const&) [819] bool std::operator!=<Location*>(std::move_iterator<Location*> const&, std::move_iterator<Location*> const&)
 [114] std::vector<Mobile, std::allocator<Mobile> >::begin() const [1292] std::allocator_traits<std::allocator<std::function<Move* ()> > >::deallocate(std::allocator<std::function<Move* ()> >&, std::function<Move* ()>*, unsigned long) [393] bool std::operator!=<Solution::MobileNode*>(std::move_iterator<Solution::MobileNode*> const&, std::move_iterator<Solution::MobileNode*> const&)
 [1116] std::vector<Mobile, std::allocator<Mobile> >::capacity() const [1293] std::allocator_traits<std::allocator<std::function<Move* ()> > >::allocate(std::allocator<std::function<Move* ()> >&, unsigned long) [820] bool std::operator!=<Solution::InterceptorNode*>(std::move_iterator<Solution::InterceptorNode*> const&, std::move_iterator<Solution::InterceptorNode*> const&)
 [1117] std::vector<Mobile, std::allocator<Mobile> >::max_size() const [667] std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [394] bool std::operator!=<Move**>(std::move_iterator<Move**> const&, std::move_iterator<Move**> const&)
  [33] std::vector<Mobile, std::allocator<Mobile> >::operator[](unsigned long) const [483] unsigned long std::allocator_traits<std::allocator<double> >::_S_max_size<std::allocator<double> const, void>(std::allocator<double> const&, int) [1430] bool std::operator!=<Problem**>(std::move_iterator<Problem**> const&, std::move_iterator<Problem**> const&)
 [869] std::vector<Location, std::allocator<Location> >::_M_check_len(unsigned long, char const*) const [943] std::enable_if<std::__and_<std::allocator_traits<std::allocator<double> >::__construct_helper<double, double>::type>::value, void>::type std::allocator_traits<std::allocator<double> >::_S_construct<double, double>(std::allocator<double>&, double*, double&&) [1431] bool std::operator!=<Solution**>(std::move_iterator<Solution**> const&, std::move_iterator<Solution**> const&)
 [411] std::vector<Location, std::allocator<Location> >::size() const [668] std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [1016] bool std::operator!=<Interceptor const**>(std::move_iterator<Interceptor const**> const&, std::move_iterator<Interceptor const**> const&)
 [642] std::vector<Location, std::allocator<Location> >::max_size() const [484] std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [1432] bool std::operator!=<std::vector<double, std::allocator<double> >*>(std::move_iterator<std::vector<double, std::allocator<double> >*> const&, std::move_iterator<std::vector<double, std::allocator<double> >*> const&)
 [643] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::_M_check_len(unsigned long, char const*) const [944] decltype (_S_construct({parm#1}, {parm#2}, (forward<double>)({parm#3}))) std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [620] bool std::operator!=<double*>(std::move_iterator<double*> const&, std::move_iterator<double*> const&)
 [361] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::end() const [603] std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__destroy_helper<unsigned int>::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [395] bool std::operator!=<unsigned int*>(std::move_iterator<unsigned int*> const&, std::move_iterator<unsigned int*> const&)
 [259] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::size() const [224] std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long) [621] main::{lambda()#2}::operator()() const (VNDBenchmark.cpp)
 [362] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::begin() const [485] unsigned long std::allocator_traits<std::allocator<unsigned int> >::_S_max_size<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, int) [494] main::{lambda()#12}::operator()() const (VNDBenchmark.cpp)
 [468] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::max_size() const [192] std::enable_if<std::__and_<std::allocator_traits<std::allocator<unsigned int> >::__construct_helper<unsigned int<unsigned int> >::type>::value, void>::type std::allocator_traits<std::allocator<unsigned int> >::_S_construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [622] main::{lambda()#13}::operator()() const (VNDBenchmark.cpp)
  [22] std::vector<Solution::MobileNode, std::allocator<Solution::MobileNode> >::operator[](unsigned long) const [238] std::allocator_traits<std::allocator<unsigned int> >::select_on_container_copy_construction(std::allocator<unsigned int> const&) [713] main::{lambda()#14}::operator()() const (VNDBenchmark.cpp)
 [870] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::_M_check_len(unsigned long, char const*) const [604] void std::allocator_traits<std::allocator<unsigned int> >::destroy<unsigned int>(std::allocator<unsigned int>&, unsigned int*) [623] main::{lambda()#15}::operator()() const (VNDBenchmark.cpp)
 [363] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::end() const [225] std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned long) [558] main::{lambda()#16}::operator()() const (VNDBenchmark.cpp)
 [298] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::size() const [486] std::allocator_traits<std::allocator<unsigned int> >::max_size(std::allocator<unsigned int> const&) [524] main::{lambda()#3}::operator()() const (VNDBenchmark.cpp)
 [364] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::begin() const [239] std::allocator<unsigned int> const std::allocator_traits<std::allocator<unsigned int> >::_S_select<std::allocator<unsigned int> const, void>(std::allocator<unsigned int> const&, ...) [1017] main::{lambda()#4}::operator()() const (VNDBenchmark.cpp)
 [644] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::max_size() const [193] decltype (_S_construct({parm#1}, {parm#2}, (forward<unsigned int>)({parm#3}))) std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int, unsigned int>(std::allocator<unsigned int>&, unsigned int*, unsigned int&&) [624] main::{lambda()#5}::operator()() const (VNDBenchmark.cpp)
  [73] std::vector<Solution::InterceptorNode, std::allocator<Solution::InterceptorNode> >::operator[](unsigned long) const [605] std::_Function_handler<Move* (), main::{lambda()#2}>::_M_invoke(std::_Any_data const&) (functional) [559] main::{lambda()#6}::operator()() const (VNDBenchmark.cpp)
 [645] std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const [487] std::_Function_handler<Move* (), main::{lambda()#12}>::_M_invoke(std::_Any_data const&) (functional) [625] main::{lambda()#7}::operator()() const (VNDBenchmark.cpp)
 [412] std::vector<Move*, std::allocator<Move*> >::end() const [606] std::_Function_handler<Move* (), main::{lambda()#13}>::_M_invoke(std::_Any_data const&) (functional) [714] main::{lambda()#8}::operator()() const (VNDBenchmark.cpp)
  [98] std::vector<Move*, std::allocator<Move*> >::size() const [669] std::_Function_handler<Move* (), main::{lambda()#14}>::_M_invoke(std::_Any_data const&) (functional) [821] main::{lambda()#9}::operator()() const (VNDBenchmark.cpp)
 [413] std::vector<Move*, std::allocator<Move*> >::begin() const [607] std::_Function_handler<Move* (), main::{lambda()#15}>::_M_invoke(std::_Any_data const&) (functional) [626] main::{lambda()#10}::operator()() const (VNDBenchmark.cpp)
 [469] std::vector<Move*, std::allocator<Move*> >::max_size() const [554] std::_Function_handler<Move* (), main::{lambda()#16}>::_M_invoke(std::_Any_data const&) (functional) [822] main::{lambda()#11}::operator()() const (VNDBenchmark.cpp)
 [1118] std::vector<Problem*, std::allocator<Problem*> >::_M_check_len(unsigned long, char const*) const [515] std::_Function_handler<Move* (), main::{lambda()#3}>::_M_invoke(std::_Any_data const&) (functional) [525] main::{lambda()#1}::operator()() const (VNDBenchmark.cpp)
 [504] std::vector<Problem*, std::allocator<Problem*> >::size() const [945] std::_Function_handler<Move* (), main::{lambda()#4}>::_M_invoke(std::_Any_data const&) (functional) [458] operator<<(std::ostream&, BenchmarkResult const&)
 [871] std::vector<Problem*, std::allocator<Problem*> >::max_size() const [608] std::_Function_handler<Move* (), main::{lambda()#5}>::_M_invoke(std::_Any_data const&) (functional) [143] operator new(unsigned long, void*)
